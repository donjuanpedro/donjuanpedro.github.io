{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/contact/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from 'react';\n\nexport default function UsesPage() {\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // Simulating form submission by logging the form data to the console\n    console.log('Email:', email);\n    console.log('Message:', message);\n\n    // Reset the form\n    setEmail('');\n    setMessage('');\n\n    // Ideally, you would send the form data to a backend service or email API\n    // Here you would use fetch() or axios() to send the data to your server\n    // Example:\n    // fetch('/api/contact', {\n    //   method: 'POST',\n    //   headers: { 'Content-Type': 'application/json' },\n    //   body: JSON.stringify({ email, message }),\n    // });\n  };\n\n  return (\n    <section>\n      <h1 className=\"font-medium text-2xl mb-8 tracking-tighter\">\n        Contact Me\n      </h1>\n      <form onSubmit={handleSubmit}>\n        <div className=\"mb-4\">\n          <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n            Email\n          </label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            required\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n          />\n        </div>\n        <div className=\"mb-4\">\n          <label htmlFor=\"message\" className=\"block text-sm font-medium text-gray-700\">\n            Message\n          </label>\n          <textarea\n            id=\"message\"\n            name=\"message\"\n            required\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n            rows=\"4\"\n          ></textarea>\n        </div>\n        <button\n          type=\"submit\"\n          className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n        >\n          Send\n        </button>\n      </form>\n    </section>\n  );\n}\n"],"names":[],"mappings":";;;;;;AAAA;;;AAIe,SAAS;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,+MAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,+MAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,eAAe,CAAC;QACpB,MAAM,cAAc;QAEpB,qEAAqE;QACrE,QAAQ,GAAG,CAAC,UAAU;QACtB,QAAQ,GAAG,CAAC,YAAY;QAExB,iBAAiB;QACjB,SAAS;QACT,WAAW;IAEX,0EAA0E;IAC1E,wEAAwE;IACxE,WAAW;IACX,0BAA0B;IAC1B,oBAAoB;IACpB,qDAAqD;IACrD,8CAA8C;IAC9C,MAAM;IACR;IAEA,qBACE,wPAAC;;0BACC,wPAAC;gBAAG,WAAU;0BAA6C;;;;;;0BAG3D,wPAAC;gBAAK,UAAU;;kCACd,wPAAC;wBAAI,WAAU;;0CACb,wPAAC;gCAAM,SAAQ;gCAAQ,WAAU;0CAA0C;;;;;;0CAG3E,wPAAC;gCACC,MAAK;gCACL,IAAG;gCACH,MAAK;gCACL,QAAQ;gCACR,OAAO;gCACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;gCACxC,WAAU;;;;;;;;;;;;kCAGd,wPAAC;wBAAI,WAAU;;0CACb,wPAAC;gCAAM,SAAQ;gCAAU,WAAU;0CAA0C;;;;;;0CAG7E,wPAAC;gCACC,IAAG;gCACH,MAAK;gCACL,QAAQ;gCACR,OAAO;gCACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;gCAC1C,WAAU;gCACV,MAAK;;;;;;;;;;;;kCAGT,wPAAC;wBACC,MAAK;wBACL,WAAU;kCACX;;;;;;;;;;;;;;;;;;AAMT"}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}