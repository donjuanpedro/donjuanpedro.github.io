{"version":3,"file":"app/api/auth/[...nextauth]/route.js","mappings":"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","sources":["webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/./node_modules/@auth/core/lib/cookie.js","webpack://_N_E/./node_modules/@auth/core/errors.js","webpack://_N_E/./node_modules/@auth/core/lib/assert.js","webpack://_N_E/./node_modules/@panva/hkdf/dist/web/runtime/hkdf.js","webpack://_N_E/./node_modules/@panva/hkdf/dist/web/index.js","webpack://_N_E/./node_modules/jose/dist/browser/runtime/webcrypto.js","webpack://_N_E/./node_modules/jose/dist/browser/runtime/digest.js","webpack://_N_E/./node_modules/jose/dist/browser/lib/buffer_utils.js","webpack://_N_E/./node_modules/jose/dist/browser/runtime/base64url.js","webpack://_N_E/./node_modules/jose/dist/browser/util/errors.js","webpack://_N_E/./node_modules/jose/dist/browser/runtime/random.js","webpack://_N_E/./node_modules/jose/dist/browser/lib/iv.js","webpack://_N_E/./node_modules/jose/dist/browser/lib/check_iv_length.js","webpack://_N_E/./node_modules/jose/dist/browser/runtime/check_cek_length.js","webpack://_N_E/./node_modules/jose/dist/browser/runtime/timing_safe_equal.js","webpack://_N_E/./node_modules/jose/dist/browser/lib/crypto_key.js","webpack://_N_E/./node_modules/jose/dist/browser/lib/invalid_key_input.js","webpack://_N_E/./node_modules/jose/dist/browser/runtime/is_key_like.js","webpack://_N_E/./node_modules/jose/dist/browser/runtime/decrypt.js","webpack://_N_E/./node_modules/jose/dist/browser/runtime/zlib.js","webpack://_N_E/./node_modules/jose/dist/browser/lib/is_disjoint.js","webpack://_N_E/./node_modules/jose/dist/browser/lib/is_object.js","webpack://_N_E/./node_modules/jose/dist/browser/runtime/bogus.js","webpack://_N_E/./node_modules/jose/dist/browser/runtime/aeskw.js","webpack://_N_E/./node_modules/jose/dist/browser/runtime/ecdhes.js","webpack://_N_E/./node_modules/jose/dist/browser/lib/check_p2s.js","webpack://_N_E/./node_modules/jose/dist/browser/runtime/pbes2kw.js","webpack://_N_E/./node_modules/jose/dist/browser/runtime/subtle_rsaes.js","webpack://_N_E/./node_modules/jose/dist/browser/runtime/check_key_length.js","webpack://_N_E/./node_modules/jose/dist/browser/runtime/rsaes.js","webpack://_N_E/./node_modules/jose/dist/browser/lib/cek.js","webpack://_N_E/./node_modules/jose/dist/browser/runtime/asn1.js","webpack://_N_E/./node_modules/jose/dist/browser/runtime/jwk_to_key.js","webpack://_N_E/./node_modules/jose/dist/browser/key/import.js","webpack://_N_E/./node_modules/jose/dist/browser/lib/check_key_type.js","webpack://_N_E/./node_modules/jose/dist/browser/runtime/encrypt.js","webpack://_N_E/./node_modules/jose/dist/browser/lib/aesgcmkw.js","webpack://_N_E/./node_modules/jose/dist/browser/lib/decrypt_key_management.js","webpack://_N_E/./node_modules/jose/dist/browser/lib/validate_crit.js","webpack://_N_E/./node_modules/jose/dist/browser/lib/validate_algorithms.js","webpack://_N_E/./node_modules/jose/dist/browser/jwe/flattened/decrypt.js","webpack://_N_E/./node_modules/jose/dist/browser/jwe/compact/decrypt.js","webpack://_N_E/./node_modules/jose/dist/browser/jwe/general/decrypt.js","webpack://_N_E/./node_modules/jose/dist/browser/runtime/key_to_jwk.js","webpack://_N_E/./node_modules/jose/dist/browser/key/export.js","webpack://_N_E/./node_modules/jose/dist/browser/lib/encrypt_key_management.js","webpack://_N_E/./node_modules/jose/dist/browser/jwe/flattened/encrypt.js","webpack://_N_E/./node_modules/jose/dist/browser/jwe/general/encrypt.js","webpack://_N_E/./node_modules/jose/dist/browser/runtime/subtle_dsa.js","webpack://_N_E/./node_modules/jose/dist/browser/runtime/verify.js","webpack://_N_E/./node_modules/jose/dist/browser/jws/flattened/verify.js","webpack://_N_E/./node_modules/jose/dist/browser/jws/compact/verify.js","webpack://_N_E/./node_modules/jose/dist/browser/jws/general/verify.js","webpack://_N_E/./node_modules/jose/dist/browser/lib/epoch.js","webpack://_N_E/./node_modules/jose/dist/browser/lib/secs.js","webpack://_N_E/./node_modules/jose/dist/browser/lib/jwt_claims_set.js","webpack://_N_E/./node_modules/jose/dist/browser/jwt/verify.js","webpack://_N_E/./node_modules/jose/dist/browser/jwt/decrypt.js","webpack://_N_E/./node_modules/jose/dist/browser/jwe/compact/encrypt.js","webpack://_N_E/./node_modules/jose/dist/browser/runtime/sign.js","webpack://_N_E/./node_modules/jose/dist/browser/jws/flattened/sign.js","webpack://_N_E/./node_modules/jose/dist/browser/jws/compact/sign.js","webpack://_N_E/./node_modules/jose/dist/browser/jws/general/sign.js","webpack://_N_E/./node_modules/jose/dist/browser/jwt/produce.js","webpack://_N_E/./node_modules/jose/dist/browser/jwt/sign.js","webpack://_N_E/./node_modules/jose/dist/browser/jwt/encrypt.js","webpack://_N_E/./node_modules/jose/dist/browser/jwk/thumbprint.js","webpack://_N_E/./node_modules/jose/dist/browser/jwk/embedded.js","webpack://_N_E/./node_modules/jose/dist/browser/jwks/local.js","webpack://_N_E/./node_modules/jose/dist/browser/runtime/fetch_jwks.js","webpack://_N_E/./node_modules/jose/dist/browser/jwks/remote.js","webpack://_N_E/./node_modules/jose/dist/browser/jwt/unsecured.js","webpack://_N_E/./node_modules/jose/dist/browser/util/base64url.js","webpack://_N_E/./node_modules/jose/dist/browser/util/decode_protected_header.js","webpack://_N_E/./node_modules/jose/dist/browser/util/decode_jwt.js","webpack://_N_E/./node_modules/jose/dist/browser/runtime/generate.js","webpack://_N_E/./node_modules/jose/dist/browser/key/generate_key_pair.js","webpack://_N_E/./node_modules/jose/dist/browser/key/generate_secret.js","webpack://_N_E/./node_modules/jose/dist/browser/index.js","webpack://_N_E/./node_modules/@auth/core/jwt.js","webpack://_N_E/./node_modules/@auth/core/lib/callback-url.js","webpack://_N_E/./node_modules/@auth/core/lib/web.js","webpack://_N_E/./node_modules/@auth/core/lib/csrf-token.js","webpack://_N_E/./node_modules/@auth/core/lib/default-callbacks.js","webpack://_N_E/./node_modules/@auth/core/lib/utils/merge.js","webpack://_N_E/./node_modules/@auth/core/lib/providers.js","webpack://_N_E/./node_modules/@auth/core/lib/utils/logger.js","webpack://_N_E/./node_modules/@auth/core/lib/utils/parse-url.js","webpack://_N_E/./node_modules/@auth/core/lib/init.js","webpack://_N_E/./node_modules/preact/dist/preact.module.js","webpack://_N_E/./node_modules/preact-render-to-string/dist/index.mjs","webpack://_N_E/./node_modules/preact/jsx-runtime/dist/jsxRuntime.module.js","webpack://_N_E/./node_modules/@auth/core/lib/pages/error.js","webpack://_N_E/./node_modules/@auth/core/lib/pages/signin.js","webpack://_N_E/./node_modules/@auth/core/lib/pages/signout.js","webpack://_N_E/./node_modules/@auth/core/lib/pages/styles.js","webpack://_N_E/./node_modules/@auth/core/lib/pages/verify-request.js","webpack://_N_E/./node_modules/@auth/core/lib/pages/index.js","webpack://_N_E/./node_modules/@auth/core/lib/utils/date.js","webpack://_N_E/./node_modules/@auth/core/lib/callback-handler.js","webpack://_N_E/./node_modules/oauth4webapi/build/index.js","webpack://_N_E/./node_modules/@auth/core/lib/oauth/checks.js","webpack://_N_E/./node_modules/@auth/core/lib/oauth/callback.js","webpack://_N_E/./node_modules/@auth/core/lib/oauth/handle-state.js","webpack://_N_E/./node_modules/@auth/core/lib/routes/shared.js","webpack://_N_E/./node_modules/@auth/core/lib/routes/callback.js","webpack://_N_E/./node_modules/@auth/core/lib/routes/providers.js","webpack://_N_E/./node_modules/@auth/core/lib/routes/session.js","webpack://_N_E/./node_modules/@auth/core/lib/email/signin.js","webpack://_N_E/./node_modules/@auth/core/lib/oauth/authorization-url.js","webpack://_N_E/./node_modules/@auth/core/lib/routes/signin.js","webpack://_N_E/./node_modules/@auth/core/lib/routes/signout.js","webpack://_N_E/./node_modules/@auth/core/lib/routes/index.js","webpack://_N_E/./node_modules/@auth/core/lib/index.js","webpack://_N_E/./node_modules/@auth/core/index.js","webpack://_N_E/./node_modules/next-auth/lib/env.js","webpack://_N_E/./node_modules/next/dist/esm/client/components/draft-mode.js","webpack://_N_E/./node_modules/next/dist/esm/client/components/headers.js","webpack://_N_E/./node_modules/next/dist/esm/api/headers.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/user-agent.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/url-pattern.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/exports/index.js","webpack://_N_E/./node_modules/next/dist/esm/api/server.js","webpack://_N_E/./node_modules/next-auth/lib/index.js","webpack://_N_E/./node_modules/next/dist/esm/client/components/navigation.react-server.js","webpack://_N_E/./node_modules/next/dist/esm/api/navigation.react-server.js","webpack://_N_E/./node_modules/next-auth/lib/actions.js","webpack://_N_E/./node_modules/next-auth/index.js","webpack://_N_E/./node_modules/@auth/core/providers/github.js","webpack://_N_E/./app/auth.ts","webpack://_N_E/./app/api/auth/[...nextauth]/route.ts","webpack://_N_E/./app/api/auth/[...nextauth]/route.ts?a697","webpack://_N_E/?5932","webpack://_N_E/./node_modules/cookie/index.js","webpack://_N_E/./node_modules/next/dist/compiled/ua-parser-js/ua-parser.js"],"sourcesContent":["module.exports = require(\"node:async_hooks\");","module.exports = require(\"node:buffer\");","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _SessionStore_instances, _SessionStore_chunks, _SessionStore_option, _SessionStore_logger, _SessionStore_chunk, _SessionStore_clean;\n// Uncomment to recalculate the estimated size\n// of an empty session cookie\n// import { serialize } from \"cookie\"\n// console.log(\n//   \"Cookie estimated to be \",\n//   serialize(`__Secure.next-auth.session-token.0`, \"\", {\n//     expires: new Date(),\n//     httpOnly: true,\n//     maxAge: Number.MAX_SAFE_INTEGER,\n//     path: \"/\",\n//     sameSite: \"strict\",\n//     secure: true,\n//     domain: \"example.com\",\n//   }).length,\n//   \" bytes\"\n// )\nconst ALLOWED_COOKIE_SIZE = 4096;\n// Based on commented out section above\nconst ESTIMATED_EMPTY_COOKIE_SIZE = 163;\nconst CHUNK_SIZE = ALLOWED_COOKIE_SIZE - ESTIMATED_EMPTY_COOKIE_SIZE;\n/**\n * Use secure cookies if the site uses HTTPS\n * This being conditional allows cookies to work non-HTTPS development URLs\n * Honour secure cookie option, which sets 'secure' and also adds '__Secure-'\n * prefix, but enable them by default if the site URL is HTTPS; but not for\n * non-HTTPS URLs like http://localhost which are used in development).\n * For more on prefixes see https://googlechrome.github.io/samples/cookie-prefixes/\n *\n * @TODO Review cookie settings (names, options)\n */\nexport function defaultCookies(useSecureCookies) {\n    const cookiePrefix = useSecureCookies ? \"__Secure-\" : \"\";\n    return {\n        // default cookie options\n        sessionToken: {\n            name: `${cookiePrefix}next-auth.session-token`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies,\n            },\n        },\n        callbackUrl: {\n            name: `${cookiePrefix}next-auth.callback-url`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies,\n            },\n        },\n        csrfToken: {\n            // Default to __Host- for CSRF token for additional protection if using useSecureCookies\n            // NB: The `__Host-` prefix is stricter than the `__Secure-` prefix.\n            name: `${useSecureCookies ? \"__Host-\" : \"\"}next-auth.csrf-token`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies,\n            },\n        },\n        pkceCodeVerifier: {\n            name: `${cookiePrefix}next-auth.pkce.code_verifier`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies,\n                maxAge: 60 * 15, // 15 minutes in seconds\n            },\n        },\n        state: {\n            name: `${cookiePrefix}next-auth.state`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies,\n                maxAge: 60 * 15, // 15 minutes in seconds\n            },\n        },\n        nonce: {\n            name: `${cookiePrefix}next-auth.nonce`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies,\n            },\n        },\n    };\n}\nexport class SessionStore {\n    constructor(option, req, logger) {\n        _SessionStore_instances.add(this);\n        _SessionStore_chunks.set(this, {});\n        _SessionStore_option.set(this, void 0);\n        _SessionStore_logger.set(this, void 0);\n        __classPrivateFieldSet(this, _SessionStore_logger, logger, \"f\");\n        __classPrivateFieldSet(this, _SessionStore_option, option, \"f\");\n        const { cookies } = req;\n        const { name: cookieName } = option;\n        if (typeof cookies?.getAll === \"function\") {\n            // Next.js ^v13.0.1 (Edge Env)\n            for (const { name, value } of cookies.getAll()) {\n                if (name.startsWith(cookieName)) {\n                    __classPrivateFieldGet(this, _SessionStore_chunks, \"f\")[name] = value;\n                }\n            }\n        }\n        else if (cookies instanceof Map) {\n            for (const name of cookies.keys()) {\n                if (name.startsWith(cookieName))\n                    __classPrivateFieldGet(this, _SessionStore_chunks, \"f\")[name] = cookies.get(name);\n            }\n        }\n        else {\n            for (const name in cookies) {\n                if (name.startsWith(cookieName))\n                    __classPrivateFieldGet(this, _SessionStore_chunks, \"f\")[name] = cookies[name];\n            }\n        }\n    }\n    /**\n     * The JWT Session or database Session ID\n     * constructed from the cookie chunks.\n     */\n    get value() {\n        // Sort the chunks by their keys before joining\n        const sortedKeys = Object.keys(__classPrivateFieldGet(this, _SessionStore_chunks, \"f\")).sort((a, b) => {\n            const aSuffix = parseInt(a.split(\".\").pop() || \"0\");\n            const bSuffix = parseInt(b.split(\".\").pop() || \"0\");\n            return aSuffix - bSuffix;\n        });\n        // Use the sorted keys to join the chunks in the correct order\n        return sortedKeys.map(key => __classPrivateFieldGet(this, _SessionStore_chunks, \"f\")[key]).join(\"\");\n    }\n    /**\n     * Given a cookie value, return new cookies, chunked, to fit the allowed cookie size.\n     * If the cookie has changed from chunked to unchunked or vice versa,\n     * it deletes the old cookies as well.\n     */\n    chunk(value, options) {\n        // Assume all cookies should be cleaned by default\n        const cookies = __classPrivateFieldGet(this, _SessionStore_instances, \"m\", _SessionStore_clean).call(this);\n        // Calculate new chunks\n        const chunked = __classPrivateFieldGet(this, _SessionStore_instances, \"m\", _SessionStore_chunk).call(this, {\n            name: __classPrivateFieldGet(this, _SessionStore_option, \"f\").name,\n            value,\n            options: { ...__classPrivateFieldGet(this, _SessionStore_option, \"f\").options, ...options },\n        });\n        // Update stored chunks / cookies\n        for (const chunk of chunked) {\n            cookies[chunk.name] = chunk;\n        }\n        return Object.values(cookies);\n    }\n    /** Returns a list of cookies that should be cleaned. */\n    clean() {\n        return Object.values(__classPrivateFieldGet(this, _SessionStore_instances, \"m\", _SessionStore_clean).call(this));\n    }\n}\n_SessionStore_chunks = new WeakMap(), _SessionStore_option = new WeakMap(), _SessionStore_logger = new WeakMap(), _SessionStore_instances = new WeakSet(), _SessionStore_chunk = function _SessionStore_chunk(cookie) {\n    const chunkCount = Math.ceil(cookie.value.length / CHUNK_SIZE);\n    if (chunkCount === 1) {\n        __classPrivateFieldGet(this, _SessionStore_chunks, \"f\")[cookie.name] = cookie.value;\n        return [cookie];\n    }\n    const cookies = [];\n    for (let i = 0; i < chunkCount; i++) {\n        const name = `${cookie.name}.${i}`;\n        const value = cookie.value.substr(i * CHUNK_SIZE, CHUNK_SIZE);\n        cookies.push({ ...cookie, name, value });\n        __classPrivateFieldGet(this, _SessionStore_chunks, \"f\")[name] = value;\n    }\n    __classPrivateFieldGet(this, _SessionStore_logger, \"f\").debug(\"CHUNKING_SESSION_COOKIE\", {\n        message: `Session cookie exceeds allowed ${ALLOWED_COOKIE_SIZE} bytes.`,\n        emptyCookieSize: ESTIMATED_EMPTY_COOKIE_SIZE,\n        valueSize: cookie.value.length,\n        chunks: cookies.map((c) => c.value.length + ESTIMATED_EMPTY_COOKIE_SIZE),\n    });\n    return cookies;\n}, _SessionStore_clean = function _SessionStore_clean() {\n    const cleanedChunks = {};\n    for (const name in __classPrivateFieldGet(this, _SessionStore_chunks, \"f\")) {\n        delete __classPrivateFieldGet(this, _SessionStore_chunks, \"f\")?.[name];\n        cleanedChunks[name] = {\n            name,\n            value: \"\",\n            options: { ...__classPrivateFieldGet(this, _SessionStore_option, \"f\").options, maxAge: 0 },\n        };\n    }\n    return cleanedChunks;\n};\n","export class AuthError extends Error {\n    constructor(message, cause) {\n        if (message instanceof Error) {\n            super(undefined, {\n                cause: { err: message, ...message.cause, ...cause },\n            });\n        }\n        else if (typeof message === \"string\") {\n            if (cause instanceof Error) {\n                cause = { err: cause, ...cause.cause };\n            }\n            super(message, cause);\n        }\n        else {\n            super(undefined, message);\n        }\n        Error.captureStackTrace?.(this, this.constructor);\n        this.name =\n            message instanceof AuthError ? message.name : this.constructor.name;\n    }\n}\n/**\n * @todo\n * One of the database `Adapter` methods failed.\n */\nexport class AdapterError extends AuthError {\n}\n/** @todo */\nexport class AuthorizedCallbackError extends AuthError {\n}\n/**\n * This error occurs when the user cannot finish the sign-in process.\n * Depending on the provider type, this could have happened for multiple reasons.\n *\n * :::tip\n * Check out `[auth][details]` in the error message to know which provider failed.\n * @example\n * ```sh\n * [auth][details]: { \"provider\": \"github\" }\n * ```\n * :::\n *\n * For an [OAuth provider](https://authjs.dev/reference/core/providers_oauth), possible causes are:\n * - The user denied access to the application\n * - There was an error parsing the OAuth Profile:\n *   Check out the provider's `profile` or `userinfo.request` method to make sure\n *   it correctly fetches the user's profile.\n * - The `signIn` or `jwt` callback methods threw an uncaught error:\n *   Check the callback method implementations.\n *\n * For an [Email provider](https://authjs.dev/reference/core/providers_email), possible causes are:\n * - The provided email/token combination was invalid/missing:\n *   Check if the provider's `sendVerificationRequest` method correctly sends the email.\n * - The provided email/token combination has expired:\n *   Ask the user to log in again.\n * - There was an error with the database:\n *   Check the database logs.\n *\n * For a [Credentials provider](https://authjs.dev/reference/core/providers_credentials), possible causes are:\n * - The `authorize` method threw an uncaught error:\n *   Check the provider's `authorize` method.\n * - The `signIn` or `jwt` callback methods threw an uncaught error:\n *   Check the callback method implementations.\n *\n * :::tip\n * Check out `[auth][cause]` in the error message for more details.\n * It will show the original stack trace.\n * :::\n */\nexport class CallbackRouteError extends AuthError {\n}\n/** @todo */\nexport class ErrorPageLoop extends AuthError {\n}\n/** @todo */\nexport class EventError extends AuthError {\n}\n/** @todo */\nexport class InvalidCallbackUrl extends AuthError {\n}\n/** @todo */\nexport class InvalidEndpoints extends AuthError {\n}\n/** @todo */\nexport class InvalidCheck extends AuthError {\n}\n/** @todo */\nexport class JWTSessionError extends AuthError {\n}\n/** @todo */\nexport class MissingAdapter extends AuthError {\n}\n/** @todo */\nexport class MissingAdapterMethods extends AuthError {\n}\n/** @todo */\nexport class MissingAPIRoute extends AuthError {\n}\n/** @todo */\nexport class MissingAuthorize extends AuthError {\n}\n/**\n * Auth.js requires a secret to be set, but none was not found. This is used to encrypt cookies, JWTs and other sensitive data.\n *\n * :::note\n * If you are using a framework like Next.js, we try to automatically infer the secret from the `AUTH_SECRET` environment variable.\n * Alternatively, you can also explicitly set the [`AuthConfig.secret`](https://authjs.dev/reference/core#secret).\n * :::\n *\n *\n * :::tip\n * You can generate a good secret value:\n *  - On Unix systems: type `openssl rand -hex 32` in the terminal\n *  - Or generate one [online](https://generate-secret.vercel.app/32)\n *\n * :::\n */\nexport class MissingSecret extends AuthError {\n}\n/**\n * @todo\n * Thrown when an Email address is already associated with an account\n * but the user is trying an OAuth account that is not linked to it.\n */\nexport class OAuthAccountNotLinked extends AuthError {\n}\n/**\n * Thrown when an OAuth provider returns an error during the sign in process.\n * This could happen for example if the user denied access to the application or there was a configuration error.\n *\n * For a full list of possible reasons, check out the specification [Authorization Code Grant: Error Response](https://www.rfc-editor.org/rfc/rfc6749#section-4.1.2.1)\n */\nexport class OAuthCallbackError extends AuthError {\n}\n/** @todo */\nexport class OAuthCreateUserError extends AuthError {\n}\n/**\n * This error occurs during an OAuth sign in attempt when the provdier's\n * response could not be parsed. This could for example happen if the provider's API\n * changed, or the [`OAuth2Config.profile`](https://authjs.dev/reference/core/providers_oauth#profile) method is not implemented correctly.\n */\nexport class OAuthProfileParseError extends AuthError {\n}\n/** @todo */\nexport class SessionTokenError extends AuthError {\n}\n/**\n * This error occurs when the user cannot initiate the sign-in process.\n * Depending on the provider type, this could have happened for multiple reasons.\n *\n * :::tip\n * Check out `[auth][details]` in the error message to know which provider failed.\n * @example\n * ```sh\n * [auth][details]: { \"provider\": \"github\" }\n * ```\n * :::\n *\n * For an [OAuth provider](https://authjs.dev/reference/core/providers_oauth), possible causes are:\n * - The Authorization Server is not compliant with the [OAuth 2.0 specifcation](https://www.ietf.org/rfc/rfc6749.html)\n *   Check the details in the error message.\n * - A runtime error occurred in Auth.js. This should be reported as a bug.\n *\n * For an [Email provider](https://authjs.dev/reference/core/providers_email), possible causes are:\n * - The email sent from the client is invalid, could not be normalized by [`EmailConfig.normalizeIdentifier`](https://authjs.dev/reference/core/providers_email#normalizeidentifier)\n * - The provided email/token combination has expired:\n *   Ask the user to log in again.\n * - There was an error with the database:\n *   Check the database logs.\n *\n */\nexport class SignInError extends AuthError {\n}\n/** @todo */\nexport class SignOutError extends AuthError {\n}\n/**\n * Auth.js was requested to handle an operation that it does not support.\n *\n * See [`AuthAction`](https://authjs.dev/reference/core/types#authaction) for the supported actions.\n */\nexport class UnknownAction extends AuthError {\n}\n/** @todo */\nexport class UnsupportedStrategy extends AuthError {\n}\n/** @todo */\nexport class UntrustedHost extends AuthError {\n}\n/**\n * The user's email/token combination was invalid.\n * This could be because the email/token combination was not found in the database,\n * or because it token has expired. Ask the user to log in again.\n */\nexport class Verification extends AuthError {\n}\n","import { defaultCookies } from \"./cookie.js\";\nimport { InvalidCallbackUrl, InvalidEndpoints, MissingAdapter, MissingAdapterMethods, MissingAuthorize, MissingSecret, UnsupportedStrategy, UntrustedHost, } from \"../errors.js\";\nlet warned = false;\nfunction isValidHttpUrl(url, baseUrl) {\n    try {\n        return /^https?:/.test(new URL(url, url.startsWith(\"/\") ? baseUrl : undefined).protocol);\n    }\n    catch {\n        return false;\n    }\n}\nlet hasCredentials = false;\nlet hasEmail = false;\nconst emailMethods = [\n    \"createVerificationToken\",\n    \"useVerificationToken\",\n    \"getUserByEmail\",\n];\nconst sessionMethods = [\n    \"createUser\",\n    \"getUser\",\n    \"getUserByEmail\",\n    \"getUserByAccount\",\n    \"updateUser\",\n    \"linkAccount\",\n    \"createSession\",\n    \"getSessionAndUser\",\n    \"updateSession\",\n    \"deleteSession\",\n];\n/**\n * Verify that the user configured Auth.js correctly.\n * Good place to mention deprecations as well.\n *\n * This is invoked before the init method, so default values are not available yet.\n */\nexport function assertConfig(request, options) {\n    const { url } = request;\n    const warnings = [];\n    if (!warned && options.debug)\n        warnings.push(\"debug-enabled\");\n    if (!options.trustHost) {\n        return new UntrustedHost(`Host must be trusted. URL was: ${request.url}`);\n    }\n    if (!options.secret) {\n        return new MissingSecret(\"Please define a `secret`.\");\n    }\n    const callbackUrlParam = request.query?.callbackUrl;\n    if (callbackUrlParam && !isValidHttpUrl(callbackUrlParam, url.origin)) {\n        return new InvalidCallbackUrl(`Invalid callback URL. Received: ${callbackUrlParam}`);\n    }\n    const { callbackUrl: defaultCallbackUrl } = defaultCookies(options.useSecureCookies ?? url.protocol === \"https:\");\n    const callbackUrlCookie = request.cookies?.[options.cookies?.callbackUrl?.name ?? defaultCallbackUrl.name];\n    if (callbackUrlCookie && !isValidHttpUrl(callbackUrlCookie, url.origin)) {\n        return new InvalidCallbackUrl(`Invalid callback URL. Received: ${callbackUrlCookie}`);\n    }\n    for (const p of options.providers) {\n        const provider = typeof p === \"function\" ? p() : p;\n        if ((provider.type === \"oauth\" || provider.type === \"oidc\") &&\n            !(provider.issuer ?? provider.options?.issuer)) {\n            const { authorization: a, token: t, userinfo: u } = provider;\n            let key;\n            if (typeof a !== \"string\" && !a?.url)\n                key = \"authorization\";\n            else if (typeof t !== \"string\" && !t?.url)\n                key = \"token\";\n            else if (typeof u !== \"string\" && !u?.url)\n                key = \"userinfo\";\n            if (key) {\n                return new InvalidEndpoints(`Provider \"${provider.id}\" is missing both \\`issuer\\` and \\`${key}\\` endpoint config. At least one of them is required.`);\n            }\n        }\n        if (provider.type === \"credentials\")\n            hasCredentials = true;\n        else if (provider.type === \"email\")\n            hasEmail = true;\n    }\n    if (hasCredentials) {\n        const dbStrategy = options.session?.strategy === \"database\";\n        const onlyCredentials = !options.providers.some((p) => (typeof p === \"function\" ? p() : p).type !== \"credentials\");\n        if (dbStrategy && onlyCredentials) {\n            return new UnsupportedStrategy(\"Signin in with credentials only supported if JWT strategy is enabled\");\n        }\n        const credentialsNoAuthorize = options.providers.some((p) => {\n            const provider = typeof p === \"function\" ? p() : p;\n            return provider.type === \"credentials\" && !provider.authorize;\n        });\n        if (credentialsNoAuthorize) {\n            return new MissingAuthorize(\"Must define an authorize() handler to use credentials authentication provider\");\n        }\n    }\n    const { adapter, session } = options;\n    if (hasEmail ||\n        session?.strategy === \"database\" ||\n        (!session?.strategy && adapter)) {\n        let methods;\n        if (hasEmail) {\n            if (!adapter)\n                return new MissingAdapter(\"Email login requires an adapter.\");\n            methods = emailMethods;\n        }\n        else {\n            if (!adapter)\n                return new MissingAdapter(\"Database session requires an adapter.\");\n            methods = sessionMethods;\n        }\n        const missing = methods.filter((m) => !adapter[m]);\n        if (missing.length) {\n            return new MissingAdapterMethods(`Required adapter methods were missing: ${missing.join(\", \")}`);\n        }\n    }\n    if (!warned)\n        warned = true;\n    return warnings;\n}\n","const getGlobal = () => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    throw new Error('unable to locate global object');\n};\nexport default async (digest, ikm, salt, info, keylen) => {\n    const { crypto: { subtle }, } = getGlobal();\n    return new Uint8Array(await subtle.deriveBits({\n        name: 'HKDF',\n        hash: `SHA-${digest.substr(3)}`,\n        salt,\n        info,\n    }, await subtle.importKey('raw', ikm, 'HKDF', false, ['deriveBits']), keylen << 3));\n};\n","import derive from './runtime/hkdf.js';\nfunction normalizeDigest(digest) {\n    switch (digest) {\n        case 'sha256':\n        case 'sha384':\n        case 'sha512':\n        case 'sha1':\n            return digest;\n        default:\n            throw new TypeError('unsupported \"digest\" value');\n    }\n}\nfunction normalizeUint8Array(input, label) {\n    if (typeof input === 'string')\n        return new TextEncoder().encode(input);\n    if (!(input instanceof Uint8Array))\n        throw new TypeError(`\"${label}\"\" must be an instance of Uint8Array or a string`);\n    return input;\n}\nfunction normalizeIkm(input) {\n    const ikm = normalizeUint8Array(input, 'ikm');\n    if (!ikm.byteLength)\n        throw new TypeError(`\"ikm\" must be at least one byte in length`);\n    return ikm;\n}\nfunction normalizeInfo(input) {\n    const info = normalizeUint8Array(input, 'info');\n    if (info.byteLength > 1024) {\n        throw TypeError('\"info\" must not contain more than 1024 bytes');\n    }\n    return info;\n}\nfunction normalizeKeylen(input, digest) {\n    if (typeof input !== 'number' || !Number.isInteger(input) || input < 1) {\n        throw new TypeError('\"keylen\" must be a positive integer');\n    }\n    const hashlen = parseInt(digest.substr(3), 10) >> 3 || 20;\n    if (input > 255 * hashlen) {\n        throw new TypeError('\"keylen\" too large');\n    }\n    return input;\n}\nasync function hkdf(digest, ikm, salt, info, keylen) {\n    return derive(normalizeDigest(digest), normalizeIkm(ikm), normalizeUint8Array(salt, 'salt'), normalizeInfo(info), normalizeKeylen(keylen, digest));\n}\nexport { hkdf, hkdf as default };\n","export default crypto;\nexport const isCryptoKey = (key) => key instanceof CryptoKey;\n","import crypto from './webcrypto.js';\nconst digest = async (algorithm, data) => {\n    const subtleDigest = `SHA-${algorithm.slice(-3)}`;\n    return new Uint8Array(await crypto.subtle.digest(subtleDigest, data));\n};\nexport default digest;\n","import digest from '../runtime/digest.js';\nexport const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nexport function concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    buffers.forEach((buffer) => {\n        buf.set(buffer, i);\n        i += buffer.length;\n    });\n    return buf;\n}\nexport function p2s(alg, p2sInput) {\n    return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nexport function uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nexport function uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\nexport function lengthAndInput(input) {\n    return concat(uint32be(input.length), input);\n}\nexport async function concatKdf(secret, bits, value) {\n    const iterations = Math.ceil((bits >> 3) / 32);\n    const res = new Uint8Array(iterations * 32);\n    for (let iter = 0; iter < iterations; iter++) {\n        const buf = new Uint8Array(4 + secret.length + value.length);\n        buf.set(uint32be(iter + 1));\n        buf.set(secret, 4);\n        buf.set(value, 4 + secret.length);\n        res.set(await digest('sha256', buf), iter * 32);\n    }\n    return res.slice(0, bits >> 3);\n}\n","import { encoder, decoder } from '../lib/buffer_utils.js';\nexport const encodeBase64 = (input) => {\n    let unencoded = input;\n    if (typeof unencoded === 'string') {\n        unencoded = encoder.encode(unencoded);\n    }\n    const CHUNK_SIZE = 0x8000;\n    const arr = [];\n    for (let i = 0; i < unencoded.length; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join(''));\n};\nexport const encode = (input) => {\n    return encodeBase64(input).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n};\nexport const decodeBase64 = (encoded) => {\n    const binary = atob(encoded);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n};\nexport const decode = (input) => {\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = decoder.decode(encoded);\n    }\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\n    try {\n        return decodeBase64(encoded);\n    }\n    catch (_a) {\n        throw new TypeError('The input to be decoded is not correctly encoded.');\n    }\n};\n","export class JOSEError extends Error {\n    static get code() {\n        return 'ERR_JOSE_GENERIC';\n    }\n    constructor(message) {\n        var _a;\n        super(message);\n        this.code = 'ERR_JOSE_GENERIC';\n        this.name = this.constructor.name;\n        (_a = Error.captureStackTrace) === null || _a === void 0 ? void 0 : _a.call(Error, this, this.constructor);\n    }\n}\nexport class JWTClaimValidationFailed extends JOSEError {\n    static get code() {\n        return 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n    }\n    constructor(message, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n        this.claim = claim;\n        this.reason = reason;\n    }\n}\nexport class JWTExpired extends JOSEError {\n    static get code() {\n        return 'ERR_JWT_EXPIRED';\n    }\n    constructor(message, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.code = 'ERR_JWT_EXPIRED';\n        this.claim = claim;\n        this.reason = reason;\n    }\n}\nexport class JOSEAlgNotAllowed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n    static get code() {\n        return 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n}\nexport class JOSENotSupported extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_NOT_SUPPORTED';\n    }\n    static get code() {\n        return 'ERR_JOSE_NOT_SUPPORTED';\n    }\n}\nexport class JWEDecryptionFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_DECRYPTION_FAILED';\n        this.message = 'decryption operation failed';\n    }\n    static get code() {\n        return 'ERR_JWE_DECRYPTION_FAILED';\n    }\n}\nexport class JWEInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWE_INVALID';\n    }\n}\nexport class JWSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWS_INVALID';\n    }\n}\nexport class JWTInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWT_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWT_INVALID';\n    }\n}\nexport class JWKInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWK_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWK_INVALID';\n    }\n}\nexport class JWKSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWKS_INVALID';\n    }\n}\nexport class JWKSNoMatchingKey extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_NO_MATCHING_KEY';\n        this.message = 'no applicable key found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_NO_MATCHING_KEY';\n    }\n}\nexport class JWKSMultipleMatchingKeys extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n        this.message = 'multiple matching keys found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    }\n}\nSymbol.asyncIterator;\nexport class JWKSTimeout extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_TIMEOUT';\n        this.message = 'request timed out';\n    }\n    static get code() {\n        return 'ERR_JWKS_TIMEOUT';\n    }\n}\nexport class JWSSignatureVerificationFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n        this.message = 'signature verification failed';\n    }\n    static get code() {\n        return 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    }\n}\n","import crypto from './webcrypto.js';\nexport default crypto.getRandomValues.bind(crypto);\n","import { JOSENotSupported } from '../util/errors.js';\nimport random from '../runtime/random.js';\nexport function bitLength(alg) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A128GCMKW':\n        case 'A192GCM':\n        case 'A192GCMKW':\n        case 'A256GCM':\n        case 'A256GCMKW':\n            return 96;\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            return 128;\n        default:\n            throw new JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n}\nexport default (alg) => random(new Uint8Array(bitLength(alg) >> 3));\n","import { JWEInvalid } from '../util/errors.js';\nimport { bitLength } from './iv.js';\nconst checkIvLength = (enc, iv) => {\n    if (iv.length << 3 !== bitLength(enc)) {\n        throw new JWEInvalid('Invalid Initialization Vector length');\n    }\n};\nexport default checkIvLength;\n","import { JWEInvalid } from '../util/errors.js';\nconst checkCekLength = (cek, expected) => {\n    const actual = cek.byteLength << 3;\n    if (actual !== expected) {\n        throw new JWEInvalid(`Invalid Content Encryption Key length. Expected ${expected} bits, got ${actual} bits`);\n    }\n};\nexport default checkCekLength;\n","const timingSafeEqual = (a, b) => {\n    if (!(a instanceof Uint8Array)) {\n        throw new TypeError('First argument must be a buffer');\n    }\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('Second argument must be a buffer');\n    }\n    if (a.length !== b.length) {\n        throw new TypeError('Input buffers must have the same length');\n    }\n    const len = a.length;\n    let out = 0;\n    let i = -1;\n    while (++i < len) {\n        out |= a[i] ^ b[i];\n    }\n    return out === 0;\n};\nexport default timingSafeEqual;\n","function unusable(name, prop = 'algorithm.name') {\n    return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\n}\nfunction isAlgorithm(algorithm, name) {\n    return algorithm.name === name;\n}\nfunction getHashLength(hash) {\n    return parseInt(hash.name.slice(4), 10);\n}\nfunction getNamedCurve(alg) {\n    switch (alg) {\n        case 'ES256':\n            return 'P-256';\n        case 'ES384':\n            return 'P-384';\n        case 'ES512':\n            return 'P-521';\n        default:\n            throw new Error('unreachable');\n    }\n}\nfunction checkUsage(key, usages) {\n    if (usages.length && !usages.some((expected) => key.usages.includes(expected))) {\n        let msg = 'CryptoKey does not support this operation, its usages must include ';\n        if (usages.length > 2) {\n            const last = usages.pop();\n            msg += `one of ${usages.join(', ')}, or ${last}.`;\n        }\n        else if (usages.length === 2) {\n            msg += `one of ${usages[0]} or ${usages[1]}.`;\n        }\n        else {\n            msg += `${usages[0]}.`;\n        }\n        throw new TypeError(msg);\n    }\n}\nexport function checkSigCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512': {\n            if (!isAlgorithm(key.algorithm, 'HMAC'))\n                throw unusable('HMAC');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'RS256':\n        case 'RS384':\n        case 'RS512': {\n            if (!isAlgorithm(key.algorithm, 'RSASSA-PKCS1-v1_5'))\n                throw unusable('RSASSA-PKCS1-v1_5');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'PS256':\n        case 'PS384':\n        case 'PS512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-PSS'))\n                throw unusable('RSA-PSS');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'EdDSA': {\n            if (key.algorithm.name !== 'Ed25519' && key.algorithm.name !== 'Ed448') {\n                throw unusable('Ed25519 or Ed448');\n            }\n            break;\n        }\n        case 'ES256':\n        case 'ES384':\n        case 'ES512': {\n            if (!isAlgorithm(key.algorithm, 'ECDSA'))\n                throw unusable('ECDSA');\n            const expected = getNamedCurve(alg);\n            const actual = key.algorithm.namedCurve;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.namedCurve');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\nexport function checkEncCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM': {\n            if (!isAlgorithm(key.algorithm, 'AES-GCM'))\n                throw unusable('AES-GCM');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (!isAlgorithm(key.algorithm, 'AES-KW'))\n                throw unusable('AES-KW');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'ECDH': {\n            switch (key.algorithm.name) {\n                case 'ECDH':\n                case 'X25519':\n                case 'X448':\n                    break;\n                default:\n                    throw unusable('ECDH, X25519, or X448');\n            }\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW':\n            if (!isAlgorithm(key.algorithm, 'PBKDF2'))\n                throw unusable('PBKDF2');\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-OAEP'))\n                throw unusable('RSA-OAEP');\n            const expected = parseInt(alg.slice(9), 10) || 1;\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\n","function message(msg, actual, ...types) {\n    if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(', ')}, or ${last}.`;\n    }\n    else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}.`;\n    }\n    else {\n        msg += `of type ${types[0]}.`;\n    }\n    if (actual == null) {\n        msg += ` Received ${actual}`;\n    }\n    else if (typeof actual === 'function' && actual.name) {\n        msg += ` Received function ${actual.name}`;\n    }\n    else if (typeof actual === 'object' && actual != null) {\n        if (actual.constructor && actual.constructor.name) {\n            msg += ` Received an instance of ${actual.constructor.name}`;\n        }\n    }\n    return msg;\n}\nexport default (actual, ...types) => {\n    return message('Key must be ', actual, ...types);\n};\nexport function withAlg(alg, actual, ...types) {\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}\n","import { isCryptoKey } from './webcrypto.js';\nexport default (key) => {\n    return isCryptoKey(key);\n};\nexport const types = ['CryptoKey'];\n","import { concat, uint64be } from '../lib/buffer_utils.js';\nimport checkIvLength from '../lib/check_iv_length.js';\nimport checkCekLength from './check_cek_length.js';\nimport timingSafeEqual from './timing_safe_equal.js';\nimport { JOSENotSupported, JWEDecryptionFailed } from '../util/errors.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nasync function cbcDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    if (!(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, 'Uint8Array'));\n    }\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const encKey = await crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['decrypt']);\n    const macKey = await crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\n        hash: `SHA-${keySize << 1}`,\n        name: 'HMAC',\n    }, false, ['sign']);\n    const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\n    const expectedTag = new Uint8Array((await crypto.subtle.sign('HMAC', macKey, macData)).slice(0, keySize >> 3));\n    let macCheckPassed;\n    try {\n        macCheckPassed = timingSafeEqual(tag, expectedTag);\n    }\n    catch (_a) {\n    }\n    if (!macCheckPassed) {\n        throw new JWEDecryptionFailed();\n    }\n    let plaintext;\n    try {\n        plaintext = new Uint8Array(await crypto.subtle.decrypt({ iv, name: 'AES-CBC' }, encKey, ciphertext));\n    }\n    catch (_b) {\n    }\n    if (!plaintext) {\n        throw new JWEDecryptionFailed();\n    }\n    return plaintext;\n}\nasync function gcmDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    let encKey;\n    if (cek instanceof Uint8Array) {\n        encKey = await crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['decrypt']);\n    }\n    else {\n        checkEncCryptoKey(cek, enc, 'decrypt');\n        encKey = cek;\n    }\n    try {\n        return new Uint8Array(await crypto.subtle.decrypt({\n            additionalData: aad,\n            iv,\n            name: 'AES-GCM',\n            tagLength: 128,\n        }, encKey, concat(ciphertext, tag)));\n    }\n    catch (_a) {\n        throw new JWEDecryptionFailed();\n    }\n}\nconst decrypt = async (enc, cek, ciphertext, iv, tag, aad) => {\n    if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\n    }\n    checkIvLength(enc, iv);\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(-3), 10));\n            return cbcDecrypt(enc, cek, ciphertext, iv, tag, aad);\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(1, 4), 10));\n            return gcmDecrypt(enc, cek, ciphertext, iv, tag, aad);\n        default:\n            throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n    }\n};\nexport default decrypt;\n","import { JOSENotSupported } from '../util/errors.js';\nexport const inflate = async () => {\n    throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported by your javascript runtime. You need to use the `inflateRaw` decrypt option to provide Inflate Raw implementation.');\n};\nexport const deflate = async () => {\n    throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported by your javascript runtime. You need to use the `deflateRaw` encrypt option to provide Deflate Raw implementation.');\n};\n","const isDisjoint = (...headers) => {\n    const sources = headers.filter(Boolean);\n    if (sources.length === 0 || sources.length === 1) {\n        return true;\n    }\n    let acc;\n    for (const header of sources) {\n        const parameters = Object.keys(header);\n        if (!acc || acc.size === 0) {\n            acc = new Set(parameters);\n            continue;\n        }\n        for (const parameter of parameters) {\n            if (acc.has(parameter)) {\n                return false;\n            }\n            acc.add(parameter);\n        }\n    }\n    return true;\n};\nexport default isDisjoint;\n","function isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nexport default function isObject(input) {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n}\n","const bogusWebCrypto = [\n    { hash: 'SHA-256', name: 'HMAC' },\n    true,\n    ['sign'],\n];\nexport default bogusWebCrypto;\n","import bogusWebCrypto from './bogus.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nfunction checkKeySize(key, alg) {\n    if (key.algorithm.length !== parseInt(alg.slice(1, 4), 10)) {\n        throw new TypeError(`Invalid key size for alg: ${alg}`);\n    }\n}\nfunction getCryptoKey(key, alg, usage) {\n    if (isCryptoKey(key)) {\n        checkEncCryptoKey(key, alg, usage);\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        return crypto.subtle.importKey('raw', key, 'AES-KW', true, [usage]);\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\nexport const wrap = async (alg, key, cek) => {\n    const cryptoKey = await getCryptoKey(key, alg, 'wrapKey');\n    checkKeySize(cryptoKey, alg);\n    const cryptoKeyCek = await crypto.subtle.importKey('raw', cek, ...bogusWebCrypto);\n    return new Uint8Array(await crypto.subtle.wrapKey('raw', cryptoKeyCek, cryptoKey, 'AES-KW'));\n};\nexport const unwrap = async (alg, key, encryptedKey) => {\n    const cryptoKey = await getCryptoKey(key, alg, 'unwrapKey');\n    checkKeySize(cryptoKey, alg);\n    const cryptoKeyCek = await crypto.subtle.unwrapKey('raw', encryptedKey, cryptoKey, 'AES-KW', ...bogusWebCrypto);\n    return new Uint8Array(await crypto.subtle.exportKey('raw', cryptoKeyCek));\n};\n","import { encoder, concat, uint32be, lengthAndInput, concatKdf } from '../lib/buffer_utils.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport async function deriveKey(publicKey, privateKey, algorithm, keyLength, apu = new Uint8Array(0), apv = new Uint8Array(0)) {\n    if (!isCryptoKey(publicKey)) {\n        throw new TypeError(invalidKeyInput(publicKey, ...types));\n    }\n    checkEncCryptoKey(publicKey, 'ECDH');\n    if (!isCryptoKey(privateKey)) {\n        throw new TypeError(invalidKeyInput(privateKey, ...types));\n    }\n    checkEncCryptoKey(privateKey, 'ECDH', 'deriveBits');\n    const value = concat(lengthAndInput(encoder.encode(algorithm)), lengthAndInput(apu), lengthAndInput(apv), uint32be(keyLength));\n    let length;\n    if (publicKey.algorithm.name === 'X25519') {\n        length = 256;\n    }\n    else if (publicKey.algorithm.name === 'X448') {\n        length = 448;\n    }\n    else {\n        length =\n            Math.ceil(parseInt(publicKey.algorithm.namedCurve.substr(-3), 10) / 8) << 3;\n    }\n    const sharedSecret = new Uint8Array(await crypto.subtle.deriveBits({\n        name: publicKey.algorithm.name,\n        public: publicKey,\n    }, privateKey, length));\n    return concatKdf(sharedSecret, keyLength, value);\n}\nexport async function generateEpk(key) {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    return crypto.subtle.generateKey(key.algorithm, true, ['deriveBits']);\n}\nexport function ecdhAllowed(key) {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    return (['P-256', 'P-384', 'P-521'].includes(key.algorithm.namedCurve) ||\n        key.algorithm.name === 'X25519' ||\n        key.algorithm.name === 'X448');\n}\n","import { JWEInvalid } from '../util/errors.js';\nexport default function checkP2s(p2s) {\n    if (!(p2s instanceof Uint8Array) || p2s.length < 8) {\n        throw new JWEInvalid('PBES2 Salt Input must be 8 or more octets');\n    }\n}\n","import random from './random.js';\nimport { p2s as concatSalt } from '../lib/buffer_utils.js';\nimport { encode as base64url } from './base64url.js';\nimport { wrap, unwrap } from './aeskw.js';\nimport checkP2s from '../lib/check_p2s.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nfunction getCryptoKey(key, alg) {\n    if (key instanceof Uint8Array) {\n        return crypto.subtle.importKey('raw', key, 'PBKDF2', false, ['deriveBits']);\n    }\n    if (isCryptoKey(key)) {\n        checkEncCryptoKey(key, alg, 'deriveBits', 'deriveKey');\n        return key;\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\nasync function deriveKey(p2s, alg, p2c, key) {\n    checkP2s(p2s);\n    const salt = concatSalt(alg, p2s);\n    const keylen = parseInt(alg.slice(13, 16), 10);\n    const subtleAlg = {\n        hash: `SHA-${alg.slice(8, 11)}`,\n        iterations: p2c,\n        name: 'PBKDF2',\n        salt,\n    };\n    const wrapAlg = {\n        length: keylen,\n        name: 'AES-KW',\n    };\n    const cryptoKey = await getCryptoKey(key, alg);\n    if (cryptoKey.usages.includes('deriveBits')) {\n        return new Uint8Array(await crypto.subtle.deriveBits(subtleAlg, cryptoKey, keylen));\n    }\n    if (cryptoKey.usages.includes('deriveKey')) {\n        return crypto.subtle.deriveKey(subtleAlg, cryptoKey, wrapAlg, false, ['wrapKey', 'unwrapKey']);\n    }\n    throw new TypeError('PBKDF2 key \"usages\" must include \"deriveBits\" or \"deriveKey\"');\n}\nexport const encrypt = async (alg, key, cek, p2c = 2048, p2s = random(new Uint8Array(16))) => {\n    const derived = await deriveKey(p2s, alg, p2c, key);\n    const encryptedKey = await wrap(alg.slice(-6), derived, cek);\n    return { encryptedKey, p2c, p2s: base64url(p2s) };\n};\nexport const decrypt = async (alg, key, encryptedKey, p2c, p2s) => {\n    const derived = await deriveKey(p2s, alg, p2c, key);\n    return unwrap(alg.slice(-6), derived, encryptedKey);\n};\n","import { JOSENotSupported } from '../util/errors.js';\nexport default function subtleRsaEs(alg) {\n    switch (alg) {\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            return 'RSA-OAEP';\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n","export default (alg, key) => {\n    if (alg.startsWith('RS') || alg.startsWith('PS')) {\n        const { modulusLength } = key.algorithm;\n        if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n            throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\n        }\n    }\n};\n","import subtleAlgorithm from './subtle_rsaes.js';\nimport bogusWebCrypto from './bogus.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport checkKeyLength from './check_key_length.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport const encrypt = async (alg, key, cek) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    checkEncCryptoKey(key, alg, 'encrypt', 'wrapKey');\n    checkKeyLength(alg, key);\n    if (key.usages.includes('encrypt')) {\n        return new Uint8Array(await crypto.subtle.encrypt(subtleAlgorithm(alg), key, cek));\n    }\n    if (key.usages.includes('wrapKey')) {\n        const cryptoKeyCek = await crypto.subtle.importKey('raw', cek, ...bogusWebCrypto);\n        return new Uint8Array(await crypto.subtle.wrapKey('raw', cryptoKeyCek, key, subtleAlgorithm(alg)));\n    }\n    throw new TypeError('RSA-OAEP key \"usages\" must include \"encrypt\" or \"wrapKey\" for this operation');\n};\nexport const decrypt = async (alg, key, encryptedKey) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    checkEncCryptoKey(key, alg, 'decrypt', 'unwrapKey');\n    checkKeyLength(alg, key);\n    if (key.usages.includes('decrypt')) {\n        return new Uint8Array(await crypto.subtle.decrypt(subtleAlgorithm(alg), key, encryptedKey));\n    }\n    if (key.usages.includes('unwrapKey')) {\n        const cryptoKeyCek = await crypto.subtle.unwrapKey('raw', encryptedKey, key, subtleAlgorithm(alg), ...bogusWebCrypto);\n        return new Uint8Array(await crypto.subtle.exportKey('raw', cryptoKeyCek));\n    }\n    throw new TypeError('RSA-OAEP key \"usages\" must include \"decrypt\" or \"unwrapKey\" for this operation');\n};\n","import { JOSENotSupported } from '../util/errors.js';\nimport random from '../runtime/random.js';\nexport function bitLength(alg) {\n    switch (alg) {\n        case 'A128GCM':\n            return 128;\n        case 'A192GCM':\n            return 192;\n        case 'A256GCM':\n        case 'A128CBC-HS256':\n            return 256;\n        case 'A192CBC-HS384':\n            return 384;\n        case 'A256CBC-HS512':\n            return 512;\n        default:\n            throw new JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n}\nexport default (alg) => random(new Uint8Array(bitLength(alg) >> 3));\n","import crypto, { isCryptoKey } from './webcrypto.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { encodeBase64, decodeBase64 } from './base64url.js';\nimport formatPEM from '../lib/format_pem.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { types } from './is_key_like.js';\nconst genericExport = async (keyType, keyFormat, key) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    if (!key.extractable) {\n        throw new TypeError('CryptoKey is not extractable');\n    }\n    if (key.type !== keyType) {\n        throw new TypeError(`key is not a ${keyType} key`);\n    }\n    return formatPEM(encodeBase64(new Uint8Array(await crypto.subtle.exportKey(keyFormat, key))), `${keyType.toUpperCase()} KEY`);\n};\nexport const toSPKI = (key) => {\n    return genericExport('public', 'spki', key);\n};\nexport const toPKCS8 = (key) => {\n    return genericExport('private', 'pkcs8', key);\n};\nconst findOid = (keyData, oid, from = 0) => {\n    if (from === 0) {\n        oid.unshift(oid.length);\n        oid.unshift(0x06);\n    }\n    let i = keyData.indexOf(oid[0], from);\n    if (i === -1)\n        return false;\n    const sub = keyData.subarray(i, i + oid.length);\n    if (sub.length !== oid.length)\n        return false;\n    return sub.every((value, index) => value === oid[index]) || findOid(keyData, oid, i + 1);\n};\nconst getNamedCurve = (keyData) => {\n    switch (true) {\n        case findOid(keyData, [0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07]):\n            return 'P-256';\n        case findOid(keyData, [0x2b, 0x81, 0x04, 0x00, 0x22]):\n            return 'P-384';\n        case findOid(keyData, [0x2b, 0x81, 0x04, 0x00, 0x23]):\n            return 'P-521';\n        case findOid(keyData, [0x2b, 0x65, 0x6e]):\n            return 'X25519';\n        case findOid(keyData, [0x2b, 0x65, 0x6f]):\n            return 'X448';\n        case findOid(keyData, [0x2b, 0x65, 0x70]):\n            return 'Ed25519';\n        case findOid(keyData, [0x2b, 0x65, 0x71]):\n            return 'Ed448';\n        default:\n            throw new JOSENotSupported('Invalid or unsupported EC Key Curve or OKP Key Sub Type');\n    }\n};\nconst genericImport = async (replace, keyFormat, pem, alg, options) => {\n    var _a;\n    let algorithm;\n    let keyUsages;\n    const keyData = new Uint8Array(atob(pem.replace(replace, ''))\n        .split('')\n        .map((c) => c.charCodeAt(0)));\n    const isPublic = keyFormat === 'spki';\n    switch (alg) {\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            algorithm = { name: 'RSA-PSS', hash: `SHA-${alg.slice(-3)}` };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${alg.slice(-3)}` };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            algorithm = {\n                name: 'RSA-OAEP',\n                hash: `SHA-${parseInt(alg.slice(-3), 10) || 1}`,\n            };\n            keyUsages = isPublic ? ['encrypt', 'wrapKey'] : ['decrypt', 'unwrapKey'];\n            break;\n        case 'ES256':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ES384':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ES512':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            const namedCurve = getNamedCurve(keyData);\n            algorithm = namedCurve.startsWith('P-') ? { name: 'ECDH', namedCurve } : { name: namedCurve };\n            keyUsages = isPublic ? [] : ['deriveBits'];\n            break;\n        }\n        case 'EdDSA':\n            algorithm = { name: getNamedCurve(keyData) };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        default:\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (Algorithm) value');\n    }\n    return crypto.subtle.importKey(keyFormat, keyData, algorithm, (_a = options === null || options === void 0 ? void 0 : options.extractable) !== null && _a !== void 0 ? _a : false, keyUsages);\n};\nexport const fromPKCS8 = (pem, alg, options) => {\n    return genericImport(/(?:-----(?:BEGIN|END) PRIVATE KEY-----|\\s)/g, 'pkcs8', pem, alg, options);\n};\nexport const fromSPKI = (pem, alg, options) => {\n    return genericImport(/(?:-----(?:BEGIN|END) PUBLIC KEY-----|\\s)/g, 'spki', pem, alg, options);\n};\nfunction getElement(seq) {\n    let result = [];\n    let next = 0;\n    while (next < seq.length) {\n        let nextPart = parseElement(seq.subarray(next));\n        result.push(nextPart);\n        next += nextPart.byteLength;\n    }\n    return result;\n}\nfunction parseElement(bytes) {\n    let position = 0;\n    let tag = bytes[0] & 0x1f;\n    position++;\n    if (tag === 0x1f) {\n        tag = 0;\n        while (bytes[position] >= 0x80) {\n            tag = tag * 128 + bytes[position] - 0x80;\n            position++;\n        }\n        tag = tag * 128 + bytes[position] - 0x80;\n        position++;\n    }\n    let length = 0;\n    if (bytes[position] < 0x80) {\n        length = bytes[position];\n        position++;\n    }\n    else if (length === 0x80) {\n        length = 0;\n        while (bytes[position + length] !== 0 || bytes[position + length + 1] !== 0) {\n            if (length > bytes.byteLength) {\n                throw new TypeError('invalid indefinite form length');\n            }\n            length++;\n        }\n        const byteLength = position + length + 2;\n        return {\n            byteLength,\n            contents: bytes.subarray(position, position + length),\n            raw: bytes.subarray(0, byteLength),\n        };\n    }\n    else {\n        let numberOfDigits = bytes[position] & 0x7f;\n        position++;\n        length = 0;\n        for (let i = 0; i < numberOfDigits; i++) {\n            length = length * 256 + bytes[position];\n            position++;\n        }\n    }\n    const byteLength = position + length;\n    return {\n        byteLength,\n        contents: bytes.subarray(position, byteLength),\n        raw: bytes.subarray(0, byteLength),\n    };\n}\nfunction spkiFromX509(buf) {\n    const tbsCertificate = getElement(getElement(parseElement(buf).contents)[0].contents);\n    return encodeBase64(tbsCertificate[tbsCertificate[0].raw[0] === 0xa0 ? 6 : 5].raw);\n}\nfunction getSPKI(x509) {\n    const pem = x509.replace(/(?:-----(?:BEGIN|END) CERTIFICATE-----|\\s)/g, '');\n    const raw = decodeBase64(pem);\n    return formatPEM(spkiFromX509(raw), 'PUBLIC KEY');\n}\nexport const fromX509 = (pem, alg, options) => {\n    let spki;\n    try {\n        spki = getSPKI(pem);\n    }\n    catch (cause) {\n        throw new TypeError('Failed to parse the X.509 certificate', { cause });\n    }\n    return fromSPKI(spki, alg, options);\n};\n","import crypto from './webcrypto.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { decode as base64url } from './base64url.js';\nfunction subtleMapping(jwk) {\n    let algorithm;\n    let keyUsages;\n    switch (jwk.kty) {\n        case 'oct': {\n            switch (jwk.alg) {\n                case 'HS256':\n                case 'HS384':\n                case 'HS512':\n                    algorithm = { name: 'HMAC', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = ['sign', 'verify'];\n                    break;\n                case 'A128CBC-HS256':\n                case 'A192CBC-HS384':\n                case 'A256CBC-HS512':\n                    throw new JOSENotSupported(`${jwk.alg} keys cannot be imported as CryptoKey instances`);\n                case 'A128GCM':\n                case 'A192GCM':\n                case 'A256GCM':\n                case 'A128GCMKW':\n                case 'A192GCMKW':\n                case 'A256GCMKW':\n                    algorithm = { name: 'AES-GCM' };\n                    keyUsages = ['encrypt', 'decrypt'];\n                    break;\n                case 'A128KW':\n                case 'A192KW':\n                case 'A256KW':\n                    algorithm = { name: 'AES-KW' };\n                    keyUsages = ['wrapKey', 'unwrapKey'];\n                    break;\n                case 'PBES2-HS256+A128KW':\n                case 'PBES2-HS384+A192KW':\n                case 'PBES2-HS512+A256KW':\n                    algorithm = { name: 'PBKDF2' };\n                    keyUsages = ['deriveBits'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'RSA': {\n            switch (jwk.alg) {\n                case 'PS256':\n                case 'PS384':\n                case 'PS512':\n                    algorithm = { name: 'RSA-PSS', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RS256':\n                case 'RS384':\n                case 'RS512':\n                    algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RSA-OAEP':\n                case 'RSA-OAEP-256':\n                case 'RSA-OAEP-384':\n                case 'RSA-OAEP-512':\n                    algorithm = {\n                        name: 'RSA-OAEP',\n                        hash: `SHA-${parseInt(jwk.alg.slice(-3), 10) || 1}`,\n                    };\n                    keyUsages = jwk.d ? ['decrypt', 'unwrapKey'] : ['encrypt', 'wrapKey'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'EC': {\n            switch (jwk.alg) {\n                case 'ES256':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES384':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES512':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: 'ECDH', namedCurve: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'OKP': {\n            switch (jwk.alg) {\n                case 'EdDSA':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"kty\" (Key Type) Parameter value');\n    }\n    return { algorithm, keyUsages };\n}\nconst parse = async (jwk) => {\n    var _a, _b;\n    if (!jwk.alg) {\n        throw new TypeError('\"alg\" argument is required when \"jwk.alg\" is not present');\n    }\n    const { algorithm, keyUsages } = subtleMapping(jwk);\n    const rest = [\n        algorithm,\n        (_a = jwk.ext) !== null && _a !== void 0 ? _a : false,\n        (_b = jwk.key_ops) !== null && _b !== void 0 ? _b : keyUsages,\n    ];\n    if (algorithm.name === 'PBKDF2') {\n        return crypto.subtle.importKey('raw', base64url(jwk.k), ...rest);\n    }\n    const keyData = { ...jwk };\n    delete keyData.alg;\n    delete keyData.use;\n    return crypto.subtle.importKey('jwk', keyData, ...rest);\n};\nexport default parse;\n","import { decode as decodeBase64URL } from '../runtime/base64url.js';\nimport { fromSPKI, fromPKCS8, fromX509 } from '../runtime/asn1.js';\nimport asKeyObject from '../runtime/jwk_to_key.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nexport async function importSPKI(spki, alg, options) {\n    if (typeof spki !== 'string' || spki.indexOf('-----BEGIN PUBLIC KEY-----') !== 0) {\n        throw new TypeError('\"spki\" must be SPKI formatted string');\n    }\n    return fromSPKI(spki, alg, options);\n}\nexport async function importX509(x509, alg, options) {\n    if (typeof x509 !== 'string' || x509.indexOf('-----BEGIN CERTIFICATE-----') !== 0) {\n        throw new TypeError('\"x509\" must be X.509 formatted string');\n    }\n    return fromX509(x509, alg, options);\n}\nexport async function importPKCS8(pkcs8, alg, options) {\n    if (typeof pkcs8 !== 'string' || pkcs8.indexOf('-----BEGIN PRIVATE KEY-----') !== 0) {\n        throw new TypeError('\"pkcs8\" must be PKCS#8 formatted string');\n    }\n    return fromPKCS8(pkcs8, alg, options);\n}\nexport async function importJWK(jwk, alg, octAsKeyObject) {\n    var _a;\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    alg || (alg = jwk.alg);\n    switch (jwk.kty) {\n        case 'oct':\n            if (typeof jwk.k !== 'string' || !jwk.k) {\n                throw new TypeError('missing \"k\" (Key Value) Parameter value');\n            }\n            octAsKeyObject !== null && octAsKeyObject !== void 0 ? octAsKeyObject : (octAsKeyObject = jwk.ext !== true);\n            if (octAsKeyObject) {\n                return asKeyObject({ ...jwk, alg, ext: (_a = jwk.ext) !== null && _a !== void 0 ? _a : false });\n            }\n            return decodeBase64URL(jwk.k);\n        case 'RSA':\n            if (jwk.oth !== undefined) {\n                throw new JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\n            }\n        case 'EC':\n        case 'OKP':\n            return asKeyObject({ ...jwk, alg });\n        default:\n            throw new JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\n    }\n}\n","import { withAlg as invalidKeyInput } from './invalid_key_input.js';\nimport isKeyLike, { types } from '../runtime/is_key_like.js';\nconst symmetricTypeCheck = (alg, key) => {\n    if (key instanceof Uint8Array)\n        return;\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types, 'Uint8Array'));\n    }\n    if (key.type !== 'secret') {\n        throw new TypeError(`${types.join(' or ')} instances for symmetric algorithms must be of type \"secret\"`);\n    }\n};\nconst asymmetricTypeCheck = (alg, key, usage) => {\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types));\n    }\n    if (key.type === 'secret') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithms must not be of type \"secret\"`);\n    }\n    if (usage === 'sign' && key.type === 'public') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm signing must be of type \"private\"`);\n    }\n    if (usage === 'decrypt' && key.type === 'public') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm decryption must be of type \"private\"`);\n    }\n    if (key.algorithm && usage === 'verify' && key.type === 'private') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm verifying must be of type \"public\"`);\n    }\n    if (key.algorithm && usage === 'encrypt' && key.type === 'private') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm encryption must be of type \"public\"`);\n    }\n};\nconst checkKeyType = (alg, key, usage) => {\n    const symmetric = alg.startsWith('HS') ||\n        alg === 'dir' ||\n        alg.startsWith('PBES2') ||\n        /^A\\d{3}(?:GCM)?KW$/.test(alg);\n    if (symmetric) {\n        symmetricTypeCheck(alg, key);\n    }\n    else {\n        asymmetricTypeCheck(alg, key, usage);\n    }\n};\nexport default checkKeyType;\n","import { concat, uint64be } from '../lib/buffer_utils.js';\nimport checkIvLength from '../lib/check_iv_length.js';\nimport checkCekLength from './check_cek_length.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { types } from './is_key_like.js';\nasync function cbcEncrypt(enc, plaintext, cek, iv, aad) {\n    if (!(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, 'Uint8Array'));\n    }\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const encKey = await crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['encrypt']);\n    const macKey = await crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\n        hash: `SHA-${keySize << 1}`,\n        name: 'HMAC',\n    }, false, ['sign']);\n    const ciphertext = new Uint8Array(await crypto.subtle.encrypt({\n        iv,\n        name: 'AES-CBC',\n    }, encKey, plaintext));\n    const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\n    const tag = new Uint8Array((await crypto.subtle.sign('HMAC', macKey, macData)).slice(0, keySize >> 3));\n    return { ciphertext, tag };\n}\nasync function gcmEncrypt(enc, plaintext, cek, iv, aad) {\n    let encKey;\n    if (cek instanceof Uint8Array) {\n        encKey = await crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['encrypt']);\n    }\n    else {\n        checkEncCryptoKey(cek, enc, 'encrypt');\n        encKey = cek;\n    }\n    const encrypted = new Uint8Array(await crypto.subtle.encrypt({\n        additionalData: aad,\n        iv,\n        name: 'AES-GCM',\n        tagLength: 128,\n    }, encKey, plaintext));\n    const tag = encrypted.slice(-16);\n    const ciphertext = encrypted.slice(0, -16);\n    return { ciphertext, tag };\n}\nconst encrypt = async (enc, plaintext, cek, iv, aad) => {\n    if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\n    }\n    checkIvLength(enc, iv);\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(-3), 10));\n            return cbcEncrypt(enc, plaintext, cek, iv, aad);\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(1, 4), 10));\n            return gcmEncrypt(enc, plaintext, cek, iv, aad);\n        default:\n            throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n    }\n};\nexport default encrypt;\n","import encrypt from '../runtime/encrypt.js';\nimport decrypt from '../runtime/decrypt.js';\nimport generateIv from './iv.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nexport async function wrap(alg, key, cek, iv) {\n    const jweAlgorithm = alg.slice(0, 7);\n    iv || (iv = generateIv(jweAlgorithm));\n    const { ciphertext: encryptedKey, tag } = await encrypt(jweAlgorithm, cek, key, iv, new Uint8Array(0));\n    return { encryptedKey, iv: base64url(iv), tag: base64url(tag) };\n}\nexport async function unwrap(alg, key, encryptedKey, iv, tag) {\n    const jweAlgorithm = alg.slice(0, 7);\n    return decrypt(jweAlgorithm, key, encryptedKey, iv, tag, new Uint8Array(0));\n}\n","import { unwrap as aesKw } from '../runtime/aeskw.js';\nimport * as ECDH from '../runtime/ecdhes.js';\nimport { decrypt as pbes2Kw } from '../runtime/pbes2kw.js';\nimport { decrypt as rsaEs } from '../runtime/rsaes.js';\nimport { decode as base64url } from '../runtime/base64url.js';\nimport { JOSENotSupported, JWEInvalid } from '../util/errors.js';\nimport { bitLength as cekLength } from '../lib/cek.js';\nimport { importJWK } from '../key/import.js';\nimport checkKeyType from './check_key_type.js';\nimport isObject from './is_object.js';\nimport { unwrap as aesGcmKw } from './aesgcmkw.js';\nasync function decryptKeyManagement(alg, key, encryptedKey, joseHeader, options) {\n    checkKeyType(alg, key, 'decrypt');\n    switch (alg) {\n        case 'dir': {\n            if (encryptedKey !== undefined)\n                throw new JWEInvalid('Encountered unexpected JWE Encrypted Key');\n            return key;\n        }\n        case 'ECDH-ES':\n            if (encryptedKey !== undefined)\n                throw new JWEInvalid('Encountered unexpected JWE Encrypted Key');\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            if (!isObject(joseHeader.epk))\n                throw new JWEInvalid(`JOSE Header \"epk\" (Ephemeral Public Key) missing or invalid`);\n            if (!ECDH.ecdhAllowed(key))\n                throw new JOSENotSupported('ECDH with the provided key is not allowed or not supported by your javascript runtime');\n            const epk = await importJWK(joseHeader.epk, alg);\n            let partyUInfo;\n            let partyVInfo;\n            if (joseHeader.apu !== undefined) {\n                if (typeof joseHeader.apu !== 'string')\n                    throw new JWEInvalid(`JOSE Header \"apu\" (Agreement PartyUInfo) invalid`);\n                try {\n                    partyUInfo = base64url(joseHeader.apu);\n                }\n                catch (_a) {\n                    throw new JWEInvalid('Failed to base64url decode the apu');\n                }\n            }\n            if (joseHeader.apv !== undefined) {\n                if (typeof joseHeader.apv !== 'string')\n                    throw new JWEInvalid(`JOSE Header \"apv\" (Agreement PartyVInfo) invalid`);\n                try {\n                    partyVInfo = base64url(joseHeader.apv);\n                }\n                catch (_b) {\n                    throw new JWEInvalid('Failed to base64url decode the apv');\n                }\n            }\n            const sharedSecret = await ECDH.deriveKey(epk, key, alg === 'ECDH-ES' ? joseHeader.enc : alg, alg === 'ECDH-ES' ? cekLength(joseHeader.enc) : parseInt(alg.slice(-5, -2), 10), partyUInfo, partyVInfo);\n            if (alg === 'ECDH-ES')\n                return sharedSecret;\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return aesKw(alg.slice(-6), sharedSecret, encryptedKey);\n        }\n        case 'RSA1_5':\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return rsaEs(alg, key, encryptedKey);\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            if (typeof joseHeader.p2c !== 'number')\n                throw new JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) missing or invalid`);\n            const p2cLimit = (options === null || options === void 0 ? void 0 : options.maxPBES2Count) || 10000;\n            if (joseHeader.p2c > p2cLimit)\n                throw new JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) out is of acceptable bounds`);\n            if (typeof joseHeader.p2s !== 'string')\n                throw new JWEInvalid(`JOSE Header \"p2s\" (PBES2 Salt) missing or invalid`);\n            let p2s;\n            try {\n                p2s = base64url(joseHeader.p2s);\n            }\n            catch (_c) {\n                throw new JWEInvalid('Failed to base64url decode the p2s');\n            }\n            return pbes2Kw(alg, key, encryptedKey, joseHeader.p2c, p2s);\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return aesKw(alg, key, encryptedKey);\n        }\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            if (typeof joseHeader.iv !== 'string')\n                throw new JWEInvalid(`JOSE Header \"iv\" (Initialization Vector) missing or invalid`);\n            if (typeof joseHeader.tag !== 'string')\n                throw new JWEInvalid(`JOSE Header \"tag\" (Authentication Tag) missing or invalid`);\n            let iv;\n            try {\n                iv = base64url(joseHeader.iv);\n            }\n            catch (_d) {\n                throw new JWEInvalid('Failed to base64url decode the iv');\n            }\n            let tag;\n            try {\n                tag = base64url(joseHeader.tag);\n            }\n            catch (_e) {\n                throw new JWEInvalid('Failed to base64url decode the tag');\n            }\n            return aesGcmKw(alg, key, encryptedKey, iv, tag);\n        }\n        default: {\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n        }\n    }\n}\nexport default decryptKeyManagement;\n","import { JOSENotSupported } from '../util/errors.js';\nfunction validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {\n    if (joseHeader.crit !== undefined && protectedHeader.crit === undefined) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n    }\n    if (!protectedHeader || protectedHeader.crit === undefined) {\n        return new Set();\n    }\n    if (!Array.isArray(protectedHeader.crit) ||\n        protectedHeader.crit.length === 0 ||\n        protectedHeader.crit.some((input) => typeof input !== 'string' || input.length === 0)) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n    }\n    let recognized;\n    if (recognizedOption !== undefined) {\n        recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\n    }\n    else {\n        recognized = recognizedDefault;\n    }\n    for (const parameter of protectedHeader.crit) {\n        if (!recognized.has(parameter)) {\n            throw new JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n        }\n        if (joseHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n        }\n        else if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n        }\n    }\n    return new Set(protectedHeader.crit);\n}\nexport default validateCrit;\n","const validateAlgorithms = (option, algorithms) => {\n    if (algorithms !== undefined &&\n        (!Array.isArray(algorithms) || algorithms.some((s) => typeof s !== 'string'))) {\n        throw new TypeError(`\"${option}\" option must be an array of strings`);\n    }\n    if (!algorithms) {\n        return undefined;\n    }\n    return new Set(algorithms);\n};\nexport default validateAlgorithms;\n","import { decode as base64url } from '../../runtime/base64url.js';\nimport decrypt from '../../runtime/decrypt.js';\nimport { inflate } from '../../runtime/zlib.js';\nimport { JOSEAlgNotAllowed, JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport decryptKeyManagement from '../../lib/decrypt_key_management.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport generateCek from '../../lib/cek.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nexport async function flattenedDecrypt(jwe, key, options) {\n    var _a;\n    if (!isObject(jwe)) {\n        throw new JWEInvalid('Flattened JWE must be an object');\n    }\n    if (jwe.protected === undefined && jwe.header === undefined && jwe.unprotected === undefined) {\n        throw new JWEInvalid('JOSE Header missing');\n    }\n    if (typeof jwe.iv !== 'string') {\n        throw new JWEInvalid('JWE Initialization Vector missing or incorrect type');\n    }\n    if (typeof jwe.ciphertext !== 'string') {\n        throw new JWEInvalid('JWE Ciphertext missing or incorrect type');\n    }\n    if (typeof jwe.tag !== 'string') {\n        throw new JWEInvalid('JWE Authentication Tag missing or incorrect type');\n    }\n    if (jwe.protected !== undefined && typeof jwe.protected !== 'string') {\n        throw new JWEInvalid('JWE Protected Header incorrect type');\n    }\n    if (jwe.encrypted_key !== undefined && typeof jwe.encrypted_key !== 'string') {\n        throw new JWEInvalid('JWE Encrypted Key incorrect type');\n    }\n    if (jwe.aad !== undefined && typeof jwe.aad !== 'string') {\n        throw new JWEInvalid('JWE AAD incorrect type');\n    }\n    if (jwe.header !== undefined && !isObject(jwe.header)) {\n        throw new JWEInvalid('JWE Shared Unprotected Header incorrect type');\n    }\n    if (jwe.unprotected !== undefined && !isObject(jwe.unprotected)) {\n        throw new JWEInvalid('JWE Per-Recipient Unprotected Header incorrect type');\n    }\n    let parsedProt;\n    if (jwe.protected) {\n        try {\n            const protectedHeader = base64url(jwe.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch (_b) {\n            throw new JWEInvalid('JWE Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jwe.header, jwe.unprotected)) {\n        throw new JWEInvalid('JWE Protected, JWE Unprotected Header, and JWE Per-Recipient Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jwe.header,\n        ...jwe.unprotected,\n    };\n    validateCrit(JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n    if (joseHeader.zip !== undefined) {\n        if (!parsedProt || !parsedProt.zip) {\n            throw new JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n        }\n        if (joseHeader.zip !== 'DEF') {\n            throw new JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n        }\n    }\n    const { alg, enc } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWEInvalid('missing JWE Algorithm (alg) in JWE Header');\n    }\n    if (typeof enc !== 'string' || !enc) {\n        throw new JWEInvalid('missing JWE Encryption Algorithm (enc) in JWE Header');\n    }\n    const keyManagementAlgorithms = options && validateAlgorithms('keyManagementAlgorithms', options.keyManagementAlgorithms);\n    const contentEncryptionAlgorithms = options &&\n        validateAlgorithms('contentEncryptionAlgorithms', options.contentEncryptionAlgorithms);\n    if (keyManagementAlgorithms && !keyManagementAlgorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n    }\n    if (contentEncryptionAlgorithms && !contentEncryptionAlgorithms.has(enc)) {\n        throw new JOSEAlgNotAllowed('\"enc\" (Encryption Algorithm) Header Parameter not allowed');\n    }\n    let encryptedKey;\n    if (jwe.encrypted_key !== undefined) {\n        try {\n            encryptedKey = base64url(jwe.encrypted_key);\n        }\n        catch (_c) {\n            throw new JWEInvalid('Failed to base64url decode the encrypted_key');\n        }\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jwe);\n        resolvedKey = true;\n    }\n    let cek;\n    try {\n        cek = await decryptKeyManagement(alg, key, encryptedKey, joseHeader, options);\n    }\n    catch (err) {\n        if (err instanceof TypeError || err instanceof JWEInvalid || err instanceof JOSENotSupported) {\n            throw err;\n        }\n        cek = generateCek(enc);\n    }\n    let iv;\n    let tag;\n    try {\n        iv = base64url(jwe.iv);\n    }\n    catch (_d) {\n        throw new JWEInvalid('Failed to base64url decode the iv');\n    }\n    try {\n        tag = base64url(jwe.tag);\n    }\n    catch (_e) {\n        throw new JWEInvalid('Failed to base64url decode the tag');\n    }\n    const protectedHeader = encoder.encode((_a = jwe.protected) !== null && _a !== void 0 ? _a : '');\n    let additionalData;\n    if (jwe.aad !== undefined) {\n        additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(jwe.aad));\n    }\n    else {\n        additionalData = protectedHeader;\n    }\n    let ciphertext;\n    try {\n        ciphertext = base64url(jwe.ciphertext);\n    }\n    catch (_f) {\n        throw new JWEInvalid('Failed to base64url decode the ciphertext');\n    }\n    let plaintext = await decrypt(enc, cek, ciphertext, iv, tag, additionalData);\n    if (joseHeader.zip === 'DEF') {\n        plaintext = await ((options === null || options === void 0 ? void 0 : options.inflateRaw) || inflate)(plaintext);\n    }\n    const result = { plaintext };\n    if (jwe.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jwe.aad !== undefined) {\n        try {\n            result.additionalAuthenticatedData = base64url(jwe.aad);\n        }\n        catch (_g) {\n            throw new JWEInvalid('Failed to base64url decode the aad');\n        }\n    }\n    if (jwe.unprotected !== undefined) {\n        result.sharedUnprotectedHeader = jwe.unprotected;\n    }\n    if (jwe.header !== undefined) {\n        result.unprotectedHeader = jwe.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\n","import { flattenedDecrypt } from '../flattened/decrypt.js';\nimport { JWEInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactDecrypt(jwe, key, options) {\n    if (jwe instanceof Uint8Array) {\n        jwe = decoder.decode(jwe);\n    }\n    if (typeof jwe !== 'string') {\n        throw new JWEInvalid('Compact JWE must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: encryptedKey, 2: iv, 3: ciphertext, 4: tag, length, } = jwe.split('.');\n    if (length !== 5) {\n        throw new JWEInvalid('Invalid Compact JWE');\n    }\n    const decrypted = await flattenedDecrypt({\n        ciphertext,\n        iv: (iv || undefined),\n        protected: protectedHeader || undefined,\n        tag: (tag || undefined),\n        encrypted_key: encryptedKey || undefined,\n    }, key, options);\n    const result = { plaintext: decrypted.plaintext, protectedHeader: decrypted.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: decrypted.key };\n    }\n    return result;\n}\n","import { flattenedDecrypt } from '../flattened/decrypt.js';\nimport { JWEDecryptionFailed, JWEInvalid } from '../../util/errors.js';\nimport isObject from '../../lib/is_object.js';\nexport async function generalDecrypt(jwe, key, options) {\n    if (!isObject(jwe)) {\n        throw new JWEInvalid('General JWE must be an object');\n    }\n    if (!Array.isArray(jwe.recipients) || !jwe.recipients.every(isObject)) {\n        throw new JWEInvalid('JWE Recipients missing or incorrect type');\n    }\n    if (!jwe.recipients.length) {\n        throw new JWEInvalid('JWE Recipients has no members');\n    }\n    for (const recipient of jwe.recipients) {\n        try {\n            return await flattenedDecrypt({\n                aad: jwe.aad,\n                ciphertext: jwe.ciphertext,\n                encrypted_key: recipient.encrypted_key,\n                header: recipient.header,\n                iv: jwe.iv,\n                protected: jwe.protected,\n                tag: jwe.tag,\n                unprotected: jwe.unprotected,\n            }, key, options);\n        }\n        catch (_a) {\n        }\n    }\n    throw new JWEDecryptionFailed();\n}\n","import crypto, { isCryptoKey } from './webcrypto.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { encode as base64url } from './base64url.js';\nimport { types } from './is_key_like.js';\nconst keyToJWK = async (key) => {\n    if (key instanceof Uint8Array) {\n        return {\n            kty: 'oct',\n            k: base64url(key),\n        };\n    }\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n    }\n    if (!key.extractable) {\n        throw new TypeError('non-extractable CryptoKey cannot be exported as a JWK');\n    }\n    const { ext, key_ops, alg, use, ...jwk } = await crypto.subtle.exportKey('jwk', key);\n    return jwk;\n};\nexport default keyToJWK;\n","import { toSPKI as exportPublic } from '../runtime/asn1.js';\nimport { toPKCS8 as exportPrivate } from '../runtime/asn1.js';\nimport keyToJWK from '../runtime/key_to_jwk.js';\nexport async function exportSPKI(key) {\n    return exportPublic(key);\n}\nexport async function exportPKCS8(key) {\n    return exportPrivate(key);\n}\nexport async function exportJWK(key) {\n    return keyToJWK(key);\n}\n","import { wrap as aesKw } from '../runtime/aeskw.js';\nimport * as ECDH from '../runtime/ecdhes.js';\nimport { encrypt as pbes2Kw } from '../runtime/pbes2kw.js';\nimport { encrypt as rsaEs } from '../runtime/rsaes.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nimport generateCek, { bitLength as cekLength } from '../lib/cek.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { exportJWK } from '../key/export.js';\nimport checkKeyType from './check_key_type.js';\nimport { wrap as aesGcmKw } from './aesgcmkw.js';\nasync function encryptKeyManagement(alg, enc, key, providedCek, providedParameters = {}) {\n    let encryptedKey;\n    let parameters;\n    let cek;\n    checkKeyType(alg, key, 'encrypt');\n    switch (alg) {\n        case 'dir': {\n            cek = key;\n            break;\n        }\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            if (!ECDH.ecdhAllowed(key)) {\n                throw new JOSENotSupported('ECDH with the provided key is not allowed or not supported by your javascript runtime');\n            }\n            const { apu, apv } = providedParameters;\n            let { epk: ephemeralKey } = providedParameters;\n            ephemeralKey || (ephemeralKey = (await ECDH.generateEpk(key)).privateKey);\n            const { x, y, crv, kty } = await exportJWK(ephemeralKey);\n            const sharedSecret = await ECDH.deriveKey(key, ephemeralKey, alg === 'ECDH-ES' ? enc : alg, alg === 'ECDH-ES' ? cekLength(enc) : parseInt(alg.slice(-5, -2), 10), apu, apv);\n            parameters = { epk: { x, crv, kty } };\n            if (kty === 'EC')\n                parameters.epk.y = y;\n            if (apu)\n                parameters.apu = base64url(apu);\n            if (apv)\n                parameters.apv = base64url(apv);\n            if (alg === 'ECDH-ES') {\n                cek = sharedSecret;\n                break;\n            }\n            cek = providedCek || generateCek(enc);\n            const kwAlg = alg.slice(-6);\n            encryptedKey = await aesKw(kwAlg, sharedSecret, cek);\n            break;\n        }\n        case 'RSA1_5':\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            cek = providedCek || generateCek(enc);\n            encryptedKey = await rsaEs(alg, key, cek);\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW': {\n            cek = providedCek || generateCek(enc);\n            const { p2c, p2s } = providedParameters;\n            ({ encryptedKey, ...parameters } = await pbes2Kw(alg, key, cek, p2c, p2s));\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            cek = providedCek || generateCek(enc);\n            encryptedKey = await aesKw(alg, key, cek);\n            break;\n        }\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW': {\n            cek = providedCek || generateCek(enc);\n            const { iv } = providedParameters;\n            ({ encryptedKey, ...parameters } = await aesGcmKw(alg, key, cek, iv));\n            break;\n        }\n        default: {\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n        }\n    }\n    return { cek, encryptedKey, parameters };\n}\nexport default encryptKeyManagement;\n","import { encode as base64url } from '../../runtime/base64url.js';\nimport encrypt from '../../runtime/encrypt.js';\nimport { deflate } from '../../runtime/zlib.js';\nimport generateIv from '../../lib/iv.js';\nimport encryptKeyManagement from '../../lib/encrypt_key_management.js';\nimport { JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport validateCrit from '../../lib/validate_crit.js';\nexport const unprotected = Symbol();\nexport class FlattenedEncrypt {\n    constructor(plaintext) {\n        if (!(plaintext instanceof Uint8Array)) {\n            throw new TypeError('plaintext must be an instance of Uint8Array');\n        }\n        this._plaintext = plaintext;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError('setKeyManagementParameters can only be called once');\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._sharedUnprotectedHeader) {\n            throw new TypeError('setSharedUnprotectedHeader can only be called once');\n        }\n        this._sharedUnprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError('setContentEncryptionKey can only be called once');\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError('setInitializationVector can only be called once');\n        }\n        this._iv = iv;\n        return this;\n    }\n    async encrypt(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader && !this._sharedUnprotectedHeader) {\n            throw new JWEInvalid('either setProtectedHeader, setUnprotectedHeader, or sharedUnprotectedHeader must be called before #encrypt()');\n        }\n        if (!isDisjoint(this._protectedHeader, this._unprotectedHeader, this._sharedUnprotectedHeader)) {\n            throw new JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader,\n            ...this._sharedUnprotectedHeader,\n        };\n        validateCrit(JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, this._protectedHeader, joseHeader);\n        if (joseHeader.zip !== undefined) {\n            if (!this._protectedHeader || !this._protectedHeader.zip) {\n                throw new JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n            }\n            if (joseHeader.zip !== 'DEF') {\n                throw new JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n            }\n        }\n        const { alg, enc } = joseHeader;\n        if (typeof alg !== 'string' || !alg) {\n            throw new JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        if (typeof enc !== 'string' || !enc) {\n            throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n        }\n        let encryptedKey;\n        if (alg === 'dir') {\n            if (this._cek) {\n                throw new TypeError('setContentEncryptionKey cannot be called when using Direct Encryption');\n            }\n        }\n        else if (alg === 'ECDH-ES') {\n            if (this._cek) {\n                throw new TypeError('setContentEncryptionKey cannot be called when using Direct Key Agreement');\n            }\n        }\n        let cek;\n        {\n            let parameters;\n            ({ cek, encryptedKey, parameters } = await encryptKeyManagement(alg, enc, key, this._cek, this._keyManagementParameters));\n            if (parameters) {\n                if (options && unprotected in options) {\n                    if (!this._unprotectedHeader) {\n                        this.setUnprotectedHeader(parameters);\n                    }\n                    else {\n                        this._unprotectedHeader = { ...this._unprotectedHeader, ...parameters };\n                    }\n                }\n                else {\n                    if (!this._protectedHeader) {\n                        this.setProtectedHeader(parameters);\n                    }\n                    else {\n                        this._protectedHeader = { ...this._protectedHeader, ...parameters };\n                    }\n                }\n            }\n        }\n        this._iv || (this._iv = generateIv(enc));\n        let additionalData;\n        let protectedHeader;\n        let aadMember;\n        if (this._protectedHeader) {\n            protectedHeader = encoder.encode(base64url(JSON.stringify(this._protectedHeader)));\n        }\n        else {\n            protectedHeader = encoder.encode('');\n        }\n        if (this._aad) {\n            aadMember = base64url(this._aad);\n            additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(aadMember));\n        }\n        else {\n            additionalData = protectedHeader;\n        }\n        let ciphertext;\n        let tag;\n        if (joseHeader.zip === 'DEF') {\n            const deflated = await ((options === null || options === void 0 ? void 0 : options.deflateRaw) || deflate)(this._plaintext);\n            ({ ciphertext, tag } = await encrypt(enc, deflated, cek, this._iv, additionalData));\n        }\n        else {\n            ;\n            ({ ciphertext, tag } = await encrypt(enc, this._plaintext, cek, this._iv, additionalData));\n        }\n        const jwe = {\n            ciphertext: base64url(ciphertext),\n            iv: base64url(this._iv),\n            tag: base64url(tag),\n        };\n        if (encryptedKey) {\n            jwe.encrypted_key = base64url(encryptedKey);\n        }\n        if (aadMember) {\n            jwe.aad = aadMember;\n        }\n        if (this._protectedHeader) {\n            jwe.protected = decoder.decode(protectedHeader);\n        }\n        if (this._sharedUnprotectedHeader) {\n            jwe.unprotected = this._sharedUnprotectedHeader;\n        }\n        if (this._unprotectedHeader) {\n            jwe.header = this._unprotectedHeader;\n        }\n        return jwe;\n    }\n}\n","import { FlattenedEncrypt, unprotected } from '../flattened/encrypt.js';\nimport { JWEInvalid } from '../../util/errors.js';\nimport generateCek from '../../lib/cek.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport encryptKeyManagement from '../../lib/encrypt_key_management.js';\nimport { encode as base64url } from '../../runtime/base64url.js';\nimport validateCrit from '../../lib/validate_crit.js';\nclass IndividualRecipient {\n    constructor(enc, key, options) {\n        this.parent = enc;\n        this.key = key;\n        this.options = options;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this.unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    addRecipient(...args) {\n        return this.parent.addRecipient(...args);\n    }\n    encrypt(...args) {\n        return this.parent.encrypt(...args);\n    }\n    done() {\n        return this.parent;\n    }\n}\nexport class GeneralEncrypt {\n    constructor(plaintext) {\n        this._recipients = [];\n        this._plaintext = plaintext;\n    }\n    addRecipient(key, options) {\n        const recipient = new IndividualRecipient(this, key, { crit: options === null || options === void 0 ? void 0 : options.crit });\n        this._recipients.push(recipient);\n        return recipient;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setSharedUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    async encrypt(options) {\n        var _a, _b, _c;\n        if (!this._recipients.length) {\n            throw new JWEInvalid('at least one recipient must be added');\n        }\n        options = { deflateRaw: options === null || options === void 0 ? void 0 : options.deflateRaw };\n        if (this._recipients.length === 1) {\n            const [recipient] = this._recipients;\n            const flattened = await new FlattenedEncrypt(this._plaintext)\n                .setAdditionalAuthenticatedData(this._aad)\n                .setProtectedHeader(this._protectedHeader)\n                .setSharedUnprotectedHeader(this._unprotectedHeader)\n                .setUnprotectedHeader(recipient.unprotectedHeader)\n                .encrypt(recipient.key, { ...recipient.options, ...options });\n            let jwe = {\n                ciphertext: flattened.ciphertext,\n                iv: flattened.iv,\n                recipients: [{}],\n                tag: flattened.tag,\n            };\n            if (flattened.aad)\n                jwe.aad = flattened.aad;\n            if (flattened.protected)\n                jwe.protected = flattened.protected;\n            if (flattened.unprotected)\n                jwe.unprotected = flattened.unprotected;\n            if (flattened.encrypted_key)\n                jwe.recipients[0].encrypted_key = flattened.encrypted_key;\n            if (flattened.header)\n                jwe.recipients[0].header = flattened.header;\n            return jwe;\n        }\n        let enc;\n        for (let i = 0; i < this._recipients.length; i++) {\n            const recipient = this._recipients[i];\n            if (!isDisjoint(this._protectedHeader, this._unprotectedHeader, recipient.unprotectedHeader)) {\n                throw new JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n            }\n            const joseHeader = {\n                ...this._protectedHeader,\n                ...this._unprotectedHeader,\n                ...recipient.unprotectedHeader,\n            };\n            const { alg } = joseHeader;\n            if (typeof alg !== 'string' || !alg) {\n                throw new JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n            }\n            if (alg === 'dir' || alg === 'ECDH-ES') {\n                throw new JWEInvalid('\"dir\" and \"ECDH-ES\" alg may only be used with a single recipient');\n            }\n            if (typeof joseHeader.enc !== 'string' || !joseHeader.enc) {\n                throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n            }\n            if (!enc) {\n                enc = joseHeader.enc;\n            }\n            else if (enc !== joseHeader.enc) {\n                throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter must be the same for all recipients');\n            }\n            validateCrit(JWEInvalid, new Map(), recipient.options.crit, this._protectedHeader, joseHeader);\n            if (joseHeader.zip !== undefined) {\n                if (!this._protectedHeader || !this._protectedHeader.zip) {\n                    throw new JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n                }\n            }\n        }\n        const cek = generateCek(enc);\n        let jwe = {\n            ciphertext: '',\n            iv: '',\n            recipients: [],\n            tag: '',\n        };\n        for (let i = 0; i < this._recipients.length; i++) {\n            const recipient = this._recipients[i];\n            const target = {};\n            jwe.recipients.push(target);\n            const joseHeader = {\n                ...this._protectedHeader,\n                ...this._unprotectedHeader,\n                ...recipient.unprotectedHeader,\n            };\n            const p2c = joseHeader.alg.startsWith('PBES2') ? 2048 + i : undefined;\n            if (i === 0) {\n                const flattened = await new FlattenedEncrypt(this._plaintext)\n                    .setAdditionalAuthenticatedData(this._aad)\n                    .setContentEncryptionKey(cek)\n                    .setProtectedHeader(this._protectedHeader)\n                    .setSharedUnprotectedHeader(this._unprotectedHeader)\n                    .setUnprotectedHeader(recipient.unprotectedHeader)\n                    .setKeyManagementParameters({ p2c })\n                    .encrypt(recipient.key, {\n                    ...recipient.options,\n                    ...options,\n                    [unprotected]: true,\n                });\n                jwe.ciphertext = flattened.ciphertext;\n                jwe.iv = flattened.iv;\n                jwe.tag = flattened.tag;\n                if (flattened.aad)\n                    jwe.aad = flattened.aad;\n                if (flattened.protected)\n                    jwe.protected = flattened.protected;\n                if (flattened.unprotected)\n                    jwe.unprotected = flattened.unprotected;\n                target.encrypted_key = flattened.encrypted_key;\n                if (flattened.header)\n                    target.header = flattened.header;\n                continue;\n            }\n            const { encryptedKey, parameters } = await encryptKeyManagement(((_a = recipient.unprotectedHeader) === null || _a === void 0 ? void 0 : _a.alg) ||\n                ((_b = this._protectedHeader) === null || _b === void 0 ? void 0 : _b.alg) ||\n                ((_c = this._unprotectedHeader) === null || _c === void 0 ? void 0 : _c.alg), enc, recipient.key, cek, { p2c });\n            target.encrypted_key = base64url(encryptedKey);\n            if (recipient.unprotectedHeader || parameters)\n                target.header = { ...recipient.unprotectedHeader, ...parameters };\n        }\n        return jwe;\n    }\n}\n","import { JOSENotSupported } from '../util/errors.js';\nexport default function subtleDsa(alg, algorithm) {\n    const hash = `SHA-${alg.slice(-3)}`;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            return { hash, name: 'HMAC' };\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            return { hash, name: 'RSA-PSS', saltLength: alg.slice(-3) >> 3 };\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            return { hash, name: 'RSASSA-PKCS1-v1_5' };\n        case 'ES256':\n        case 'ES384':\n        case 'ES512':\n            return { hash, name: 'ECDSA', namedCurve: algorithm.namedCurve };\n        case 'EdDSA':\n            return { name: algorithm.name };\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n","import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getVerifyKey from './get_sign_verify_key.js';\nconst verify = async (alg, key, signature, data) => {\n    const cryptoKey = await getVerifyKey(alg, key, 'verify');\n    checkKeyLength(alg, cryptoKey);\n    const algorithm = subtleAlgorithm(alg, cryptoKey.algorithm);\n    try {\n        return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\n    }\n    catch (_a) {\n        return false;\n    }\n};\nexport default verify;\n","import { decode as base64url } from '../../runtime/base64url.js';\nimport verify from '../../runtime/verify.js';\nimport { JOSEAlgNotAllowed, JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport { concat, encoder, decoder } from '../../lib/buffer_utils.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport checkKeyType from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nexport async function flattenedVerify(jws, key, options) {\n    var _a;\n    if (!isObject(jws)) {\n        throw new JWSInvalid('Flattened JWS must be an object');\n    }\n    if (jws.protected === undefined && jws.header === undefined) {\n        throw new JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\n    }\n    if (jws.protected !== undefined && typeof jws.protected !== 'string') {\n        throw new JWSInvalid('JWS Protected Header incorrect type');\n    }\n    if (jws.payload === undefined) {\n        throw new JWSInvalid('JWS Payload missing');\n    }\n    if (typeof jws.signature !== 'string') {\n        throw new JWSInvalid('JWS Signature missing or incorrect type');\n    }\n    if (jws.header !== undefined && !isObject(jws.header)) {\n        throw new JWSInvalid('JWS Unprotected Header incorrect type');\n    }\n    let parsedProt = {};\n    if (jws.protected) {\n        try {\n            const protectedHeader = base64url(jws.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch (_b) {\n            throw new JWSInvalid('JWS Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jws.header)) {\n        throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jws.header,\n    };\n    const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n    let b64 = true;\n    if (extensions.has('b64')) {\n        b64 = parsedProt.b64;\n        if (typeof b64 !== 'boolean') {\n            throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n        }\n    }\n    const { alg } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    const algorithms = options && validateAlgorithms('algorithms', options.algorithms);\n    if (algorithms && !algorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n    }\n    if (b64) {\n        if (typeof jws.payload !== 'string') {\n            throw new JWSInvalid('JWS Payload must be a string');\n        }\n    }\n    else if (typeof jws.payload !== 'string' && !(jws.payload instanceof Uint8Array)) {\n        throw new JWSInvalid('JWS Payload must be a string or an Uint8Array instance');\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jws);\n        resolvedKey = true;\n    }\n    checkKeyType(alg, key, 'verify');\n    const data = concat(encoder.encode((_a = jws.protected) !== null && _a !== void 0 ? _a : ''), encoder.encode('.'), typeof jws.payload === 'string' ? encoder.encode(jws.payload) : jws.payload);\n    let signature;\n    try {\n        signature = base64url(jws.signature);\n    }\n    catch (_c) {\n        throw new JWSInvalid('Failed to base64url decode the signature');\n    }\n    const verified = await verify(alg, key, signature, data);\n    if (!verified) {\n        throw new JWSSignatureVerificationFailed();\n    }\n    let payload;\n    if (b64) {\n        try {\n            payload = base64url(jws.payload);\n        }\n        catch (_d) {\n            throw new JWSInvalid('Failed to base64url decode the payload');\n        }\n    }\n    else if (typeof jws.payload === 'string') {\n        payload = encoder.encode(jws.payload);\n    }\n    else {\n        payload = jws.payload;\n    }\n    const result = { payload };\n    if (jws.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jws.header !== undefined) {\n        result.unprotectedHeader = jws.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\n","import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactVerify(jws, key, options) {\n    if (jws instanceof Uint8Array) {\n        jws = decoder.decode(jws);\n    }\n    if (typeof jws !== 'string') {\n        throw new JWSInvalid('Compact JWS must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split('.');\n    if (length !== 3) {\n        throw new JWSInvalid('Invalid Compact JWS');\n    }\n    const verified = await flattenedVerify({ payload, protected: protectedHeader, signature }, key, options);\n    const result = { payload: verified.payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n","import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport isObject from '../../lib/is_object.js';\nexport async function generalVerify(jws, key, options) {\n    if (!isObject(jws)) {\n        throw new JWSInvalid('General JWS must be an object');\n    }\n    if (!Array.isArray(jws.signatures) || !jws.signatures.every(isObject)) {\n        throw new JWSInvalid('JWS Signatures missing or incorrect type');\n    }\n    for (const signature of jws.signatures) {\n        try {\n            return await flattenedVerify({\n                header: signature.header,\n                payload: jws.payload,\n                protected: signature.protected,\n                signature: signature.signature,\n            }, key, options);\n        }\n        catch (_a) {\n        }\n    }\n    throw new JWSSignatureVerificationFailed();\n}\n","export default (date) => Math.floor(date.getTime() / 1000);\n","const minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)$/i;\nexport default (str) => {\n    const matched = REGEX.exec(str);\n    if (!matched) {\n        throw new TypeError('Invalid time period format');\n    }\n    const value = parseFloat(matched[1]);\n    const unit = matched[2].toLowerCase();\n    switch (unit) {\n        case 'sec':\n        case 'secs':\n        case 'second':\n        case 'seconds':\n        case 's':\n            return Math.round(value);\n        case 'minute':\n        case 'minutes':\n        case 'min':\n        case 'mins':\n        case 'm':\n            return Math.round(value * minute);\n        case 'hour':\n        case 'hours':\n        case 'hr':\n        case 'hrs':\n        case 'h':\n            return Math.round(value * hour);\n        case 'day':\n        case 'days':\n        case 'd':\n            return Math.round(value * day);\n        case 'week':\n        case 'weeks':\n        case 'w':\n            return Math.round(value * week);\n        default:\n            return Math.round(value * year);\n    }\n};\n","import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\nimport { decoder } from './buffer_utils.js';\nimport epoch from './epoch.js';\nimport secs from './secs.js';\nimport isObject from './is_object.js';\nconst normalizeTyp = (value) => value.toLowerCase().replace(/^application\\//, '');\nconst checkAudiencePresence = (audPayload, audOption) => {\n    if (typeof audPayload === 'string') {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\nexport default (protectedHeader, encodedPayload, options = {}) => {\n    const { typ } = options;\n    if (typ &&\n        (typeof protectedHeader.typ !== 'string' ||\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', 'typ', 'check_failed');\n    }\n    let payload;\n    try {\n        payload = JSON.parse(decoder.decode(encodedPayload));\n    }\n    catch (_a) {\n    }\n    if (!isObject(payload)) {\n        throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\n    }\n    const { requiredClaims = [], issuer, subject, audience, maxTokenAge } = options;\n    if (maxTokenAge !== undefined)\n        requiredClaims.push('iat');\n    if (audience !== undefined)\n        requiredClaims.push('aud');\n    if (subject !== undefined)\n        requiredClaims.push('sub');\n    if (issuer !== undefined)\n        requiredClaims.push('iss');\n    for (const claim of new Set(requiredClaims.reverse())) {\n        if (!(claim in payload)) {\n            throw new JWTClaimValidationFailed(`missing required \"${claim}\" claim`, claim, 'missing');\n        }\n    }\n    if (issuer && !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n        throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', 'iss', 'check_failed');\n    }\n    if (subject && payload.sub !== subject) {\n        throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', 'sub', 'check_failed');\n    }\n    if (audience &&\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n        throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', 'aud', 'check_failed');\n    }\n    let tolerance;\n    switch (typeof options.clockTolerance) {\n        case 'string':\n            tolerance = secs(options.clockTolerance);\n            break;\n        case 'number':\n            tolerance = options.clockTolerance;\n            break;\n        case 'undefined':\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError('Invalid clockTolerance option type');\n    }\n    const { currentDate } = options;\n    const now = epoch(currentDate || new Date());\n    if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== 'number') {\n        throw new JWTClaimValidationFailed('\"iat\" claim must be a number', 'iat', 'invalid');\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== 'number') {\n            throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', 'nbf', 'invalid');\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', 'nbf', 'check_failed');\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== 'number') {\n            throw new JWTClaimValidationFailed('\"exp\" claim must be a number', 'exp', 'invalid');\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new JWTExpired('\"exp\" claim timestamp check failed', 'exp', 'check_failed');\n        }\n    }\n    if (maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof maxTokenAge === 'number' ? maxTokenAge : secs(maxTokenAge);\n        if (age - tolerance > max) {\n            throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', 'iat', 'check_failed');\n        }\n        if (age < 0 - tolerance) {\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', 'iat', 'check_failed');\n        }\n    }\n    return payload;\n};\n","import { compactVerify } from '../jws/compact/verify.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTInvalid } from '../util/errors.js';\nexport async function jwtVerify(jwt, key, options) {\n    var _a;\n    const verified = await compactVerify(jwt, key, options);\n    if (((_a = verified.protectedHeader.crit) === null || _a === void 0 ? void 0 : _a.includes('b64')) && verified.protectedHeader.b64 === false) {\n        throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n    }\n    const payload = jwtPayload(verified.protectedHeader, verified.payload, options);\n    const result = { payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n","import { compactDecrypt } from '../jwe/compact/decrypt.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTClaimValidationFailed } from '../util/errors.js';\nexport async function jwtDecrypt(jwt, key, options) {\n    const decrypted = await compactDecrypt(jwt, key, options);\n    const payload = jwtPayload(decrypted.protectedHeader, decrypted.plaintext, options);\n    const { protectedHeader } = decrypted;\n    if (protectedHeader.iss !== undefined && protectedHeader.iss !== payload.iss) {\n        throw new JWTClaimValidationFailed('replicated \"iss\" claim header parameter mismatch', 'iss', 'mismatch');\n    }\n    if (protectedHeader.sub !== undefined && protectedHeader.sub !== payload.sub) {\n        throw new JWTClaimValidationFailed('replicated \"sub\" claim header parameter mismatch', 'sub', 'mismatch');\n    }\n    if (protectedHeader.aud !== undefined &&\n        JSON.stringify(protectedHeader.aud) !== JSON.stringify(payload.aud)) {\n        throw new JWTClaimValidationFailed('replicated \"aud\" claim header parameter mismatch', 'aud', 'mismatch');\n    }\n    const result = { payload, protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: decrypted.key };\n    }\n    return result;\n}\n","import { FlattenedEncrypt } from '../flattened/encrypt.js';\nexport class CompactEncrypt {\n    constructor(plaintext) {\n        this._flattened = new FlattenedEncrypt(plaintext);\n    }\n    setContentEncryptionKey(cek) {\n        this._flattened.setContentEncryptionKey(cek);\n        return this;\n    }\n    setInitializationVector(iv) {\n        this._flattened.setInitializationVector(iv);\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        this._flattened.setKeyManagementParameters(parameters);\n        return this;\n    }\n    async encrypt(key, options) {\n        const jwe = await this._flattened.encrypt(key, options);\n        return [jwe.protected, jwe.encrypted_key, jwe.iv, jwe.ciphertext, jwe.tag].join('.');\n    }\n}\n","import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getSignKey from './get_sign_verify_key.js';\nconst sign = async (alg, key, data) => {\n    const cryptoKey = await getSignKey(alg, key, 'sign');\n    checkKeyLength(alg, cryptoKey);\n    const signature = await crypto.subtle.sign(subtleAlgorithm(alg, cryptoKey.algorithm), cryptoKey, data);\n    return new Uint8Array(signature);\n};\nexport default sign;\n","import { encode as base64url } from '../../runtime/base64url.js';\nimport sign from '../../runtime/sign.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport checkKeyType from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nexport class FlattenedSign {\n    constructor(payload) {\n        if (!(payload instanceof Uint8Array)) {\n            throw new TypeError('payload must be an instance of Uint8Array');\n        }\n        this._payload = payload;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader) {\n            throw new JWSInvalid('either setProtectedHeader or setUnprotectedHeader must be called before #sign()');\n        }\n        if (!isDisjoint(this._protectedHeader, this._unprotectedHeader)) {\n            throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader,\n        };\n        const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options === null || options === void 0 ? void 0 : options.crit, this._protectedHeader, joseHeader);\n        let b64 = true;\n        if (extensions.has('b64')) {\n            b64 = this._protectedHeader.b64;\n            if (typeof b64 !== 'boolean') {\n                throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n            }\n        }\n        const { alg } = joseHeader;\n        if (typeof alg !== 'string' || !alg) {\n            throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        checkKeyType(alg, key, 'sign');\n        let payload = this._payload;\n        if (b64) {\n            payload = encoder.encode(base64url(payload));\n        }\n        let protectedHeader;\n        if (this._protectedHeader) {\n            protectedHeader = encoder.encode(base64url(JSON.stringify(this._protectedHeader)));\n        }\n        else {\n            protectedHeader = encoder.encode('');\n        }\n        const data = concat(protectedHeader, encoder.encode('.'), payload);\n        const signature = await sign(alg, key, data);\n        const jws = {\n            signature: base64url(signature),\n            payload: '',\n        };\n        if (b64) {\n            jws.payload = decoder.decode(payload);\n        }\n        if (this._unprotectedHeader) {\n            jws.header = this._unprotectedHeader;\n        }\n        if (this._protectedHeader) {\n            jws.protected = decoder.decode(protectedHeader);\n        }\n        return jws;\n    }\n}\n","import { FlattenedSign } from '../flattened/sign.js';\nexport class CompactSign {\n    constructor(payload) {\n        this._flattened = new FlattenedSign(payload);\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    async sign(key, options) {\n        const jws = await this._flattened.sign(key, options);\n        if (jws.payload === undefined) {\n            throw new TypeError('use the flattened module for creating JWS with b64: false');\n        }\n        return `${jws.protected}.${jws.payload}.${jws.signature}`;\n    }\n}\n","import { FlattenedSign } from '../flattened/sign.js';\nimport { JWSInvalid } from '../../util/errors.js';\nclass IndividualSignature {\n    constructor(sig, key, options) {\n        this.parent = sig;\n        this.key = key;\n        this.options = options;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this.protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this.protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this.unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    addSignature(...args) {\n        return this.parent.addSignature(...args);\n    }\n    sign(...args) {\n        return this.parent.sign(...args);\n    }\n    done() {\n        return this.parent;\n    }\n}\nexport class GeneralSign {\n    constructor(payload) {\n        this._signatures = [];\n        this._payload = payload;\n    }\n    addSignature(key, options) {\n        const signature = new IndividualSignature(this, key, options);\n        this._signatures.push(signature);\n        return signature;\n    }\n    async sign() {\n        if (!this._signatures.length) {\n            throw new JWSInvalid('at least one signature must be added');\n        }\n        const jws = {\n            signatures: [],\n            payload: '',\n        };\n        for (let i = 0; i < this._signatures.length; i++) {\n            const signature = this._signatures[i];\n            const flattened = new FlattenedSign(this._payload);\n            flattened.setProtectedHeader(signature.protectedHeader);\n            flattened.setUnprotectedHeader(signature.unprotectedHeader);\n            const { payload, ...rest } = await flattened.sign(signature.key, signature.options);\n            if (i === 0) {\n                jws.payload = payload;\n            }\n            else if (jws.payload !== payload) {\n                throw new JWSInvalid('inconsistent use of JWS Unencoded Payload (RFC7797)');\n            }\n            jws.signatures.push(rest);\n        }\n        return jws;\n    }\n}\n","import epoch from '../lib/epoch.js';\nimport isObject from '../lib/is_object.js';\nimport secs from '../lib/secs.js';\nexport class ProduceJWT {\n    constructor(payload) {\n        if (!isObject(payload)) {\n            throw new TypeError('JWT Claims Set MUST be an object');\n        }\n        this._payload = payload;\n    }\n    setIssuer(issuer) {\n        this._payload = { ...this._payload, iss: issuer };\n        return this;\n    }\n    setSubject(subject) {\n        this._payload = { ...this._payload, sub: subject };\n        return this;\n    }\n    setAudience(audience) {\n        this._payload = { ...this._payload, aud: audience };\n        return this;\n    }\n    setJti(jwtId) {\n        this._payload = { ...this._payload, jti: jwtId };\n        return this;\n    }\n    setNotBefore(input) {\n        if (typeof input === 'number') {\n            this._payload = { ...this._payload, nbf: input };\n        }\n        else {\n            this._payload = { ...this._payload, nbf: epoch(new Date()) + secs(input) };\n        }\n        return this;\n    }\n    setExpirationTime(input) {\n        if (typeof input === 'number') {\n            this._payload = { ...this._payload, exp: input };\n        }\n        else {\n            this._payload = { ...this._payload, exp: epoch(new Date()) + secs(input) };\n        }\n        return this;\n    }\n    setIssuedAt(input) {\n        if (typeof input === 'undefined') {\n            this._payload = { ...this._payload, iat: epoch(new Date()) };\n        }\n        else {\n            this._payload = { ...this._payload, iat: input };\n        }\n        return this;\n    }\n}\n","import { CompactSign } from '../jws/compact/sign.js';\nimport { JWTInvalid } from '../util/errors.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport { ProduceJWT } from './produce.js';\nexport class SignJWT extends ProduceJWT {\n    setProtectedHeader(protectedHeader) {\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        var _a;\n        const sig = new CompactSign(encoder.encode(JSON.stringify(this._payload)));\n        sig.setProtectedHeader(this._protectedHeader);\n        if (Array.isArray((_a = this._protectedHeader) === null || _a === void 0 ? void 0 : _a.crit) &&\n            this._protectedHeader.crit.includes('b64') &&\n            this._protectedHeader.b64 === false) {\n            throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n        }\n        return sig.sign(key, options);\n    }\n}\n","import { CompactEncrypt } from '../jwe/compact/encrypt.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport { ProduceJWT } from './produce.js';\nexport class EncryptJWT extends ProduceJWT {\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError('setKeyManagementParameters can only be called once');\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError('setContentEncryptionKey can only be called once');\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError('setInitializationVector can only be called once');\n        }\n        this._iv = iv;\n        return this;\n    }\n    replicateIssuerAsHeader() {\n        this._replicateIssuerAsHeader = true;\n        return this;\n    }\n    replicateSubjectAsHeader() {\n        this._replicateSubjectAsHeader = true;\n        return this;\n    }\n    replicateAudienceAsHeader() {\n        this._replicateAudienceAsHeader = true;\n        return this;\n    }\n    async encrypt(key, options) {\n        const enc = new CompactEncrypt(encoder.encode(JSON.stringify(this._payload)));\n        if (this._replicateIssuerAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, iss: this._payload.iss };\n        }\n        if (this._replicateSubjectAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, sub: this._payload.sub };\n        }\n        if (this._replicateAudienceAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, aud: this._payload.aud };\n        }\n        enc.setProtectedHeader(this._protectedHeader);\n        if (this._iv) {\n            enc.setInitializationVector(this._iv);\n        }\n        if (this._cek) {\n            enc.setContentEncryptionKey(this._cek);\n        }\n        if (this._keyManagementParameters) {\n            enc.setKeyManagementParameters(this._keyManagementParameters);\n        }\n        return enc.encrypt(key, options);\n    }\n}\n","import digest from '../runtime/digest.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nimport { JOSENotSupported, JWKInvalid } from '../util/errors.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nconst check = (value, description) => {\n    if (typeof value !== 'string' || !value) {\n        throw new JWKInvalid(`${description} missing or invalid`);\n    }\n};\nexport async function calculateJwkThumbprint(jwk, digestAlgorithm) {\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : (digestAlgorithm = 'sha256');\n    if (digestAlgorithm !== 'sha256' &&\n        digestAlgorithm !== 'sha384' &&\n        digestAlgorithm !== 'sha512') {\n        throw new TypeError('digestAlgorithm must one of \"sha256\", \"sha384\", or \"sha512\"');\n    }\n    let components;\n    switch (jwk.kty) {\n        case 'EC':\n            check(jwk.crv, '\"crv\" (Curve) Parameter');\n            check(jwk.x, '\"x\" (X Coordinate) Parameter');\n            check(jwk.y, '\"y\" (Y Coordinate) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x, y: jwk.y };\n            break;\n        case 'OKP':\n            check(jwk.crv, '\"crv\" (Subtype of Key Pair) Parameter');\n            check(jwk.x, '\"x\" (Public Key) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x };\n            break;\n        case 'RSA':\n            check(jwk.e, '\"e\" (Exponent) Parameter');\n            check(jwk.n, '\"n\" (Modulus) Parameter');\n            components = { e: jwk.e, kty: jwk.kty, n: jwk.n };\n            break;\n        case 'oct':\n            check(jwk.k, '\"k\" (Key Value) Parameter');\n            components = { k: jwk.k, kty: jwk.kty };\n            break;\n        default:\n            throw new JOSENotSupported('\"kty\" (Key Type) Parameter missing or unsupported');\n    }\n    const data = encoder.encode(JSON.stringify(components));\n    return base64url(await digest(digestAlgorithm, data));\n}\nexport async function calculateJwkThumbprintUri(jwk, digestAlgorithm) {\n    digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : (digestAlgorithm = 'sha256');\n    const thumbprint = await calculateJwkThumbprint(jwk, digestAlgorithm);\n    return `urn:ietf:params:oauth:jwk-thumbprint:sha-${digestAlgorithm.slice(-3)}:${thumbprint}`;\n}\n","import { importJWK } from '../key/import.js';\nimport isObject from '../lib/is_object.js';\nimport { JWSInvalid } from '../util/errors.js';\nexport async function EmbeddedJWK(protectedHeader, token) {\n    const joseHeader = {\n        ...protectedHeader,\n        ...token === null || token === void 0 ? void 0 : token.header,\n    };\n    if (!isObject(joseHeader.jwk)) {\n        throw new JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a JSON object');\n    }\n    const key = await importJWK({ ...joseHeader.jwk, ext: true }, joseHeader.alg, true);\n    if (key instanceof Uint8Array || key.type !== 'public') {\n        throw new JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a public key');\n    }\n    return key;\n}\n","import { importJWK } from '../key/import.js';\nimport { JWKSInvalid, JOSENotSupported, JWKSNoMatchingKey, JWKSMultipleMatchingKeys, } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nfunction getKtyFromAlg(alg) {\n    switch (typeof alg === 'string' && alg.slice(0, 2)) {\n        case 'RS':\n        case 'PS':\n            return 'RSA';\n        case 'ES':\n            return 'EC';\n        case 'Ed':\n            return 'OKP';\n        default:\n            throw new JOSENotSupported('Unsupported \"alg\" value for a JSON Web Key Set');\n    }\n}\nexport function isJWKSLike(jwks) {\n    return (jwks &&\n        typeof jwks === 'object' &&\n        Array.isArray(jwks.keys) &&\n        jwks.keys.every(isJWKLike));\n}\nfunction isJWKLike(key) {\n    return isObject(key);\n}\nfunction clone(obj) {\n    if (typeof structuredClone === 'function') {\n        return structuredClone(obj);\n    }\n    return JSON.parse(JSON.stringify(obj));\n}\nexport class LocalJWKSet {\n    constructor(jwks) {\n        this._cached = new WeakMap();\n        if (!isJWKSLike(jwks)) {\n            throw new JWKSInvalid('JSON Web Key Set malformed');\n        }\n        this._jwks = clone(jwks);\n    }\n    async getKey(protectedHeader, token) {\n        const { alg, kid } = { ...protectedHeader, ...token === null || token === void 0 ? void 0 : token.header };\n        const kty = getKtyFromAlg(alg);\n        const candidates = this._jwks.keys.filter((jwk) => {\n            let candidate = kty === jwk.kty;\n            if (candidate && typeof kid === 'string') {\n                candidate = kid === jwk.kid;\n            }\n            if (candidate && typeof jwk.alg === 'string') {\n                candidate = alg === jwk.alg;\n            }\n            if (candidate && typeof jwk.use === 'string') {\n                candidate = jwk.use === 'sig';\n            }\n            if (candidate && Array.isArray(jwk.key_ops)) {\n                candidate = jwk.key_ops.includes('verify');\n            }\n            if (candidate && alg === 'EdDSA') {\n                candidate = jwk.crv === 'Ed25519' || jwk.crv === 'Ed448';\n            }\n            if (candidate) {\n                switch (alg) {\n                    case 'ES256':\n                        candidate = jwk.crv === 'P-256';\n                        break;\n                    case 'ES256K':\n                        candidate = jwk.crv === 'secp256k1';\n                        break;\n                    case 'ES384':\n                        candidate = jwk.crv === 'P-384';\n                        break;\n                    case 'ES512':\n                        candidate = jwk.crv === 'P-521';\n                        break;\n                }\n            }\n            return candidate;\n        });\n        const { 0: jwk, length } = candidates;\n        if (length === 0) {\n            throw new JWKSNoMatchingKey();\n        }\n        else if (length !== 1) {\n            const error = new JWKSMultipleMatchingKeys();\n            const { _cached } = this;\n            error[Symbol.asyncIterator] = async function* () {\n                for (const jwk of candidates) {\n                    try {\n                        yield await importWithAlgCache(_cached, jwk, alg);\n                    }\n                    catch (_a) {\n                        continue;\n                    }\n                }\n            };\n            throw error;\n        }\n        return importWithAlgCache(this._cached, jwk, alg);\n    }\n}\nasync function importWithAlgCache(cache, jwk, alg) {\n    const cached = cache.get(jwk) || cache.set(jwk, {}).get(jwk);\n    if (cached[alg] === undefined) {\n        const key = await importJWK({ ...jwk, ext: true }, alg);\n        if (key instanceof Uint8Array || key.type !== 'public') {\n            throw new JWKSInvalid('JSON Web Key Set members must be public keys');\n        }\n        cached[alg] = key;\n    }\n    return cached[alg];\n}\nexport function createLocalJWKSet(jwks) {\n    const set = new LocalJWKSet(jwks);\n    return async function (protectedHeader, token) {\n        return set.getKey(protectedHeader, token);\n    };\n}\n","import { JOSEError, JWKSTimeout } from '../util/errors.js';\nconst fetchJwks = async (url, timeout, options) => {\n    let controller;\n    let id;\n    let timedOut = false;\n    if (typeof AbortController === 'function') {\n        controller = new AbortController();\n        id = setTimeout(() => {\n            timedOut = true;\n            controller.abort();\n        }, timeout);\n    }\n    const response = await fetch(url.href, {\n        signal: controller ? controller.signal : undefined,\n        redirect: 'manual',\n        headers: options.headers,\n    }).catch((err) => {\n        if (timedOut)\n            throw new JWKSTimeout();\n        throw err;\n    });\n    if (id !== undefined)\n        clearTimeout(id);\n    if (response.status !== 200) {\n        throw new JOSEError('Expected 200 OK from the JSON Web Key Set HTTP response');\n    }\n    try {\n        return await response.json();\n    }\n    catch (_a) {\n        throw new JOSEError('Failed to parse the JSON Web Key Set HTTP response as JSON');\n    }\n};\nexport default fetchJwks;\n","import fetchJwks from '../runtime/fetch_jwks.js';\nimport { JWKSInvalid, JWKSNoMatchingKey } from '../util/errors.js';\nimport { isJWKSLike, LocalJWKSet } from './local.js';\nfunction isCloudflareWorkers() {\n    return (typeof WebSocketPair !== 'undefined' ||\n        (typeof navigator !== 'undefined' && navigator.userAgent === 'Cloudflare-Workers') ||\n        (typeof EdgeRuntime !== 'undefined' && EdgeRuntime === 'vercel'));\n}\nclass RemoteJWKSet extends LocalJWKSet {\n    constructor(url, options) {\n        super({ keys: [] });\n        this._jwks = undefined;\n        if (!(url instanceof URL)) {\n            throw new TypeError('url must be an instance of URL');\n        }\n        this._url = new URL(url.href);\n        this._options = { agent: options === null || options === void 0 ? void 0 : options.agent, headers: options === null || options === void 0 ? void 0 : options.headers };\n        this._timeoutDuration =\n            typeof (options === null || options === void 0 ? void 0 : options.timeoutDuration) === 'number' ? options === null || options === void 0 ? void 0 : options.timeoutDuration : 5000;\n        this._cooldownDuration =\n            typeof (options === null || options === void 0 ? void 0 : options.cooldownDuration) === 'number' ? options === null || options === void 0 ? void 0 : options.cooldownDuration : 30000;\n        this._cacheMaxAge = typeof (options === null || options === void 0 ? void 0 : options.cacheMaxAge) === 'number' ? options === null || options === void 0 ? void 0 : options.cacheMaxAge : 600000;\n    }\n    coolingDown() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cooldownDuration\n            : false;\n    }\n    fresh() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cacheMaxAge\n            : false;\n    }\n    async getKey(protectedHeader, token) {\n        if (!this._jwks || !this.fresh()) {\n            await this.reload();\n        }\n        try {\n            return await super.getKey(protectedHeader, token);\n        }\n        catch (err) {\n            if (err instanceof JWKSNoMatchingKey) {\n                if (this.coolingDown() === false) {\n                    await this.reload();\n                    return super.getKey(protectedHeader, token);\n                }\n            }\n            throw err;\n        }\n    }\n    async reload() {\n        if (this._pendingFetch && isCloudflareWorkers()) {\n            this._pendingFetch = undefined;\n        }\n        this._pendingFetch || (this._pendingFetch = fetchJwks(this._url, this._timeoutDuration, this._options)\n            .then((json) => {\n            if (!isJWKSLike(json)) {\n                throw new JWKSInvalid('JSON Web Key Set malformed');\n            }\n            this._jwks = { keys: json.keys };\n            this._jwksTimestamp = Date.now();\n            this._pendingFetch = undefined;\n        })\n            .catch((err) => {\n            this._pendingFetch = undefined;\n            throw err;\n        }));\n        await this._pendingFetch;\n    }\n}\nexport function createRemoteJWKSet(url, options) {\n    const set = new RemoteJWKSet(url, options);\n    return async function (protectedHeader, token) {\n        return set.getKey(protectedHeader, token);\n    };\n}\n","import * as base64url from '../runtime/base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport { JWTInvalid } from '../util/errors.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { ProduceJWT } from './produce.js';\nexport class UnsecuredJWT extends ProduceJWT {\n    encode() {\n        const header = base64url.encode(JSON.stringify({ alg: 'none' }));\n        const payload = base64url.encode(JSON.stringify(this._payload));\n        return `${header}.${payload}.`;\n    }\n    static decode(jwt, options) {\n        if (typeof jwt !== 'string') {\n            throw new JWTInvalid('Unsecured JWT must be a string');\n        }\n        const { 0: encodedHeader, 1: encodedPayload, 2: signature, length } = jwt.split('.');\n        if (length !== 3 || signature !== '') {\n            throw new JWTInvalid('Invalid Unsecured JWT');\n        }\n        let header;\n        try {\n            header = JSON.parse(decoder.decode(base64url.decode(encodedHeader)));\n            if (header.alg !== 'none')\n                throw new Error();\n        }\n        catch (_a) {\n            throw new JWTInvalid('Invalid Unsecured JWT');\n        }\n        const payload = jwtPayload(header, base64url.decode(encodedPayload), options);\n        return { payload, header };\n    }\n}\n","import * as base64url from '../runtime/base64url.js';\nexport const encode = base64url.encode;\nexport const decode = base64url.decode;\n","import { decode as base64url } from './base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nexport function decodeProtectedHeader(token) {\n    let protectedB64u;\n    if (typeof token === 'string') {\n        const parts = token.split('.');\n        if (parts.length === 3 || parts.length === 5) {\n            ;\n            [protectedB64u] = parts;\n        }\n    }\n    else if (typeof token === 'object' && token) {\n        if ('protected' in token) {\n            protectedB64u = token.protected;\n        }\n        else {\n            throw new TypeError('Token does not contain a Protected Header');\n        }\n    }\n    try {\n        if (typeof protectedB64u !== 'string' || !protectedB64u) {\n            throw new Error();\n        }\n        const result = JSON.parse(decoder.decode(base64url(protectedB64u)));\n        if (!isObject(result)) {\n            throw new Error();\n        }\n        return result;\n    }\n    catch (_a) {\n        throw new TypeError('Invalid Token or Protected Header formatting');\n    }\n}\n","import { decode as base64url } from './base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nimport { JWTInvalid } from './errors.js';\nexport function decodeJwt(jwt) {\n    if (typeof jwt !== 'string')\n        throw new JWTInvalid('JWTs must use Compact JWS serialization, JWT must be a string');\n    const { 1: payload, length } = jwt.split('.');\n    if (length === 5)\n        throw new JWTInvalid('Only JWTs using Compact JWS serialization can be decoded');\n    if (length !== 3)\n        throw new JWTInvalid('Invalid JWT');\n    if (!payload)\n        throw new JWTInvalid('JWTs must contain a payload');\n    let decoded;\n    try {\n        decoded = base64url(payload);\n    }\n    catch (_a) {\n        throw new JWTInvalid('Failed to base64url decode the payload');\n    }\n    let result;\n    try {\n        result = JSON.parse(decoder.decode(decoded));\n    }\n    catch (_b) {\n        throw new JWTInvalid('Failed to parse the decoded payload as JSON');\n    }\n    if (!isObject(result))\n        throw new JWTInvalid('Invalid JWT Claims Set');\n    return result;\n}\n","import crypto from './webcrypto.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport random from './random.js';\nexport async function generateSecret(alg, options) {\n    var _a;\n    let length;\n    let algorithm;\n    let keyUsages;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            length = parseInt(alg.slice(-3), 10);\n            algorithm = { name: 'HMAC', hash: `SHA-${length}`, length };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            length = parseInt(alg.slice(-3), 10);\n            return random(new Uint8Array(length >> 3));\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW':\n            length = parseInt(alg.slice(1, 4), 10);\n            algorithm = { name: 'AES-KW', length };\n            keyUsages = ['wrapKey', 'unwrapKey'];\n            break;\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW':\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            length = parseInt(alg.slice(1, 4), 10);\n            algorithm = { name: 'AES-GCM', length };\n            keyUsages = ['encrypt', 'decrypt'];\n            break;\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n    }\n    return crypto.subtle.generateKey(algorithm, (_a = options === null || options === void 0 ? void 0 : options.extractable) !== null && _a !== void 0 ? _a : false, keyUsages);\n}\nfunction getModulusLengthOption(options) {\n    var _a;\n    const modulusLength = (_a = options === null || options === void 0 ? void 0 : options.modulusLength) !== null && _a !== void 0 ? _a : 2048;\n    if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n        throw new JOSENotSupported('Invalid or unsupported modulusLength option provided, 2048 bits or larger keys must be used');\n    }\n    return modulusLength;\n}\nexport async function generateKeyPair(alg, options) {\n    var _a, _b, _c;\n    let algorithm;\n    let keyUsages;\n    switch (alg) {\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            algorithm = {\n                name: 'RSA-PSS',\n                hash: `SHA-${alg.slice(-3)}`,\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                modulusLength: getModulusLengthOption(options),\n            };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            algorithm = {\n                name: 'RSASSA-PKCS1-v1_5',\n                hash: `SHA-${alg.slice(-3)}`,\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                modulusLength: getModulusLengthOption(options),\n            };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            algorithm = {\n                name: 'RSA-OAEP',\n                hash: `SHA-${parseInt(alg.slice(-3), 10) || 1}`,\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                modulusLength: getModulusLengthOption(options),\n            };\n            keyUsages = ['decrypt', 'unwrapKey', 'encrypt', 'wrapKey'];\n            break;\n        case 'ES256':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'ES384':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'ES512':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'EdDSA':\n            keyUsages = ['sign', 'verify'];\n            const crv = (_a = options === null || options === void 0 ? void 0 : options.crv) !== null && _a !== void 0 ? _a : 'Ed25519';\n            switch (crv) {\n                case 'Ed25519':\n                case 'Ed448':\n                    algorithm = { name: crv };\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported crv option provided');\n            }\n            break;\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            keyUsages = ['deriveKey', 'deriveBits'];\n            const crv = (_b = options === null || options === void 0 ? void 0 : options.crv) !== null && _b !== void 0 ? _b : 'P-256';\n            switch (crv) {\n                case 'P-256':\n                case 'P-384':\n                case 'P-521': {\n                    algorithm = { name: 'ECDH', namedCurve: crv };\n                    break;\n                }\n                case 'X25519':\n                case 'X448':\n                    algorithm = { name: crv };\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported crv option provided, supported values are P-256, P-384, P-521, X25519, and X448');\n            }\n            break;\n        }\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n    }\n    return (crypto.subtle.generateKey(algorithm, (_c = options === null || options === void 0 ? void 0 : options.extractable) !== null && _c !== void 0 ? _c : false, keyUsages));\n}\n","import { generateKeyPair as generate } from '../runtime/generate.js';\nexport async function generateKeyPair(alg, options) {\n    return generate(alg, options);\n}\n","import { generateSecret as generate } from '../runtime/generate.js';\nexport async function generateSecret(alg, options) {\n    return generate(alg, options);\n}\n","export { compactDecrypt } from './jwe/compact/decrypt.js';\nexport { flattenedDecrypt } from './jwe/flattened/decrypt.js';\nexport { generalDecrypt } from './jwe/general/decrypt.js';\nexport { GeneralEncrypt } from './jwe/general/encrypt.js';\nexport { compactVerify } from './jws/compact/verify.js';\nexport { flattenedVerify } from './jws/flattened/verify.js';\nexport { generalVerify } from './jws/general/verify.js';\nexport { jwtVerify } from './jwt/verify.js';\nexport { jwtDecrypt } from './jwt/decrypt.js';\nexport { CompactEncrypt } from './jwe/compact/encrypt.js';\nexport { FlattenedEncrypt } from './jwe/flattened/encrypt.js';\nexport { CompactSign } from './jws/compact/sign.js';\nexport { FlattenedSign } from './jws/flattened/sign.js';\nexport { GeneralSign } from './jws/general/sign.js';\nexport { SignJWT } from './jwt/sign.js';\nexport { EncryptJWT } from './jwt/encrypt.js';\nexport { calculateJwkThumbprint, calculateJwkThumbprintUri } from './jwk/thumbprint.js';\nexport { EmbeddedJWK } from './jwk/embedded.js';\nexport { createLocalJWKSet } from './jwks/local.js';\nexport { createRemoteJWKSet } from './jwks/remote.js';\nexport { UnsecuredJWT } from './jwt/unsecured.js';\nexport { exportPKCS8, exportSPKI, exportJWK } from './key/export.js';\nexport { importSPKI, importPKCS8, importX509, importJWK } from './key/import.js';\nexport { decodeProtectedHeader } from './util/decode_protected_header.js';\nexport { decodeJwt } from './util/decode_jwt.js';\nimport * as errors_1 from './util/errors.js';\nexport { errors_1 as errors };\nexport { generateKeyPair } from './key/generate_key_pair.js';\nexport { generateSecret } from './key/generate_secret.js';\nimport * as base64url_1 from './util/base64url.js';\nexport { base64url_1 as base64url };\nexport { default as cryptoRuntime } from './util/runtime.js';\n","/**\n *\n *\n * This module contains functions and types\n * to encode and decode {@link https://authjs.dev/concepts/session-strategies#jwt JWT}s\n * issued and used by Auth.js.\n *\n * The JWT issued by Auth.js is _encrypted by default_, using the _A256GCM_ algorithm ({@link https://www.rfc-editor.org/rfc/rfc7516 JWE}).\n * It uses the `AUTH_SECRET` environment variable to derive a sufficient encryption key.\n *\n * :::info Note\n * Auth.js JWTs are meant to be used by the same app that issued them.\n * If you need JWT authentication for your third-party API, you should rely on your Identity Provider instead.\n * :::\n *\n * ## Installation\n *\n * ```bash npm2yarn2pnpm\n * npm install @auth/core\n * ```\n *\n * You can then import this submodule from `@auth/core/jwt`.\n *\n * ## Usage\n *\n * :::warning Warning\n * This module *will* be refactored/changed. We do not recommend relying on it right now.\n * :::\n *\n *\n * ## Resources\n *\n * - [What is a JWT session strategy](https://authjs.dev/concepts/session-strategies#jwt)\n * - [RFC7519 - JSON Web Token (JWT)](https://www.rfc-editor.org/rfc/rfc7519)\n *\n * @module jwt\n */\nimport { hkdf } from \"@panva/hkdf\";\nimport { EncryptJWT, jwtDecrypt } from \"jose\";\nimport { SessionStore } from \"./lib/cookie.js\";\nimport { MissingSecret } from \"./errors.js\";\nconst DEFAULT_MAX_AGE = 30 * 24 * 60 * 60; // 30 days\nconst now = () => (Date.now() / 1000) | 0;\n/** Issues a JWT. By default, the JWT is encrypted using \"A256GCM\". */\nexport async function encode(params) {\n    const { token = {}, secret, maxAge = DEFAULT_MAX_AGE } = params;\n    const encryptionSecret = await getDerivedEncryptionKey(secret);\n    // @ts-expect-error `jose` allows any object as payload.\n    return await new EncryptJWT(token)\n        .setProtectedHeader({ alg: \"dir\", enc: \"A256GCM\" })\n        .setIssuedAt()\n        .setExpirationTime(now() + maxAge)\n        .setJti(crypto.randomUUID())\n        .encrypt(encryptionSecret);\n}\n/** Decodes a Auth.js issued JWT. */\nexport async function decode(params) {\n    const { token, secret } = params;\n    if (!token)\n        return null;\n    const encryptionSecret = await getDerivedEncryptionKey(secret);\n    const { payload } = await jwtDecrypt(token, encryptionSecret, {\n        clockTolerance: 15,\n    });\n    return payload;\n}\nexport async function getToken(params) {\n    const { req, secureCookie = process.env.NEXTAUTH_URL?.startsWith(\"https://\") ??\n        !!process.env.VERCEL, cookieName = secureCookie\n        ? \"__Secure-next-auth.session-token\"\n        : \"next-auth.session-token\", raw, decode: _decode = decode, logger = console, secret = process.env.AUTH_SECRET, } = params;\n    if (!req)\n        throw new Error(\"Must pass `req` to JWT getToken()\");\n    if (!secret)\n        throw new MissingSecret(\"Must pass `secret` if not set to JWT getToken()\");\n    const sessionStore = new SessionStore({ name: cookieName, options: { secure: secureCookie } }, \n    // @ts-expect-error\n    { cookies: req.cookies, headers: req.headers }, logger);\n    let token = sessionStore.value;\n    const authorizationHeader = req.headers instanceof Headers\n        ? req.headers.get(\"authorization\")\n        : req.headers.authorization;\n    if (!token && authorizationHeader?.split(\" \")[0] === \"Bearer\") {\n        const urlEncodedToken = authorizationHeader.split(\" \")[1];\n        token = decodeURIComponent(urlEncodedToken);\n    }\n    if (!token)\n        return null;\n    if (raw)\n        return token;\n    try {\n        return await _decode({ token, secret });\n    }\n    catch {\n        return null;\n    }\n}\nasync function getDerivedEncryptionKey(secret) {\n    return await hkdf(\"sha256\", secret, \"\", \"Auth.js Generated Encryption Key\", 32);\n}\n","/**\n * Get callback URL based on query param / cookie + validation,\n * and add it to `req.options.callbackUrl`.\n */\nexport async function createCallbackUrl({ options, paramValue, cookieValue, }) {\n    const { url, callbacks } = options;\n    let callbackUrl = url.origin;\n    if (paramValue) {\n        // If callbackUrl form field or query parameter is passed try to use it if allowed\n        callbackUrl = await callbacks.redirect({\n            url: paramValue,\n            baseUrl: url.origin,\n        });\n    }\n    else if (cookieValue) {\n        // If no callbackUrl specified, try using the value from the cookie if allowed\n        callbackUrl = await callbacks.redirect({\n            url: cookieValue,\n            baseUrl: url.origin,\n        });\n    }\n    return {\n        callbackUrl,\n        // Save callback URL in a cookie so that it can be used for subsequent requests in signin/signout/callback flow\n        callbackUrlCookie: callbackUrl !== cookieValue ? callbackUrl : undefined,\n    };\n}\n","import { parse as parseCookie, serialize } from \"cookie\";\nimport { UnknownAction } from \"../errors.js\";\nasync function getBody(req) {\n    if (!(\"body\" in req) || !req.body || req.method !== \"POST\")\n        return;\n    const contentType = req.headers.get(\"content-type\");\n    if (contentType?.includes(\"application/json\")) {\n        return await req.json();\n    }\n    else if (contentType?.includes(\"application/x-www-form-urlencoded\")) {\n        const params = new URLSearchParams(await req.text());\n        return Object.fromEntries(params);\n    }\n}\nconst actions = [\n    \"providers\",\n    \"session\",\n    \"csrf\",\n    \"signin\",\n    \"signout\",\n    \"callback\",\n    \"verify-request\",\n    \"error\",\n];\nexport async function toInternalRequest(req) {\n    try {\n        // TODO: url.toString() should not include action and providerId\n        // see init.ts\n        const url = new URL(req.url.replace(/\\/$/, \"\"));\n        // FIXME: Upstream issue in Next.js, pathname segments get included as part of the query string\n        url.searchParams.delete(\"nextauth\");\n        const pathname = url.pathname.replace(/\\/$/, \"\");\n        const action = actions.find((a) => pathname.includes(a));\n        if (!action) {\n            throw new UnknownAction(`Cannot detect action in pathname (${pathname}).`);\n        }\n        if (req.method !== \"GET\" && req.method !== \"POST\") {\n            throw new UnknownAction(\"Only GET and POST requests are supported.\");\n        }\n        const providerIdOrAction = pathname.split(\"/\").pop();\n        let providerId;\n        if (providerIdOrAction &&\n            !action.includes(providerIdOrAction) &&\n            [\"signin\", \"callback\"].includes(action)) {\n            providerId = providerIdOrAction;\n        }\n        return {\n            url,\n            action,\n            providerId,\n            method: req.method,\n            headers: Object.fromEntries(req.headers),\n            body: req.body ? await getBody(req) : undefined,\n            cookies: parseCookie(req.headers.get(\"cookie\") ?? \"\") ?? {},\n            error: url.searchParams.get(\"error\") ?? undefined,\n            query: Object.fromEntries(url.searchParams),\n        };\n    }\n    catch (e) {\n        return e;\n    }\n}\nexport function toRequest(request) {\n    return new Request(request.url, {\n        headers: request.headers,\n        method: request.method,\n        body: request.method === \"POST\"\n            ? JSON.stringify(request.body ?? {})\n            : undefined,\n    });\n}\nexport function toResponse(res) {\n    const headers = new Headers(res.headers);\n    res.cookies?.forEach((cookie) => {\n        const { name, value, options } = cookie;\n        const cookieHeader = serialize(name, value, options);\n        if (headers.has(\"Set-Cookie\"))\n            headers.append(\"Set-Cookie\", cookieHeader);\n        else\n            headers.set(\"Set-Cookie\", cookieHeader);\n    });\n    let body = res.body;\n    if (headers.get(\"content-type\") === \"application/json\")\n        body = JSON.stringify(res.body);\n    else if (headers.get(\"content-type\") === \"application/x-www-form-urlencoded\")\n        body = new URLSearchParams(res.body).toString();\n    const status = res.redirect ? 302 : res.status ?? 200;\n    const response = new Response(body, { headers, status });\n    if (res.redirect)\n        response.headers.set(\"Location\", res.redirect);\n    return response;\n}\n/** Web compatible method to create a hash, using SHA256 */\nexport async function createHash(message) {\n    const data = new TextEncoder().encode(message);\n    const hash = await crypto.subtle.digest(\"SHA-256\", data);\n    return Array.from(new Uint8Array(hash))\n        .map((b) => b.toString(16).padStart(2, \"0\"))\n        .join(\"\")\n        .toString();\n}\n/** Web compatible method to create a random string of a given length */\nexport function randomString(size) {\n    const i2hex = (i) => (\"0\" + i.toString(16)).slice(-2);\n    const r = (a, i) => a + i2hex(i);\n    const bytes = crypto.getRandomValues(new Uint8Array(size));\n    return Array.from(bytes).reduce(r, \"\");\n}\n","import { createHash, randomString } from \"./web.js\";\n/**\n * Ensure CSRF Token cookie is set for any subsequent requests.\n * Used as part of the strategy for mitigation for CSRF tokens.\n *\n * Creates a cookie like 'next-auth.csrf-token' with the value 'token|hash',\n * where 'token' is the CSRF token and 'hash' is a hash made of the token and\n * the secret, and the two values are joined by a pipe '|'. By storing the\n * value and the hash of the value (with the secret used as a salt) we can\n * verify the cookie was set by the server and not by a malicious attacker.\n *\n * For more details, see the following OWASP links:\n * https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#double-submit-cookie\n * https://owasp.org/www-chapter-london/assets/slides/David_Johansson-Double_Defeat_of_Double-Submit_Cookie.pdf\n */\nexport async function createCSRFToken({ options, cookieValue, isPost, bodyValue, }) {\n    if (cookieValue) {\n        const [csrfToken, csrfTokenHash] = cookieValue.split(\"|\");\n        const expectedCsrfTokenHash = await createHash(`${csrfToken}${options.secret}`);\n        if (csrfTokenHash === expectedCsrfTokenHash) {\n            // If hash matches then we trust the CSRF token value\n            // If this is a POST request and the CSRF Token in the POST request matches\n            // the cookie we have already verified is the one we have set, then the token is verified!\n            const csrfTokenVerified = isPost && csrfToken === bodyValue;\n            return { csrfTokenVerified, csrfToken };\n        }\n    }\n    // New CSRF token\n    const csrfToken = randomString(32);\n    const csrfTokenHash = await createHash(`${csrfToken}${options.secret}`);\n    const cookie = `${csrfToken}|${csrfTokenHash}`;\n    return { cookie, csrfToken };\n}\n","export const defaultCallbacks = {\n    signIn() {\n        return true;\n    },\n    redirect({ url, baseUrl }) {\n        if (url.startsWith(\"/\"))\n            return `${baseUrl}${url}`;\n        else if (new URL(url).origin === baseUrl)\n            return url;\n        return baseUrl;\n    },\n    session({ session }) {\n        return session;\n    },\n    jwt({ token }) {\n        return token;\n    },\n};\n","// Source: https://stackoverflow.com/a/34749873/5364135\n/** Simple object check */\nfunction isObject(item) {\n    return item && typeof item === \"object\" && !Array.isArray(item);\n}\n/** Deep merge two objects */\nexport function merge(target, ...sources) {\n    if (!sources.length)\n        return target;\n    const source = sources.shift();\n    if (isObject(target) && isObject(source)) {\n        for (const key in source) {\n            if (isObject(source[key])) {\n                if (!target[key])\n                    Object.assign(target, { [key]: {} });\n                merge(target[key], source[key]);\n            }\n            else {\n                Object.assign(target, { [key]: source[key] });\n            }\n        }\n    }\n    return merge(target, ...sources);\n}\n","import { OAuthProfileParseError } from \"../errors.js\";\nimport { merge } from \"./utils/merge.js\";\n/**\n * Adds `signinUrl` and `callbackUrl` to each provider\n * and deep merge user-defined options.\n */\nexport default function parseProviders(params) {\n    const { url, providerId, options } = params;\n    const providers = params.providers.map((p) => {\n        const provider = typeof p === \"function\" ? p() : p;\n        const { options: userOptions, ...defaults } = provider;\n        const id = (userOptions?.id ?? defaults.id);\n        const merged = merge(defaults, userOptions, {\n            signinUrl: `${url}/signin/${id}`,\n            callbackUrl: `${url}/callback/${id}`,\n        });\n        if (provider.type === \"oauth\" || provider.type === \"oidc\") {\n            merged.redirectProxyUrl ?? (merged.redirectProxyUrl = options.redirectProxyUrl);\n            return normalizeOAuth(merged);\n        }\n        return merged;\n    });\n    return {\n        providers,\n        provider: providers.find(({ id }) => id === providerId),\n    };\n}\n// TODO: Also add discovery here, if some endpoints/config are missing.\n// We should return both a client and authorization server config.\nfunction normalizeOAuth(c) {\n    if (c.issuer)\n        c.wellKnown ?? (c.wellKnown = `${c.issuer}/.well-known/openid-configuration`);\n    const authorization = normalizeEndpoint(c.authorization, c.issuer);\n    if (authorization && !authorization.url?.searchParams.has(\"scope\")) {\n        authorization.url.searchParams.set(\"scope\", \"openid profile email\");\n    }\n    const token = normalizeEndpoint(c.token, c.issuer);\n    const userinfo = normalizeEndpoint(c.userinfo, c.issuer);\n    const checks = c.checks ?? [\"pkce\"];\n    if (c.redirectProxyUrl) {\n        if (!checks.includes(\"state\"))\n            checks.push(\"state\");\n        c.redirectProxyUrl = `${c.redirectProxyUrl}/callback/${c.id}`;\n    }\n    return {\n        ...c,\n        authorization,\n        token,\n        checks,\n        userinfo,\n        profile: c.profile ?? defaultProfile,\n        account: c.account ?? defaultAccount,\n    };\n}\n/**\n * Returns basic user profile from the userinfo response/`id_token` claims.\n * @see https://authjs.dev/reference/adapters#user\n * @see https://openid.net/specs/openid-connect-core-1_0.html#IDToken\n * @see https://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nconst defaultProfile = (profile) => {\n    const id = profile.sub ?? profile.id;\n    if (!id)\n        throw new OAuthProfileParseError(\"Missing user id\");\n    return stripUndefined({\n        id: id.toString(),\n        name: profile.name ?? profile.nickname ?? profile.preferred_username,\n        email: profile.email,\n        image: profile.picture,\n    });\n};\n/**\n * Returns basic OAuth/OIDC values from the token response.\n * @see https://www.ietf.org/rfc/rfc6749.html#section-5.1\n * @see https://openid.net/specs/openid-connect-core-1_0.html#TokenResponse\n * @see https://authjs.dev/reference/adapters#account\n */\nconst defaultAccount = (account) => {\n    return stripUndefined({\n        access_token: account.access_token,\n        id_token: account.id_token,\n        refresh_token: account.refresh_token,\n        expires_at: account.expires_at,\n        scope: account.scope,\n        token_type: account.token_type,\n        session_state: account.session_state,\n    });\n};\nfunction stripUndefined(o) {\n    const result = {};\n    for (let [k, v] of Object.entries(o))\n        v !== undefined && (result[k] = v);\n    return result;\n}\nfunction normalizeEndpoint(e, issuer) {\n    if (!e && issuer)\n        return;\n    if (typeof e === \"string\") {\n        return { url: new URL(e) };\n    }\n    // If e.url is undefined, it's because the provider config\n    // assumes that we will use the issuer endpoint.\n    // The existence of either e.url or provider.issuer is checked in\n    // assert.ts. We fallback to \"https://authjs.dev\" to be able to pass around\n    // a valid URL even if the user only provided params.\n    // NOTE: This need to be checked when constructing the URL\n    // for the authorization, token and userinfo endpoints.\n    const url = new URL(e?.url ?? \"https://authjs.dev\");\n    if (e?.params != null) {\n        for (let [key, value] of Object.entries(e.params)) {\n            if (key === \"claims\")\n                value = JSON.stringify(value);\n            url.searchParams.set(key, String(value));\n        }\n    }\n    return { url, request: e?.request, conform: e?.conform };\n}\n","const red = \"\\x1b[31m\";\nconst yellow = \"\\x1b[33m\";\nconst grey = \"\\x1b[90m\";\nconst reset = \"\\x1b[0m\";\nexport const logger = {\n    error(error) {\n        const url = `https://errors.authjs.dev#${error.name.toLowerCase()}`;\n        console.error(`${red}[auth][error][${error.name}]${reset}:${error.message ? ` ${error.message}.` : \"\"} Read more at ${url}`);\n        if (error.cause) {\n            const { err, ...data } = error.cause;\n            console.error(`${red}[auth][cause]${reset}:`, err.stack);\n            console.error(`${red}[auth][details]${reset}:`, JSON.stringify(data, null, 2));\n        }\n        else if (error.stack) {\n            console.error(error.stack.replace(/.*/, \"\").substring(1));\n        }\n    },\n    warn(code) {\n        const url = `https://warnings.authjs.dev#${code}`;\n        console.warn(`${yellow}[auth][warn][${code}]${reset}`, `Read more: ${url}`);\n    },\n    debug(message, metadata) {\n        console.log(`${grey}[auth][debug]:${reset} ${message}`, JSON.stringify(metadata, null, 2));\n    },\n};\n/**\n * Override the built-in logger with user's implementation.\n * Any `undefined` level will use the default logger.\n */\nexport function setLogger(newLogger = {}, debug) {\n    // Turn off debug logging if `debug` isn't set to `true`\n    if (!debug)\n        logger.debug = () => { };\n    if (newLogger.error)\n        logger.error = newLogger.error;\n    if (newLogger.warn)\n        logger.warn = newLogger.warn;\n    if (newLogger.debug)\n        logger.debug = newLogger.debug;\n}\n","/** Returns an `URL` like object to make requests/redirects from server-side */\nexport default function parseUrl(url) {\n    const defaultUrl = new URL(\"http://localhost:3000/api/auth\");\n    if (url && !url.toString().startsWith(\"http\")) {\n        url = `https://${url}`;\n    }\n    const _url = new URL(url ?? defaultUrl);\n    const path = (_url.pathname === \"/\" ? defaultUrl.pathname : _url.pathname)\n        // Remove trailing slash\n        .replace(/\\/$/, \"\");\n    const base = `${_url.origin}${path}`;\n    return {\n        origin: _url.origin,\n        host: _url.host,\n        path,\n        base,\n        toString: () => base,\n    };\n}\n","import * as jwt from \"../jwt.js\";\nimport { createCallbackUrl } from \"./callback-url.js\";\nimport * as cookie from \"./cookie.js\";\nimport { createCSRFToken } from \"./csrf-token.js\";\nimport { defaultCallbacks } from \"./default-callbacks.js\";\nimport { AdapterError, EventError } from \"../errors.js\";\nimport parseProviders from \"./providers.js\";\nimport { logger } from \"./utils/logger.js\";\nimport parseUrl from \"./utils/parse-url.js\";\n/** Initialize all internal options and cookies. */\nexport async function init({ authOptions, providerId, action, url: reqUrl, cookies: reqCookies, callbackUrl: reqCallbackUrl, csrfToken: reqCsrfToken, csrfDisabled, isPost, }) {\n    // TODO: move this to web.ts\n    const parsed = parseUrl(reqUrl.origin +\n        reqUrl.pathname.replace(`/${action}`, \"\").replace(`/${providerId}`, \"\"));\n    const url = new URL(parsed.toString());\n    const { providers, provider } = parseProviders({\n        providers: authOptions.providers,\n        url,\n        providerId,\n        options: authOptions,\n    });\n    const maxAge = 30 * 24 * 60 * 60; // Sessions expire after 30 days of being idle by default\n    let isOnRedirectProxy = false;\n    if ((provider?.type === \"oauth\" || provider?.type === \"oidc\") &&\n        provider.redirectProxyUrl) {\n        try {\n            isOnRedirectProxy =\n                new URL(provider.redirectProxyUrl).origin === url.origin;\n        }\n        catch {\n            throw new TypeError(`redirectProxyUrl must be a valid URL. Received: ${provider.redirectProxyUrl}`);\n        }\n    }\n    // User provided options are overridden by other options,\n    // except for the options with special handling above\n    const options = {\n        debug: false,\n        pages: {},\n        theme: {\n            colorScheme: \"auto\",\n            logo: \"\",\n            brandColor: \"\",\n            buttonText: \"\",\n        },\n        // Custom options override defaults\n        ...authOptions,\n        // These computed settings can have values in userOptions but we override them\n        // and are request-specific.\n        url,\n        action,\n        // @ts-expect-errors\n        provider,\n        cookies: {\n            ...cookie.defaultCookies(authOptions.useSecureCookies ?? url.protocol === \"https:\"),\n            // Allow user cookie options to override any cookie settings above\n            ...authOptions.cookies,\n        },\n        providers,\n        // Session options\n        session: {\n            // If no adapter specified, force use of JSON Web Tokens (stateless)\n            strategy: authOptions.adapter ? \"database\" : \"jwt\",\n            maxAge,\n            updateAge: 24 * 60 * 60,\n            generateSessionToken: () => crypto.randomUUID(),\n            ...authOptions.session,\n        },\n        // JWT options\n        jwt: {\n            // Asserted in assert.ts\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            secret: authOptions.secret,\n            maxAge: authOptions.session?.maxAge ?? maxAge,\n            encode: jwt.encode,\n            decode: jwt.decode,\n            ...authOptions.jwt,\n        },\n        // Event messages\n        events: eventsErrorHandler(authOptions.events ?? {}, logger),\n        adapter: adapterErrorHandler(authOptions.adapter, logger),\n        // Callback functions\n        callbacks: { ...defaultCallbacks, ...authOptions.callbacks },\n        logger,\n        callbackUrl: url.origin,\n        isOnRedirectProxy,\n    };\n    // Init cookies\n    const cookies = [];\n    if (!csrfDisabled) {\n        const { csrfToken, cookie: csrfCookie, csrfTokenVerified, } = await createCSRFToken({\n            options,\n            cookieValue: reqCookies?.[options.cookies.csrfToken.name],\n            isPost,\n            bodyValue: reqCsrfToken,\n        });\n        options.csrfToken = csrfToken;\n        options.csrfTokenVerified = csrfTokenVerified;\n        if (csrfCookie) {\n            cookies.push({\n                name: options.cookies.csrfToken.name,\n                value: csrfCookie,\n                options: options.cookies.csrfToken.options,\n            });\n        }\n    }\n    const { callbackUrl, callbackUrlCookie } = await createCallbackUrl({\n        options,\n        cookieValue: reqCookies?.[options.cookies.callbackUrl.name],\n        paramValue: reqCallbackUrl,\n    });\n    options.callbackUrl = callbackUrl;\n    if (callbackUrlCookie) {\n        cookies.push({\n            name: options.cookies.callbackUrl.name,\n            value: callbackUrlCookie,\n            options: options.cookies.callbackUrl.options,\n        });\n    }\n    return { options, cookies };\n}\n/** Wraps an object of methods and adds error handling. */\nfunction eventsErrorHandler(methods, logger) {\n    return Object.keys(methods).reduce((acc, name) => {\n        acc[name] = async (...args) => {\n            try {\n                const method = methods[name];\n                return await method(...args);\n            }\n            catch (e) {\n                logger.error(new EventError(e));\n            }\n        };\n        return acc;\n    }, {});\n}\n/** Handles adapter induced errors. */\nfunction adapterErrorHandler(adapter, logger) {\n    if (!adapter)\n        return;\n    return Object.keys(adapter).reduce((acc, name) => {\n        acc[name] = async (...args) => {\n            try {\n                logger.debug(`adapter_${name}`, { args });\n                const method = adapter[name];\n                return await method(...args);\n            }\n            catch (e) {\n                const error = new AdapterError(e);\n                logger.error(error);\n                throw error;\n            }\n        };\n        return acc;\n    }, {});\n}\n","var n,l,u,i,t,o,r,f={},e=[],c=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function s(n,l){for(var u in l)n[u]=l[u];return n}function a(n){var l=n.parentNode;l&&l.removeChild(n)}function h(l,u,i){var t,o,r,f={};for(r in u)\"key\"==r?t=u[r]:\"ref\"==r?o=u[r]:f[r]=u[r];if(arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):i),\"function\"==typeof l&&null!=l.defaultProps)for(r in l.defaultProps)void 0===f[r]&&(f[r]=l.defaultProps[r]);return v(l,f,t,o,null)}function v(n,i,t,o,r){var f={type:n,props:i,key:t,ref:o,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:null==r?++u:r};return null==r&&null!=l.vnode&&l.vnode(f),f}function y(){return{current:null}}function p(n){return n.children}function d(n,l){this.props=n,this.context=l}function _(n,l){if(null==l)return n.__?_(n.__,n.__.__k.indexOf(n)+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return\"function\"==typeof n.type?_(n):null}function k(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return k(n)}}function b(n){(!n.__d&&(n.__d=!0)&&t.push(n)&&!g.__r++||o!==l.debounceRendering)&&((o=l.debounceRendering)||setTimeout)(g)}function g(){for(var n;g.__r=t.length;)n=t.sort(function(n,l){return n.__v.__b-l.__v.__b}),t=[],n.some(function(n){var l,u,i,t,o,r;n.__d&&(o=(t=(l=n).__v).__e,(r=l.__P)&&(u=[],(i=s({},t)).__v=t.__v+1,j(r,t,i,l.__n,void 0!==r.ownerSVGElement,null!=t.__h?[o]:null,u,null==o?_(t):o,t.__h),z(u,t),t.__e!=o&&k(t)))})}function w(n,l,u,i,t,o,r,c,s,a){var h,y,d,k,b,g,w,x=i&&i.__k||e,C=x.length;for(u.__k=[],h=0;h<l.length;h++)if(null!=(k=u.__k[h]=null==(k=l[h])||\"boolean\"==typeof k?null:\"string\"==typeof k||\"number\"==typeof k||\"bigint\"==typeof k?v(null,k,null,null,k):Array.isArray(k)?v(p,{children:k},null,null,null):k.__b>0?v(k.type,k.props,k.key,k.ref?k.ref:null,k.__v):k)){if(k.__=u,k.__b=u.__b+1,null===(d=x[h])||d&&k.key==d.key&&k.type===d.type)x[h]=void 0;else for(y=0;y<C;y++){if((d=x[y])&&k.key==d.key&&k.type===d.type){x[y]=void 0;break}d=null}j(n,k,d=d||f,t,o,r,c,s,a),b=k.__e,(y=k.ref)&&d.ref!=y&&(w||(w=[]),d.ref&&w.push(d.ref,null,k),w.push(y,k.__c||b,k)),null!=b?(null==g&&(g=b),\"function\"==typeof k.type&&k.__k===d.__k?k.__d=s=m(k,s,n):s=A(n,k,d,x,b,s),\"function\"==typeof u.type&&(u.__d=s)):s&&d.__e==s&&s.parentNode!=n&&(s=_(d))}for(u.__e=g,h=C;h--;)null!=x[h]&&N(x[h],x[h]);if(w)for(h=0;h<w.length;h++)M(w[h],w[++h],w[++h])}function m(n,l,u){for(var i,t=n.__k,o=0;t&&o<t.length;o++)(i=t[o])&&(i.__=n,l=\"function\"==typeof i.type?m(i,l,u):A(u,i,i,t,i.__e,l));return l}function x(n,l){return l=l||[],null==n||\"boolean\"==typeof n||(Array.isArray(n)?n.some(function(n){x(n,l)}):l.push(n)),l}function A(n,l,u,i,t,o){var r,f,e;if(void 0!==l.__d)r=l.__d,l.__d=void 0;else if(null==u||t!=o||null==t.parentNode)n:if(null==o||o.parentNode!==n)n.appendChild(t),r=null;else{for(f=o,e=0;(f=f.nextSibling)&&e<i.length;e+=1)if(f==t)break n;n.insertBefore(t,o),r=o}return void 0!==r?r:t.nextSibling}function C(n,l,u,i,t){var o;for(o in u)\"children\"===o||\"key\"===o||o in l||H(n,o,null,u[o],i);for(o in l)t&&\"function\"!=typeof l[o]||\"children\"===o||\"key\"===o||\"value\"===o||\"checked\"===o||u[o]===l[o]||H(n,o,l[o],u[o],i)}function $(n,l,u){\"-\"===l[0]?n.setProperty(l,u):n[l]=null==u?\"\":\"number\"!=typeof u||c.test(l)?u:u+\"px\"}function H(n,l,u,i,t){var o;n:if(\"style\"===l)if(\"string\"==typeof u)n.style.cssText=u;else{if(\"string\"==typeof i&&(n.style.cssText=i=\"\"),i)for(l in i)u&&l in u||$(n.style,l,\"\");if(u)for(l in u)i&&u[l]===i[l]||$(n.style,l,u[l])}else if(\"o\"===l[0]&&\"n\"===l[1])o=l!==(l=l.replace(/Capture$/,\"\")),l=l.toLowerCase()in n?l.toLowerCase().slice(2):l.slice(2),n.l||(n.l={}),n.l[l+o]=u,u?i||n.addEventListener(l,o?T:I,o):n.removeEventListener(l,o?T:I,o);else if(\"dangerouslySetInnerHTML\"!==l){if(t)l=l.replace(/xlink(H|:h)/,\"h\").replace(/sName$/,\"s\");else if(\"href\"!==l&&\"list\"!==l&&\"form\"!==l&&\"tabIndex\"!==l&&\"download\"!==l&&l in n)try{n[l]=null==u?\"\":u;break n}catch(n){}\"function\"==typeof u||(null==u||!1===u&&-1==l.indexOf(\"-\")?n.removeAttribute(l):n.setAttribute(l,u))}}function I(n){this.l[n.type+!1](l.event?l.event(n):n)}function T(n){this.l[n.type+!0](l.event?l.event(n):n)}function j(n,u,i,t,o,r,f,e,c){var a,h,v,y,_,k,b,g,m,x,A,C,$,H,I,T=u.type;if(void 0!==u.constructor)return null;null!=i.__h&&(c=i.__h,e=u.__e=i.__e,u.__h=null,r=[e]),(a=l.__b)&&a(u);try{n:if(\"function\"==typeof T){if(g=u.props,m=(a=T.contextType)&&t[a.__c],x=a?m?m.props.value:a.__:t,i.__c?b=(h=u.__c=i.__c).__=h.__E:(\"prototype\"in T&&T.prototype.render?u.__c=h=new T(g,x):(u.__c=h=new d(g,x),h.constructor=T,h.render=O),m&&m.sub(h),h.props=g,h.state||(h.state={}),h.context=x,h.__n=t,v=h.__d=!0,h.__h=[],h._sb=[]),null==h.__s&&(h.__s=h.state),null!=T.getDerivedStateFromProps&&(h.__s==h.state&&(h.__s=s({},h.__s)),s(h.__s,T.getDerivedStateFromProps(g,h.__s))),y=h.props,_=h.state,v)null==T.getDerivedStateFromProps&&null!=h.componentWillMount&&h.componentWillMount(),null!=h.componentDidMount&&h.__h.push(h.componentDidMount);else{if(null==T.getDerivedStateFromProps&&g!==y&&null!=h.componentWillReceiveProps&&h.componentWillReceiveProps(g,x),!h.__e&&null!=h.shouldComponentUpdate&&!1===h.shouldComponentUpdate(g,h.__s,x)||u.__v===i.__v){for(h.props=g,h.state=h.__s,u.__v!==i.__v&&(h.__d=!1),h.__v=u,u.__e=i.__e,u.__k=i.__k,u.__k.forEach(function(n){n&&(n.__=u)}),A=0;A<h._sb.length;A++)h.__h.push(h._sb[A]);h._sb=[],h.__h.length&&f.push(h);break n}null!=h.componentWillUpdate&&h.componentWillUpdate(g,h.__s,x),null!=h.componentDidUpdate&&h.__h.push(function(){h.componentDidUpdate(y,_,k)})}if(h.context=x,h.props=g,h.__v=u,h.__P=n,C=l.__r,$=0,\"prototype\"in T&&T.prototype.render){for(h.state=h.__s,h.__d=!1,C&&C(u),a=h.render(h.props,h.state,h.context),H=0;H<h._sb.length;H++)h.__h.push(h._sb[H]);h._sb=[]}else do{h.__d=!1,C&&C(u),a=h.render(h.props,h.state,h.context),h.state=h.__s}while(h.__d&&++$<25);h.state=h.__s,null!=h.getChildContext&&(t=s(s({},t),h.getChildContext())),v||null==h.getSnapshotBeforeUpdate||(k=h.getSnapshotBeforeUpdate(y,_)),I=null!=a&&a.type===p&&null==a.key?a.props.children:a,w(n,Array.isArray(I)?I:[I],u,i,t,o,r,f,e,c),h.base=u.__e,u.__h=null,h.__h.length&&f.push(h),b&&(h.__E=h.__=null),h.__e=!1}else null==r&&u.__v===i.__v?(u.__k=i.__k,u.__e=i.__e):u.__e=L(i.__e,u,i,t,o,r,f,c);(a=l.diffed)&&a(u)}catch(n){u.__v=null,(c||null!=r)&&(u.__e=e,u.__h=!!c,r[r.indexOf(e)]=null),l.__e(n,u,i)}}function z(n,u){l.__c&&l.__c(u,n),n.some(function(u){try{n=u.__h,u.__h=[],n.some(function(n){n.call(u)})}catch(n){l.__e(n,u.__v)}})}function L(l,u,i,t,o,r,e,c){var s,h,v,y=i.props,p=u.props,d=u.type,k=0;if(\"svg\"===d&&(o=!0),null!=r)for(;k<r.length;k++)if((s=r[k])&&\"setAttribute\"in s==!!d&&(d?s.localName===d:3===s.nodeType)){l=s,r[k]=null;break}if(null==l){if(null===d)return document.createTextNode(p);l=o?document.createElementNS(\"http://www.w3.org/2000/svg\",d):document.createElement(d,p.is&&p),r=null,c=!1}if(null===d)y===p||c&&l.data===p||(l.data=p);else{if(r=r&&n.call(l.childNodes),h=(y=i.props||f).dangerouslySetInnerHTML,v=p.dangerouslySetInnerHTML,!c){if(null!=r)for(y={},k=0;k<l.attributes.length;k++)y[l.attributes[k].name]=l.attributes[k].value;(v||h)&&(v&&(h&&v.__html==h.__html||v.__html===l.innerHTML)||(l.innerHTML=v&&v.__html||\"\"))}if(C(l,p,y,o,c),v)u.__k=[];else if(k=u.props.children,w(l,Array.isArray(k)?k:[k],u,i,t,o&&\"foreignObject\"!==d,r,e,r?r[0]:i.__k&&_(i,0),c),null!=r)for(k=r.length;k--;)null!=r[k]&&a(r[k]);c||(\"value\"in p&&void 0!==(k=p.value)&&(k!==l.value||\"progress\"===d&&!k||\"option\"===d&&k!==y.value)&&H(l,\"value\",k,y.value,!1),\"checked\"in p&&void 0!==(k=p.checked)&&k!==l.checked&&H(l,\"checked\",k,y.checked,!1))}return l}function M(n,u,i){try{\"function\"==typeof n?n(u):n.current=u}catch(n){l.__e(n,i)}}function N(n,u,i){var t,o;if(l.unmount&&l.unmount(n),(t=n.ref)&&(t.current&&t.current!==n.__e||M(t,null,u)),null!=(t=n.__c)){if(t.componentWillUnmount)try{t.componentWillUnmount()}catch(n){l.__e(n,u)}t.base=t.__P=null,n.__c=void 0}if(t=n.__k)for(o=0;o<t.length;o++)t[o]&&N(t[o],u,i||\"function\"!=typeof n.type);i||null==n.__e||a(n.__e),n.__=n.__e=n.__d=void 0}function O(n,l,u){return this.constructor(n,u)}function P(u,i,t){var o,r,e;l.__&&l.__(u,i),r=(o=\"function\"==typeof t)?null:t&&t.__k||i.__k,e=[],j(i,u=(!o&&t||i).__k=h(p,null,[u]),r||f,f,void 0!==i.ownerSVGElement,!o&&t?[t]:r?null:i.firstChild?n.call(i.childNodes):null,e,!o&&t?t:r?r.__e:i.firstChild,o),z(e,u)}function S(n,l){P(n,l,S)}function q(l,u,i){var t,o,r,f=s({},l.props);for(r in u)\"key\"==r?t=u[r]:\"ref\"==r?o=u[r]:f[r]=u[r];return arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):i),v(l.type,f,t||l.key,o||l.ref,null)}function B(n,l){var u={__c:l=\"__cC\"+r++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var u,i;return this.getChildContext||(u=[],(i={})[l]=this,this.getChildContext=function(){return i},this.shouldComponentUpdate=function(n){this.props.value!==n.value&&u.some(b)},this.sub=function(n){u.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){u.splice(u.indexOf(n),1),l&&l.call(n)}}),n.children}};return u.Provider.__=u.Consumer.contextType=u}n=e.slice,l={__e:function(n,l,u,i){for(var t,o,r;l=l.__;)if((t=l.__c)&&!t.__)try{if((o=t.constructor)&&null!=o.getDerivedStateFromError&&(t.setState(o.getDerivedStateFromError(n)),r=t.__d),null!=t.componentDidCatch&&(t.componentDidCatch(n,i||{}),r=t.__d),r)return t.__E=t}catch(l){n=l}throw n}},u=0,i=function(n){return null!=n&&void 0===n.constructor},d.prototype.setState=function(n,l){var u;u=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=s({},this.state),\"function\"==typeof n&&(n=n(s({},u),this.props)),n&&s(u,n),null!=n&&this.__v&&(l&&this._sb.push(l),b(this))},d.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),b(this))},d.prototype.render=p,t=[],g.__r=0,r=0;export{d as Component,p as Fragment,q as cloneElement,B as createContext,h as createElement,y as createRef,h,S as hydrate,i as isValidElement,l as options,P as render,x as toChildArray};\n//# sourceMappingURL=preact.module.js.map\n","import{Fragment as e,options as t}from\"preact\";var r=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|^--/i,n=/^(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)$/,o=/[\\s\\n\\\\/='\"\\0<>]/,i=/^xlink:?./,a=/[\"&<]/;function l(e){if(!1===a.test(e+=\"\"))return e;for(var t=0,r=0,n=\"\",o=\"\";r<e.length;r++){switch(e.charCodeAt(r)){case 34:o=\"&quot;\";break;case 38:o=\"&amp;\";break;case 60:o=\"&lt;\";break;default:continue}r!==t&&(n+=e.slice(t,r)),n+=o,t=r+1}return r!==t&&(n+=e.slice(t,r)),n}var s=function(e,t){return String(e).replace(/(\\n+)/g,\"$1\"+(t||\"\\t\"))},f=function(e,t,r){return String(e).length>(t||40)||!r&&-1!==String(e).indexOf(\"\\n\")||-1!==String(e).indexOf(\"<\")},c={},u=/([A-Z])/g;function p(e){var t=\"\";for(var n in e){var o=e[n];null!=o&&\"\"!==o&&(t&&(t+=\" \"),t+=\"-\"==n[0]?n:c[n]||(c[n]=n.replace(u,\"-$1\").toLowerCase()),t=\"number\"==typeof o&&!1===r.test(n)?t+\": \"+o+\"px;\":t+\": \"+o+\";\")}return t||void 0}function _(e,t){return Array.isArray(t)?t.reduce(_,e):null!=t&&!1!==t&&e.push(t),e}function d(){this.__d=!0}function v(e,t){return{__v:e,context:t,props:e.props,setState:d,forceUpdate:d,__d:!0,__h:[]}}function h(e,t){var r=e.contextType,n=r&&t[r.__c];return null!=r?n?n.props.value:r.__:t}var g=[];function y(r,a,c,u,d,m){if(null==r||\"boolean\"==typeof r)return\"\";if(\"object\"!=typeof r)return l(r);var b=c.pretty,x=b&&\"string\"==typeof b?b:\"\\t\";if(Array.isArray(r)){for(var k=\"\",S=0;S<r.length;S++)b&&S>0&&(k+=\"\\n\"),k+=y(r[S],a,c,u,d,m);return k}var w,C=r.type,O=r.props,j=!1;if(\"function\"==typeof C){if(j=!0,!c.shallow||!u&&!1!==c.renderRootComponent){if(C===e){var A=[];return _(A,r.props.children),y(A,a,c,!1!==c.shallowHighOrder,d,m)}var F,H=r.__c=v(r,a);t.__b&&t.__b(r);var M=t.__r;if(C.prototype&&\"function\"==typeof C.prototype.render){var L=h(C,a);(H=r.__c=new C(O,L)).__v=r,H._dirty=H.__d=!0,H.props=O,null==H.state&&(H.state={}),null==H._nextState&&null==H.__s&&(H._nextState=H.__s=H.state),H.context=L,C.getDerivedStateFromProps?H.state=Object.assign({},H.state,C.getDerivedStateFromProps(H.props,H.state)):H.componentWillMount&&(H.componentWillMount(),H.state=H._nextState!==H.state?H._nextState:H.__s!==H.state?H.__s:H.state),M&&M(r),F=H.render(H.props,H.state,H.context)}else for(var T=h(C,a),E=0;H.__d&&E++<25;)H.__d=!1,M&&M(r),F=C.call(r.__c,O,T);return H.getChildContext&&(a=Object.assign({},a,H.getChildContext())),t.diffed&&t.diffed(r),y(F,a,c,!1!==c.shallowHighOrder,d,m)}C=(w=C).displayName||w!==Function&&w.name||function(e){var t=(Function.prototype.toString.call(e).match(/^\\s*function\\s+([^( ]+)/)||\"\")[1];if(!t){for(var r=-1,n=g.length;n--;)if(g[n]===e){r=n;break}r<0&&(r=g.push(e)-1),t=\"UnnamedComponent\"+r}return t}(w)}var $,D,N=\"<\"+C;if(O){var P=Object.keys(O);c&&!0===c.sortAttributes&&P.sort();for(var W=0;W<P.length;W++){var I=P[W],R=O[I];if(\"children\"!==I){if(!o.test(I)&&(c&&c.allAttributes||\"key\"!==I&&\"ref\"!==I&&\"__self\"!==I&&\"__source\"!==I)){if(\"defaultValue\"===I)I=\"value\";else if(\"defaultChecked\"===I)I=\"checked\";else if(\"defaultSelected\"===I)I=\"selected\";else if(\"className\"===I){if(void 0!==O.class)continue;I=\"class\"}else d&&i.test(I)&&(I=I.toLowerCase().replace(/^xlink:?/,\"xlink:\"));if(\"htmlFor\"===I){if(O.for)continue;I=\"for\"}\"style\"===I&&R&&\"object\"==typeof R&&(R=p(R)),\"a\"===I[0]&&\"r\"===I[1]&&\"boolean\"==typeof R&&(R=String(R));var U=c.attributeHook&&c.attributeHook(I,R,a,c,j);if(U||\"\"===U)N+=U;else if(\"dangerouslySetInnerHTML\"===I)D=R&&R.__html;else if(\"textarea\"===C&&\"value\"===I)$=R;else if((R||0===R||\"\"===R)&&\"function\"!=typeof R){if(!(!0!==R&&\"\"!==R||(R=I,c&&c.xml))){N=N+\" \"+I;continue}if(\"value\"===I){if(\"select\"===C){m=R;continue}\"option\"===C&&m==R&&void 0===O.selected&&(N+=\" selected\")}N=N+\" \"+I+'=\"'+l(R)+'\"'}}}else $=R}}if(b){var V=N.replace(/\\n\\s*/,\" \");V===N||~V.indexOf(\"\\n\")?b&&~N.indexOf(\"\\n\")&&(N+=\"\\n\"):N=V}if(N+=\">\",o.test(C))throw new Error(C+\" is not a valid HTML tag name in \"+N);var q,z=n.test(C)||c.voidElements&&c.voidElements.test(C),Z=[];if(D)b&&f(D)&&(D=\"\\n\"+x+s(D,x)),N+=D;else if(null!=$&&_(q=[],$).length){for(var B=b&&~N.indexOf(\"\\n\"),G=!1,J=0;J<q.length;J++){var K=q[J];if(null!=K&&!1!==K){var Q=y(K,a,c,!0,\"svg\"===C||\"foreignObject\"!==C&&d,m);if(b&&!B&&f(Q)&&(B=!0),Q)if(b){var X=Q.length>0&&\"<\"!=Q[0];G&&X?Z[Z.length-1]+=Q:Z.push(Q),G=X}else Z.push(Q)}}if(b&&B)for(var Y=Z.length;Y--;)Z[Y]=\"\\n\"+x+s(Z[Y],x)}if(Z.length||D)N+=Z.join(\"\");else if(c&&c.xml)return N.substring(0,N.length-1)+\" />\";return!z||q||D?(b&&~N.indexOf(\"\\n\")&&(N+=\"\\n\"),N=N+\"</\"+C+\">\"):N=N.replace(/>$/,\" />\"),N}var m={shallow:!0};k.render=k;var b=function(e,t){return k(e,t,m)},x=[];function k(e,r,n){r=r||{};var o,i=t.__s;return t.__s=!0,o=n&&(n.pretty||n.voidElements||n.sortAttributes||n.shallow||n.allAttributes||n.xml||n.attributeHook)?y(e,r,n):j(e,r,!1,void 0),t.__c&&t.__c(e,x),t.__s=i,x.length=0,o}function S(e,t){return\"className\"===e?\"class\":\"htmlFor\"===e?\"for\":\"defaultValue\"===e?\"value\":\"defaultChecked\"===e?\"checked\":\"defaultSelected\"===e?\"selected\":t&&i.test(e)?e.toLowerCase().replace(/^xlink:?/,\"xlink:\"):e}function w(e,t){return\"style\"===e&&null!=t&&\"object\"==typeof t?p(t):\"a\"===e[0]&&\"r\"===e[1]&&\"boolean\"==typeof t?String(t):t}var C=Array.isArray,O=Object.assign;function j(r,i,a,s){if(null==r||!0===r||!1===r||\"\"===r)return\"\";if(\"object\"!=typeof r)return l(r);if(C(r)){for(var f=\"\",c=0;c<r.length;c++)f+=j(r[c],i,a,s);return f}t.__b&&t.__b(r);var u=r.type,p=r.props;if(\"function\"==typeof u){if(u===e)return j(r.props.children,i,a,s);var _;_=u.prototype&&\"function\"==typeof u.prototype.render?function(e,r){var n=e.type,o=h(n,r),i=new n(e.props,o);e.__c=i,i.__v=e,i.__d=!0,i.props=e.props,null==i.state&&(i.state={}),null==i.__s&&(i.__s=i.state),i.context=o,n.getDerivedStateFromProps?i.state=O({},i.state,n.getDerivedStateFromProps(i.props,i.state)):i.componentWillMount&&(i.componentWillMount(),i.state=i.__s!==i.state?i.__s:i.state);var a=t.__r;return a&&a(e),i.render(i.props,i.state,i.context)}(r,i):function(e,r){var n,o=v(e,r),i=h(e.type,r);e.__c=o;for(var a=t.__r,l=0;o.__d&&l++<25;)o.__d=!1,a&&a(e),n=e.type.call(o,e.props,i);return n}(r,i);var d=r.__c;d.getChildContext&&(i=O({},i,d.getChildContext()));var g=j(_,i,a,s);return t.diffed&&t.diffed(r),g}var y,m,b=\"<\";if(b+=u,p)for(var x in y=p.children,p){var k=p[x];if(!(\"key\"===x||\"ref\"===x||\"__self\"===x||\"__source\"===x||\"children\"===x||\"className\"===x&&\"class\"in p||\"htmlFor\"===x&&\"for\"in p||o.test(x)))if(k=w(x=S(x,a),k),\"dangerouslySetInnerHTML\"===x)m=k&&k.__html;else if(\"textarea\"===u&&\"value\"===x)y=k;else if((k||0===k||\"\"===k)&&\"function\"!=typeof k){if(!0===k||\"\"===k){k=x,b=b+\" \"+x;continue}if(\"value\"===x){if(\"select\"===u){s=k;continue}\"option\"!==u||s!=k||\"selected\"in p||(b+=\" selected\")}b=b+\" \"+x+'=\"'+l(k)+'\"'}}var A=b;if(b+=\">\",o.test(u))throw new Error(u+\" is not a valid HTML tag name in \"+b);var F=\"\",H=!1;if(m)F+=m,H=!0;else if(\"string\"==typeof y)F+=l(y),H=!0;else if(C(y))for(var M=0;M<y.length;M++){var L=y[M];if(null!=L&&!1!==L){var T=j(L,i,\"svg\"===u||\"foreignObject\"!==u&&a,s);T&&(F+=T,H=!0)}}else if(null!=y&&!1!==y&&!0!==y){var E=j(y,i,\"svg\"===u||\"foreignObject\"!==u&&a,s);E&&(F+=E,H=!0)}if(t.diffed&&t.diffed(r),H)b+=F;else if(n.test(u))return A+\" />\";return b+\"</\"+u+\">\"}k.shallowRender=b;export default k;export{k as render,k as renderToStaticMarkup,k as renderToString,b as shallowRender};\n//# sourceMappingURL=index.module.js.map\n","import{options as r}from\"preact\";export{Fragment}from\"preact\";var _=0;function o(o,e,n,t,f){var l,s,u={};for(s in e)\"ref\"==s?l=e[s]:u[s]=e[s];var a={type:o,props:u,key:n,ref:l,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:--_,__source:f,__self:t};if(\"function\"==typeof o&&(l=o.defaultProps))for(s in l)void 0===u[s]&&(u[s]=l[s]);return r.vnode&&r.vnode(a),a}export{o as jsx,o as jsxDEV,o as jsxs};\n//# sourceMappingURL=jsxRuntime.module.js.map\n","import { jsx as _jsx, jsxs as _jsxs } from \"preact/jsx-runtime\";\n/** Renders an error page. */\nexport default function ErrorPage(props) {\n    const { url, error = \"default\", theme } = props;\n    const signinPageUrl = `${url}/signin`;\n    const errors = {\n        default: {\n            status: 200,\n            heading: \"Error\",\n            message: (_jsx(\"p\", { children: _jsx(\"a\", { className: \"site\", href: url?.origin, children: url?.host }) })),\n        },\n        configuration: {\n            status: 500,\n            heading: \"Server error\",\n            message: (_jsxs(\"div\", { children: [_jsx(\"p\", { children: \"There is a problem with the server configuration.\" }), _jsx(\"p\", { children: \"Check the server logs for more information.\" })] })),\n        },\n        accessdenied: {\n            status: 403,\n            heading: \"Access Denied\",\n            message: (_jsxs(\"div\", { children: [_jsx(\"p\", { children: \"You do not have permission to sign in.\" }), _jsx(\"p\", { children: _jsx(\"a\", { className: \"button\", href: signinPageUrl, children: \"Sign in\" }) })] })),\n        },\n        verification: {\n            status: 403,\n            heading: \"Unable to sign in\",\n            message: (_jsxs(\"div\", { children: [_jsx(\"p\", { children: \"The sign in link is no longer valid.\" }), _jsx(\"p\", { children: \"It may have been used already or it may have expired.\" })] })),\n            signin: (_jsx(\"p\", { children: _jsx(\"a\", { className: \"button\", href: signinPageUrl, children: \"Sign in\" }) })),\n        },\n    };\n    const { status, heading, message, signin } = errors[error.toLowerCase()] ?? errors.default;\n    return {\n        status,\n        html: (_jsxs(\"div\", { className: \"error\", children: [theme?.brandColor && (_jsx(\"style\", { dangerouslySetInnerHTML: {\n                        __html: `\n        :root {\n          --brand-color: ${theme?.brandColor}\n        }\n      `,\n                    } })), _jsxs(\"div\", { className: \"card\", children: [theme?.logo && _jsx(\"img\", { src: theme?.logo, alt: \"Logo\", className: \"logo\" }), _jsx(\"h1\", { children: heading }), _jsx(\"div\", { className: \"message\", children: message }), signin] })] })),\n    };\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"preact/jsx-runtime\";\nconst signinErrors = {\n    default: \"Unable to sign in.\",\n    signin: \"Try signing in with a different account.\",\n    oauthsignin: \"Try signing in with a different account.\",\n    oauthcallbackerror: \"Try signing in with a different account.\",\n    oauthcreateaccount: \"Try signing in with a different account.\",\n    emailcreateaccount: \"Try signing in with a different account.\",\n    callback: \"Try signing in with a different account.\",\n    oauthaccountnotlinked: \"To confirm your identity, sign in with the same account you used originally.\",\n    emailsignin: \"The e-mail could not be sent.\",\n    credentialssignin: \"Sign in failed. Check the details you provided are correct.\",\n    sessionrequired: \"Please sign in to access this page.\",\n};\nexport default function SigninPage(props) {\n    const { csrfToken, providers = [], callbackUrl, theme, email, error: errorType, } = props;\n    if (typeof document !== \"undefined\" && theme.brandColor) {\n        document.documentElement.style.setProperty(\"--brand-color\", theme.brandColor);\n    }\n    if (typeof document !== \"undefined\" && theme.buttonText) {\n        document.documentElement.style.setProperty(\"--button-text-color\", theme.buttonText);\n    }\n    const error = errorType &&\n        (signinErrors[errorType.toLowerCase()] ??\n            signinErrors.default);\n    const logos = \"https://authjs.dev/img/providers\";\n    return (_jsxs(\"div\", { className: \"signin\", children: [theme.brandColor && (_jsx(\"style\", { dangerouslySetInnerHTML: {\n                    __html: `:root {--brand-color: ${theme.brandColor}}`,\n                } })), theme.buttonText && (_jsx(\"style\", { dangerouslySetInnerHTML: {\n                    __html: `\n        :root {\n          --button-text-color: ${theme.buttonText}\n        }\n      `,\n                } })), _jsxs(\"div\", { className: \"card\", children: [error && (_jsx(\"div\", { className: \"error\", children: _jsx(\"p\", { children: error }) })), providers.map((provider, i) => (_jsxs(\"div\", { className: \"provider\", children: [provider.type === \"oauth\" || provider.type === \"oidc\" ? (_jsxs(\"form\", { action: provider.signinUrl, method: \"POST\", children: [_jsx(\"input\", { type: \"hidden\", name: \"csrfToken\", value: csrfToken }), callbackUrl && (_jsx(\"input\", { type: \"hidden\", name: \"callbackUrl\", value: callbackUrl })), _jsxs(\"button\", { type: \"submit\", className: \"button\", style: {\n                                            \"--provider-bg\": provider.style?.bg ?? \"\",\n                                            \"--provider-dark-bg\": provider.style?.bgDark ?? \"\",\n                                            \"--provider-color\": provider.style?.text ?? \"\",\n                                            \"--provider-dark-color\": provider.style?.textDark ?? \"\",\n                                            gap: 8,\n                                        }, children: [provider.style?.logo && (_jsx(\"img\", { loading: \"lazy\", height: 24, width: 24, id: \"provider-logo\", src: `${provider.style.logo.startsWith(\"/\") ? logos : \"\"}${provider.style.logo}` })), provider.style?.logoDark && (_jsx(\"img\", { loading: \"lazy\", height: 24, width: 24, id: \"provider-logo-dark\", src: `${provider.style.logo.startsWith(\"/\") ? logos : \"\"}${provider.style.logoDark}` })), _jsxs(\"span\", { children: [\"Sign in with \", provider.name] })] })] })) : null, (provider.type === \"email\" || provider.type === \"credentials\") &&\n                                i > 0 &&\n                                providers[i - 1].type !== \"email\" &&\n                                providers[i - 1].type !== \"credentials\" && _jsx(\"hr\", {}), provider.type === \"email\" && (_jsxs(\"form\", { action: provider.signinUrl, method: \"POST\", children: [_jsx(\"input\", { type: \"hidden\", name: \"csrfToken\", value: csrfToken }), _jsx(\"label\", { className: \"section-header\", htmlFor: `input-email-for-${provider.id}-provider`, children: \"Email\" }), _jsx(\"input\", { id: `input-email-for-${provider.id}-provider`, autoFocus: true, type: \"email\", name: \"email\", value: email, placeholder: \"email@example.com\", required: true }), _jsxs(\"button\", { type: \"submit\", children: [\"Sign in with \", provider.name] })] })), provider.type === \"credentials\" && (_jsxs(\"form\", { action: provider.callbackUrl, method: \"POST\", children: [_jsx(\"input\", { type: \"hidden\", name: \"csrfToken\", value: csrfToken }), Object.keys(provider.credentials).map((credential) => {\n                                        return (_jsxs(\"div\", { children: [_jsx(\"label\", { className: \"section-header\", htmlFor: `input-${credential}-for-${provider.id}-provider`, children: provider.credentials[credential].label ?? credential }), _jsx(\"input\", { name: credential, id: `input-${credential}-for-${provider.id}-provider`, type: provider.credentials[credential].type ?? \"text\", placeholder: provider.credentials[credential].placeholder ?? \"\", ...provider.credentials[credential] })] }, `input-group-${provider.id}`));\n                                    }), _jsxs(\"button\", { id: \"submitButton\", type: \"submit\", children: [\"Sign in with \", provider.name] })] })), (provider.type === \"email\" || provider.type === \"credentials\") &&\n                                i + 1 < providers.length && _jsx(\"hr\", {})] }, provider.id)))] })] }));\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"preact/jsx-runtime\";\nexport default function SignoutPage(props) {\n    const { url, csrfToken, theme } = props;\n    return (_jsxs(\"div\", { className: \"signout\", children: [theme.brandColor && (_jsx(\"style\", { dangerouslySetInnerHTML: {\n                    __html: `\n        :root {\n          --brand-color: ${theme.brandColor}\n        }\n      `,\n                } })), theme.buttonText && (_jsx(\"style\", { dangerouslySetInnerHTML: {\n                    __html: `\n        :root {\n          --button-text-color: ${theme.buttonText}\n        }\n      `,\n                } })), _jsxs(\"div\", { className: \"card\", children: [theme.logo && _jsx(\"img\", { src: theme.logo, alt: \"Logo\", className: \"logo\" }), _jsx(\"h1\", { children: \"Signout\" }), _jsx(\"p\", { children: \"Are you sure you want to sign out?\" }), _jsxs(\"form\", { action: `${url}/signout`, method: \"POST\", children: [_jsx(\"input\", { type: \"hidden\", name: \"csrfToken\", value: csrfToken }), _jsx(\"button\", { id: \"submitButton\", type: \"submit\", children: \"Sign out\" })] })] })] }));\n}\n","export default `:root {\n  --border-width: 1px;\n  --border-radius: 0.5rem;\n  --color-error: #c94b4b;\n  --color-info: #157efb;\n  --color-info-text: #fff;\n}\n\n.__next-auth-theme-auto,\n.__next-auth-theme-light {\n  --color-background: #ececec;\n  --color-background-card: #fff;\n  --color-text: #000;\n  --color-primary: #444;\n  --color-control-border: #bbb;\n  --color-button-active-background: #f9f9f9;\n  --color-button-active-border: #aaa;\n  --color-separator: #ccc;\n}\n\n.__next-auth-theme-dark {\n  --color-background: #161b22;\n  --color-background-card: #0d1117;\n  --color-text: #fff;\n  --color-primary: #ccc;\n  --color-control-border: #555;\n  --color-button-active-background: #060606;\n  --color-button-active-border: #666;\n  --color-separator: #444;\n}\n\n@media (prefers-color-scheme: dark) {\n  .__next-auth-theme-auto {\n    --color-background: #161b22;\n    --color-background-card: #0d1117;\n    --color-text: #fff;\n    --color-primary: #ccc;\n    --color-control-border: #555;\n    --color-button-active-background: #060606;\n    --color-button-active-border: #666;\n    --color-separator: #444;\n  }\n}\n\nbody {\n  background-color: var(--color-background);\n  margin: 0;\n  padding: 0;\n  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont,\n    \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif,\n    \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\n}\n\nh1 {\n  font-weight: 400;\n  margin-bottom: 1.5rem;\n  padding: 0 1rem;\n  color: var(--color-text);\n}\n\np {\n  color: var(--color-text);\n}\n\nform {\n  margin: 0;\n  padding: 0;\n}\n\nlabel {\n  font-weight: 500;\n  text-align: left;\n  margin-bottom: 0.25rem;\n  display: block;\n  color: var(--color-text);\n}\n\ninput[type] {\n  box-sizing: border-box;\n  display: block;\n  width: 100%;\n  padding: 0.5rem 1rem;\n  border: var(--border-width) solid var(--color-control-border);\n  background: var(--color-background-card);\n  font-size: 1rem;\n  border-radius: var(--border-radius);\n  color: var(--color-text);\n}\n\ninput[type]:focus {\n    box-shadow: none;\n  }\n\np {\n  margin: 0 0 1.5rem 0;\n  padding: 0 1rem;\n  font-size: 1.1rem;\n  line-height: 2rem;\n}\n\na.button {\n  text-decoration: none;\n  line-height: 1rem;\n}\n\na.button:link,\n  a.button:visited {\n    background-color: var(--color-background);\n    color: var(--color-primary);\n  }\n\nbutton span {\n  flex-grow: 1;\n}\n\nbutton,\na.button {\n  margin: 0 0 0.75rem 0;\n  padding: 0.75rem 1rem;\n  color: var(--provider-color, var(--color-primary));\n  background-color: var(--provider-bg, var(--color-background-card));\n  font-size: 1.1rem;\n  min-height: 62px;\n  border-color: rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  transition: all 0.1s ease-in-out;\n  font-weight: 500;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n@media (max-width: 450px) {\n\nbutton,\na.button {\n    font-size: 0.9rem\n}\n  }\n\nbutton:hover, a.button:hover {\n    cursor: pointer;\n  }\n\nbutton:active, a.button:active {\n    cursor: pointer;\n  }\n\nbutton #provider-logo, a.button #provider-logo {\n    width: 25px;\n    display: block;\n  }\n\nbutton #provider-logo-dark, a.button #provider-logo-dark {\n    display: none;\n  }\n\n#submitButton {\n  color: var(--button-text-color, var(--color-info-text));\n  background-color: var(--brand-color, var(--color-info));\n  width: 100%;\n}\n\n@media (prefers-color-scheme: dark) {\n  button,\n  a.button {\n    color: var(--provider-dark-color, var(--color-primary));\n    background-color: var(--provider-dark-bg, var(--color-background));\n  }\n  #provider-logo {\n    display: none !important;\n  }\n  #provider-logo-dark {\n    width: 25px;\n    display: block !important;\n  }\n}\n\na.site {\n  color: var(--color-primary);\n  text-decoration: none;\n  font-size: 1rem;\n  line-height: 2rem;\n}\n\na.site:hover {\n    text-decoration: underline;\n  }\n\n.page {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: grid;\n  place-items: center;\n  margin: 0;\n  padding: 0;\n}\n\n.page > div {\n    text-align: center;\n  }\n\n.error a.button {\n    display: inline-block;\n    padding-left: 2rem;\n    padding-right: 2rem;\n    margin-top: 0.5rem;\n  }\n\n.error .message {\n    margin-bottom: 1.5rem;\n  }\n\n.signin input[type=\"text\"] {\n    margin-left: auto;\n    margin-right: auto;\n    display: block;\n  }\n\n.signin hr {\n    display: block;\n    border: 0;\n    border-top: 1px solid var(--color-separator);\n    margin: 2rem auto 1rem auto;\n    overflow: visible;\n  }\n\n.signin hr::before {\n      content: \"or\";\n      background: var(--color-background-card);\n      color: #888;\n      padding: 0 0.4rem;\n      position: relative;\n      top: -0.7rem;\n    }\n\n.signin .error {\n    background: #f5f5f5;\n    font-weight: 500;\n    border-radius: 0.3rem;\n    background: var(--color-error);\n  }\n\n.signin .error p {\n      text-align: left;\n      padding: 0.5rem 1rem;\n      font-size: 0.9rem;\n      line-height: 1.2rem;\n      color: var(--color-info-text);\n    }\n\n.signin > div,\n  .signin form {\n    display: block;\n  }\n\n.signin > div input[type], .signin form input[type] {\n      margin-bottom: 0.5rem;\n    }\n\n.signin > div button, .signin form button {\n      width: 100%;\n    }\n\n.signin > div,\n  .signin form {\n\n    max-width: 300px;\n}\n\n.logo {\n  display: inline-block;\n  max-width: 150px;\n  margin-top: 20px;\n  margin-bottom: 25px;\n  max-height: 70px;\n}\n\n@media screen and (min-width: 450px) {\n\n.card {\n    width: 350px\n}\n  }\n\n@media screen and (max-width: 450px) {\n\n.card {\n    width: 200px\n}\n  }\n\n.card {\n  margin: 20px 0 20px 0;\n  background-color: var(--color-background-card);\n  border-radius: 30px;\n  padding: 20px 50px;\n}\n\n.card .header {\n    color: var(--color-primary);\n  }\n\n.section-header {\n  color: var(--color-text);\n}\n`;\n// Generated by `pnpm css`\n","import { jsx as _jsx, jsxs as _jsxs } from \"preact/jsx-runtime\";\nexport default function VerifyRequestPage(props) {\n    const { url, theme } = props;\n    return (_jsxs(\"div\", { className: \"verify-request\", children: [theme.brandColor && (_jsx(\"style\", { dangerouslySetInnerHTML: {\n                    __html: `\n        :root {\n          --brand-color: ${theme.brandColor}\n        }\n      `,\n                } })), _jsxs(\"div\", { className: \"card\", children: [theme.logo && _jsx(\"img\", { src: theme.logo, alt: \"Logo\", className: \"logo\" }), _jsx(\"h1\", { children: \"Check your email\" }), _jsx(\"p\", { children: \"A sign in link has been sent to your email address.\" }), _jsx(\"p\", { children: _jsx(\"a\", { className: \"site\", href: url.origin, children: url.host }) })] })] }));\n}\n","import { renderToString } from \"preact-render-to-string\";\nimport ErrorPage from \"./error.js\";\nimport SigninPage from \"./signin.js\";\nimport SignoutPage from \"./signout.js\";\nimport css from \"./styles.js\";\nimport VerifyRequestPage from \"./verify-request.js\";\nfunction send({ html, title, status, cookies, theme }) {\n    return {\n        cookies,\n        status,\n        headers: { \"Content-Type\": \"text/html\" },\n        body: `<!DOCTYPE html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><style>${css}</style><title>${title}</title></head><body class=\"__next-auth-theme-${theme?.colorScheme ?? \"auto\"}\"><div class=\"page\">${renderToString(html)}</div></body></html>`,\n    };\n}\n/**\n * Unless the user defines their [own pages](https://authjs.dev/guides/basics/pages),\n * we render a set of default ones, using Preact SSR.\n */\nexport default function renderPage(params) {\n    const { url, theme, query, cookies } = params;\n    return {\n        signin(props) {\n            return send({\n                cookies,\n                theme,\n                html: SigninPage({\n                    csrfToken: params.csrfToken,\n                    // We only want to render providers\n                    providers: params.providers?.filter((provider) => \n                    // Always render oauth and email type providers\n                    [\"email\", \"oauth\", \"oidc\"].includes(provider.type) ||\n                        // Only render credentials type provider if credentials are defined\n                        (provider.type === \"credentials\" && provider.credentials) ||\n                        // Don't render other provider types\n                        false),\n                    callbackUrl: params.callbackUrl,\n                    theme,\n                    ...query,\n                    ...props,\n                }),\n                title: \"Sign In\",\n            });\n        },\n        signout(props) {\n            return send({\n                cookies,\n                theme,\n                html: SignoutPage({\n                    csrfToken: params.csrfToken,\n                    url,\n                    theme,\n                    ...props,\n                }),\n                title: \"Sign Out\",\n            });\n        },\n        verifyRequest(props) {\n            return send({\n                cookies,\n                theme,\n                html: VerifyRequestPage({ url, theme, ...props }),\n                title: \"Verify Request\",\n            });\n        },\n        error(props) {\n            return send({\n                cookies,\n                theme,\n                ...ErrorPage({ url, theme, ...props }),\n                title: \"Error\",\n            });\n        },\n    };\n}\n","/**\n * Takes a number in seconds and returns the date in the future.\n * Optionally takes a second date parameter. In that case\n * the date in the future will be calculated from that date instead of now.\n */\nexport function fromDate(time, date = Date.now()) {\n    return new Date(date + time * 1000);\n}\n","import { OAuthAccountNotLinked } from \"../errors.js\";\nimport { fromDate } from \"./utils/date.js\";\n/**\n * This function handles the complex flow of signing users in, and either creating,\n * linking (or not linking) accounts depending on if the user is currently logged\n * in, if they have account already and the authentication mechanism they are using.\n *\n * It prevents insecure behaviour, such as linking OAuth accounts unless a user is\n * signed in and authenticated with an existing valid account.\n *\n * All verification (e.g. OAuth flows or email address verification flows) are\n * done prior to this handler being called to avoid additional complexity in this\n * handler.\n */\nexport async function handleLogin(sessionToken, _profile, _account, options) {\n    // Input validation\n    if (!_account?.providerAccountId || !_account.type)\n        throw new Error(\"Missing or invalid provider account\");\n    if (![\"email\", \"oauth\", \"oidc\"].includes(_account.type))\n        throw new Error(\"Provider not supported\");\n    const { adapter, jwt, events, session: { strategy: sessionStrategy, generateSessionToken }, } = options;\n    // If no adapter is configured then we don't have a database and cannot\n    // persist data; in this mode we just return a dummy session object.\n    if (!adapter) {\n        return { user: _profile, account: _account };\n    }\n    const profile = _profile;\n    let account = _account;\n    const { createUser, updateUser, getUser, getUserByAccount, getUserByEmail, linkAccount, createSession, getSessionAndUser, deleteSession, } = adapter;\n    let session = null;\n    let user = null;\n    let isNewUser = false;\n    const useJwtSession = sessionStrategy === \"jwt\";\n    if (sessionToken) {\n        if (useJwtSession) {\n            try {\n                session = await jwt.decode({ ...jwt, token: sessionToken });\n                if (session && \"sub\" in session && session.sub) {\n                    user = await getUser(session.sub);\n                }\n            }\n            catch {\n                // If session can't be verified, treat as no session\n            }\n        }\n        else {\n            const userAndSession = await getSessionAndUser(sessionToken);\n            if (userAndSession) {\n                session = userAndSession.session;\n                user = userAndSession.user;\n            }\n        }\n    }\n    if (account.type === \"email\") {\n        // If signing in with an email, check if an account with the same email address exists already\n        const userByEmail = await getUserByEmail(profile.email);\n        if (userByEmail) {\n            // If they are not already signed in as the same user, this flow will\n            // sign them out of the current session and sign them in as the new user\n            if (user?.id !== userByEmail.id && !useJwtSession && sessionToken) {\n                // Delete existing session if they are currently signed in as another user.\n                // This will switch user accounts for the session in cases where the user was\n                // already logged in with a different account.\n                await deleteSession(sessionToken);\n            }\n            // Update emailVerified property on the user object\n            user = await updateUser({ id: userByEmail.id, emailVerified: new Date() });\n            await events.updateUser?.({ user });\n        }\n        else {\n            const { id: _, ...newUser } = { ...profile, emailVerified: new Date() };\n            // Create user account if there isn't one for the email address already\n            user = await createUser(newUser);\n            await events.createUser?.({ user });\n            isNewUser = true;\n        }\n        // Create new session\n        session = useJwtSession\n            ? {}\n            : await createSession({\n                sessionToken: generateSessionToken(),\n                userId: user.id,\n                expires: fromDate(options.session.maxAge),\n            });\n        return { session, user, isNewUser };\n    }\n    // If signing in with OAuth account, check to see if the account exists already\n    const userByAccount = await getUserByAccount({\n        providerAccountId: account.providerAccountId,\n        provider: account.provider,\n    });\n    if (userByAccount) {\n        if (user) {\n            // If the user is already signed in with this account, we don't need to do anything\n            if (userByAccount.id === user.id) {\n                return { session, user, isNewUser };\n            }\n            // If the user is currently signed in, but the new account they are signing in\n            // with is already associated with another user, then we cannot link them\n            // and need to return an error.\n            throw new OAuthAccountNotLinked(\"The account is already associated with another user\", { provider: account.provider });\n        }\n        // If there is no active session, but the account being signed in with is already\n        // associated with a valid user then create session to sign the user in.\n        session = useJwtSession\n            ? {}\n            : await createSession({\n                sessionToken: generateSessionToken(),\n                userId: userByAccount.id,\n                expires: fromDate(options.session.maxAge),\n            });\n        return { session, user: userByAccount, isNewUser };\n    }\n    else {\n        const { provider: p } = options;\n        const { type, provider, providerAccountId, userId, ...tokenSet } = account;\n        const defaults = { providerAccountId, provider, type, userId };\n        account = Object.assign(p.account(tokenSet) ?? {}, defaults);\n        if (user) {\n            // If the user is already signed in and the OAuth account isn't already associated\n            // with another user account then we can go ahead and link the accounts safely.\n            await linkAccount({ ...account, userId: user.id });\n            await events.linkAccount?.({ user, account, profile });\n            // As they are already signed in, we don't need to do anything after linking them\n            return { session, user, isNewUser };\n        }\n        // If the user is not signed in and it looks like a new OAuth account then we\n        // check there also isn't an user account already associated with the same\n        // email address as the one in the OAuth profile.\n        //\n        // This step is often overlooked in OAuth implementations, but covers the following cases:\n        //\n        // 1. It makes it harder for someone to accidentally create two accounts.\n        //    e.g. by signin in with email, then again with an oauth account connected to the same email.\n        // 2. It makes it harder to hijack a user account using a 3rd party OAuth account.\n        //    e.g. by creating an oauth account then changing the email address associated with it.\n        //\n        // It's quite common for services to automatically link accounts in this case, but it's\n        // better practice to require the user to sign in *then* link accounts to be sure\n        // someone is not exploiting a problem with a third party OAuth service.\n        //\n        // OAuth providers should require email address verification to prevent this, but in\n        // practice that is not always the case; this helps protect against that.\n        const userByEmail = profile.email\n            ? await getUserByEmail(profile.email)\n            : null;\n        if (userByEmail) {\n            const provider = options.provider;\n            if (provider?.allowDangerousEmailAccountLinking) {\n                // If you trust the oauth provider to correctly verify email addresses, you can opt-in to\n                // account linking even when the user is not signed-in.\n                user = userByEmail;\n            }\n            else {\n                // We end up here when we don't have an account with the same [provider].id *BUT*\n                // we do already have an account with the same email address as the one in the\n                // OAuth profile the user has just tried to sign in with.\n                //\n                // We don't want to have two accounts with the same email address, and we don't\n                // want to link them in case it's not safe to do so, so instead we prompt the user\n                // to sign in via email to verify their identity and then link the accounts.\n                throw new OAuthAccountNotLinked(\"Another account already exists with the same e-mail address\", { provider: account.provider });\n            }\n        }\n        else {\n            // If the current user is not logged in and the profile isn't linked to any user\n            // accounts (by email or provider account id)...\n            //\n            // If no account matching the same [provider].id or .email exists, we can\n            // create a new account for the user, link it to the OAuth account and\n            // create a new session for them so they are signed in with it.\n            const { id: _, ...newUser } = { ...profile, emailVerified: null };\n            user = await createUser(newUser);\n        }\n        await events.createUser?.({ user });\n        await linkAccount({ ...account, userId: user.id });\n        await events.linkAccount?.({ user, account, profile });\n        session = useJwtSession\n            ? {}\n            : await createSession({\n                sessionToken: generateSessionToken(),\n                userId: user.id,\n                expires: fromDate(options.session.maxAge),\n            });\n        return { session, user, isNewUser: true };\n    }\n}\n","let USER_AGENT;\nif (typeof navigator === 'undefined' || !navigator.userAgent?.startsWith?.('Mozilla/5.0 ')) {\n    const NAME = 'oauth4webapi';\n    const VERSION = 'v2.4.0';\n    USER_AGENT = `${NAME}/${VERSION}`;\n}\nexport const clockSkew = Symbol();\nexport const clockTolerance = Symbol();\nconst encoder = new TextEncoder();\nconst decoder = new TextDecoder();\nfunction buf(input) {\n    if (typeof input === 'string') {\n        return encoder.encode(input);\n    }\n    return decoder.decode(input);\n}\nconst CHUNK_SIZE = 0x8000;\nfunction encodeBase64Url(input) {\n    if (input instanceof ArrayBuffer) {\n        input = new Uint8Array(input);\n    }\n    const arr = [];\n    for (let i = 0; i < input.byteLength; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, input.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join('')).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\nfunction decodeBase64Url(input) {\n    try {\n        const binary = atob(input.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, ''));\n        const bytes = new Uint8Array(binary.length);\n        for (let i = 0; i < binary.length; i++) {\n            bytes[i] = binary.charCodeAt(i);\n        }\n        return bytes;\n    }\n    catch (cause) {\n        throw new OPE('The input to be decoded is not correctly encoded.', { cause });\n    }\n}\nfunction b64u(input) {\n    if (typeof input === 'string') {\n        return decodeBase64Url(input);\n    }\n    return encodeBase64Url(input);\n}\nclass LRU {\n    constructor(maxSize) {\n        this.cache = new Map();\n        this._cache = new Map();\n        this.maxSize = maxSize;\n    }\n    get(key) {\n        let v = this.cache.get(key);\n        if (v) {\n            return v;\n        }\n        if ((v = this._cache.get(key))) {\n            this.update(key, v);\n            return v;\n        }\n        return undefined;\n    }\n    has(key) {\n        return this.cache.has(key) || this._cache.has(key);\n    }\n    set(key, value) {\n        if (this.cache.has(key)) {\n            this.cache.set(key, value);\n        }\n        else {\n            this.update(key, value);\n        }\n        return this;\n    }\n    delete(key) {\n        if (this.cache.has(key)) {\n            return this.cache.delete(key);\n        }\n        if (this._cache.has(key)) {\n            return this._cache.delete(key);\n        }\n        return false;\n    }\n    update(key, value) {\n        this.cache.set(key, value);\n        if (this.cache.size >= this.maxSize) {\n            this._cache = this.cache;\n            this.cache = new Map();\n        }\n    }\n}\nexport class UnsupportedOperationError extends Error {\n    constructor(message) {\n        super(message ?? 'operation not supported');\n        this.name = this.constructor.name;\n        Error.captureStackTrace?.(this, this.constructor);\n    }\n}\nexport class OperationProcessingError extends Error {\n    constructor(message, options) {\n        super(message, options);\n        this.name = this.constructor.name;\n        Error.captureStackTrace?.(this, this.constructor);\n    }\n}\nconst OPE = OperationProcessingError;\nconst dpopNonces = new LRU(100);\nfunction isCryptoKey(key) {\n    return key instanceof CryptoKey;\n}\nfunction isPrivateKey(key) {\n    return isCryptoKey(key) && key.type === 'private';\n}\nfunction isPublicKey(key) {\n    return isCryptoKey(key) && key.type === 'public';\n}\nconst SUPPORTED_JWS_ALGS = [\n    'PS256',\n    'ES256',\n    'RS256',\n    'PS384',\n    'ES384',\n    'RS384',\n    'PS512',\n    'ES512',\n    'RS512',\n    'EdDSA',\n];\nfunction processDpopNonce(response) {\n    const url = new URL(response.url);\n    if (response.headers.has('dpop-nonce')) {\n        dpopNonces.set(url.origin, response.headers.get('dpop-nonce'));\n    }\n    return response;\n}\nfunction normalizeTyp(value) {\n    return value.toLowerCase().replace(/^application\\//, '');\n}\nfunction isJsonObject(input) {\n    if (input === null || typeof input !== 'object' || Array.isArray(input)) {\n        return false;\n    }\n    return true;\n}\nfunction prepareHeaders(input) {\n    if (input !== undefined && !(input instanceof Headers)) {\n        throw new TypeError('\"options.headers\" must be an instance of Headers');\n    }\n    const headers = new Headers(input);\n    if (USER_AGENT && !headers.has('user-agent')) {\n        headers.set('user-agent', USER_AGENT);\n    }\n    if (headers.has('authorization')) {\n        throw new TypeError('\"options.headers\" must not include the \"authorization\" header name');\n    }\n    if (headers.has('dpop')) {\n        throw new TypeError('\"options.headers\" must not include the \"dpop\" header name');\n    }\n    return headers;\n}\nfunction signal(value) {\n    if (typeof value === 'function') {\n        value = value();\n    }\n    if (!(value instanceof AbortSignal)) {\n        throw new TypeError('\"options.signal\" must return or be an instance of AbortSignal');\n    }\n    return value;\n}\nexport async function discoveryRequest(issuerIdentifier, options) {\n    if (!(issuerIdentifier instanceof URL)) {\n        throw new TypeError('\"issuerIdentifier\" must be an instance of URL');\n    }\n    if (issuerIdentifier.protocol !== 'https:' && issuerIdentifier.protocol !== 'http:') {\n        throw new TypeError('\"issuer.protocol\" must be \"https:\" or \"http:\"');\n    }\n    const url = new URL(issuerIdentifier.href);\n    switch (options?.algorithm) {\n        case undefined:\n        case 'oidc':\n            url.pathname = `${url.pathname}/.well-known/openid-configuration`.replace('//', '/');\n            break;\n        case 'oauth2':\n            if (url.pathname === '/') {\n                url.pathname = `.well-known/oauth-authorization-server`;\n            }\n            else {\n                url.pathname = `.well-known/oauth-authorization-server/${url.pathname}`.replace('//', '/');\n            }\n            break;\n        default:\n            throw new TypeError('\"options.algorithm\" must be \"oidc\" (default), or \"oauth2\"');\n    }\n    const headers = prepareHeaders(options?.headers);\n    headers.set('accept', 'application/json');\n    return fetch(url.href, {\n        headers,\n        method: 'GET',\n        redirect: 'manual',\n        signal: options?.signal ? signal(options.signal) : null,\n    }).then(processDpopNonce);\n}\nfunction validateString(input) {\n    return typeof input === 'string' && input.length !== 0;\n}\nexport async function processDiscoveryResponse(expectedIssuerIdentifier, response) {\n    if (!(expectedIssuerIdentifier instanceof URL)) {\n        throw new TypeError('\"expectedIssuer\" must be an instance of URL');\n    }\n    if (!(response instanceof Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 200) {\n        throw new OPE('\"response\" is not a conform Authorization Server Metadata response');\n    }\n    assertReadableResponse(response);\n    let json;\n    try {\n        json = await response.json();\n    }\n    catch (cause) {\n        throw new OPE('failed to parse \"response\" body as JSON', { cause });\n    }\n    if (!isJsonObject(json)) {\n        throw new OPE('\"response\" body must be a top level object');\n    }\n    if (!validateString(json.issuer)) {\n        throw new OPE('\"response\" body \"issuer\" property must be a non-empty string');\n    }\n    if (new URL(json.issuer).href !== expectedIssuerIdentifier.href) {\n        throw new OPE('\"response\" body \"issuer\" does not match \"expectedIssuer\"');\n    }\n    return json;\n}\nfunction randomBytes() {\n    return b64u(crypto.getRandomValues(new Uint8Array(32)));\n}\nexport function generateRandomCodeVerifier() {\n    return randomBytes();\n}\nexport function generateRandomState() {\n    return randomBytes();\n}\nexport function generateRandomNonce() {\n    return randomBytes();\n}\nexport async function calculatePKCECodeChallenge(codeVerifier) {\n    if (!validateString(codeVerifier)) {\n        throw new TypeError('\"codeVerifier\" must be a non-empty string');\n    }\n    return b64u(await crypto.subtle.digest('SHA-256', buf(codeVerifier)));\n}\nfunction getKeyAndKid(input) {\n    if (input instanceof CryptoKey) {\n        return { key: input };\n    }\n    if (!(input?.key instanceof CryptoKey)) {\n        return {};\n    }\n    if (input.kid !== undefined && !validateString(input.kid)) {\n        throw new TypeError('\"kid\" must be a non-empty string');\n    }\n    return { key: input.key, kid: input.kid };\n}\nfunction formUrlEncode(token) {\n    return encodeURIComponent(token).replace(/%20/g, '+');\n}\nfunction clientSecretBasic(clientId, clientSecret) {\n    const username = formUrlEncode(clientId);\n    const password = formUrlEncode(clientSecret);\n    const credentials = btoa(`${username}:${password}`);\n    return `Basic ${credentials}`;\n}\nfunction psAlg(key) {\n    switch (key.algorithm.hash.name) {\n        case 'SHA-256':\n            return 'PS256';\n        case 'SHA-384':\n            return 'PS384';\n        case 'SHA-512':\n            return 'PS512';\n        default:\n            throw new UnsupportedOperationError('unsupported RsaHashedKeyAlgorithm hash name');\n    }\n}\nfunction rsAlg(key) {\n    switch (key.algorithm.hash.name) {\n        case 'SHA-256':\n            return 'RS256';\n        case 'SHA-384':\n            return 'RS384';\n        case 'SHA-512':\n            return 'RS512';\n        default:\n            throw new UnsupportedOperationError('unsupported RsaHashedKeyAlgorithm hash name');\n    }\n}\nfunction esAlg(key) {\n    switch (key.algorithm.namedCurve) {\n        case 'P-256':\n            return 'ES256';\n        case 'P-384':\n            return 'ES384';\n        case 'P-521':\n            return 'ES512';\n        default:\n            throw new UnsupportedOperationError('unsupported EcKeyAlgorithm namedCurve');\n    }\n}\nfunction keyToJws(key) {\n    switch (key.algorithm.name) {\n        case 'RSA-PSS':\n            return psAlg(key);\n        case 'RSASSA-PKCS1-v1_5':\n            return rsAlg(key);\n        case 'ECDSA':\n            return esAlg(key);\n        case 'Ed25519':\n        case 'Ed448':\n            return 'EdDSA';\n        default:\n            throw new UnsupportedOperationError('unsupported CryptoKey algorithm name');\n    }\n}\nfunction getClockSkew(client) {\n    if (Number.isFinite(client[clockSkew])) {\n        return client[clockSkew];\n    }\n    return 0;\n}\nfunction getClockTolerance(client) {\n    const tolerance = client[clockTolerance];\n    if (Number.isFinite(tolerance) && Math.sign(tolerance) !== -1) {\n        return tolerance;\n    }\n    return 30;\n}\nfunction epochTime() {\n    return Math.floor(Date.now() / 1000);\n}\nfunction clientAssertion(as, client) {\n    const now = epochTime() + getClockSkew(client);\n    return {\n        jti: randomBytes(),\n        aud: [as.issuer, as.token_endpoint],\n        exp: now + 60,\n        iat: now,\n        nbf: now,\n        iss: client.client_id,\n        sub: client.client_id,\n    };\n}\nasync function privateKeyJwt(as, client, key, kid) {\n    return jwt({\n        alg: keyToJws(key),\n        kid,\n    }, clientAssertion(as, client), key);\n}\nfunction assertAs(as) {\n    if (typeof as !== 'object' || as === null) {\n        throw new TypeError('\"as\" must be an object');\n    }\n    if (!validateString(as.issuer)) {\n        throw new TypeError('\"as.issuer\" property must be a non-empty string');\n    }\n    return true;\n}\nfunction assertClient(client) {\n    if (typeof client !== 'object' || client === null) {\n        throw new TypeError('\"client\" must be an object');\n    }\n    if (!validateString(client.client_id)) {\n        throw new TypeError('\"client.client_id\" property must be a non-empty string');\n    }\n    return true;\n}\nfunction assertClientSecret(clientSecret) {\n    if (!validateString(clientSecret)) {\n        throw new TypeError('\"client.client_secret\" property must be a non-empty string');\n    }\n    return clientSecret;\n}\nfunction assertNoClientPrivateKey(clientAuthMethod, clientPrivateKey) {\n    if (clientPrivateKey !== undefined) {\n        throw new TypeError(`\"options.clientPrivateKey\" property must not be provided when ${clientAuthMethod} client authentication method is used.`);\n    }\n}\nfunction assertNoClientSecret(clientAuthMethod, clientSecret) {\n    if (clientSecret !== undefined) {\n        throw new TypeError(`\"client.client_secret\" property must not be provided when ${clientAuthMethod} client authentication method is used.`);\n    }\n}\nasync function clientAuthentication(as, client, body, headers, clientPrivateKey) {\n    body.delete('client_secret');\n    body.delete('client_assertion_type');\n    body.delete('client_assertion');\n    switch (client.token_endpoint_auth_method) {\n        case undefined:\n        case 'client_secret_basic': {\n            assertNoClientPrivateKey('client_secret_basic', clientPrivateKey);\n            headers.set('authorization', clientSecretBasic(client.client_id, assertClientSecret(client.client_secret)));\n            break;\n        }\n        case 'client_secret_post': {\n            assertNoClientPrivateKey('client_secret_post', clientPrivateKey);\n            body.set('client_id', client.client_id);\n            body.set('client_secret', assertClientSecret(client.client_secret));\n            break;\n        }\n        case 'private_key_jwt': {\n            assertNoClientSecret('private_key_jwt', client.client_secret);\n            if (clientPrivateKey === undefined) {\n                throw new TypeError('\"options.clientPrivateKey\" must be provided when \"client.token_endpoint_auth_method\" is \"private_key_jwt\"');\n            }\n            const { key, kid } = getKeyAndKid(clientPrivateKey);\n            if (!isPrivateKey(key)) {\n                throw new TypeError('\"options.clientPrivateKey.key\" must be a private CryptoKey');\n            }\n            body.set('client_id', client.client_id);\n            body.set('client_assertion_type', 'urn:ietf:params:oauth:client-assertion-type:jwt-bearer');\n            body.set('client_assertion', await privateKeyJwt(as, client, key, kid));\n            break;\n        }\n        case 'none': {\n            assertNoClientSecret('none', client.client_secret);\n            assertNoClientPrivateKey('none', clientPrivateKey);\n            body.set('client_id', client.client_id);\n            break;\n        }\n        default:\n            throw new UnsupportedOperationError('unsupported client token_endpoint_auth_method');\n    }\n}\nasync function jwt(header, claimsSet, key) {\n    if (!key.usages.includes('sign')) {\n        throw new TypeError('CryptoKey instances used for signing assertions must include \"sign\" in their \"usages\"');\n    }\n    const input = `${b64u(buf(JSON.stringify(header)))}.${b64u(buf(JSON.stringify(claimsSet)))}`;\n    const signature = b64u(await crypto.subtle.sign(keyToSubtle(key), key, buf(input)));\n    return `${input}.${signature}`;\n}\nexport async function issueRequestObject(as, client, parameters, privateKey) {\n    assertAs(as);\n    assertClient(client);\n    parameters = new URLSearchParams(parameters);\n    const { key, kid } = getKeyAndKid(privateKey);\n    if (!isPrivateKey(key)) {\n        throw new TypeError('\"privateKey.key\" must be a private CryptoKey');\n    }\n    parameters.set('client_id', client.client_id);\n    const now = epochTime() + getClockSkew(client);\n    const claims = {\n        ...Object.fromEntries(parameters.entries()),\n        jti: randomBytes(),\n        aud: as.issuer,\n        exp: now + 60,\n        iat: now,\n        nbf: now,\n        iss: client.client_id,\n    };\n    let resource;\n    if (parameters.has('resource') &&\n        (resource = parameters.getAll('resource')) &&\n        resource.length > 1) {\n        claims.resource = resource;\n    }\n    if (parameters.has('claims')) {\n        const value = parameters.get('claims');\n        if (value === '[object Object]') {\n            throw new OPE('\"claims\" parameter must be passed as a UTF-8 encoded JSON');\n        }\n        try {\n            claims.claims = JSON.parse(value);\n        }\n        catch (cause) {\n            throw new OPE('failed to parse the \"claims\" parameter as JSON', { cause });\n        }\n        if (!isJsonObject(claims.claims)) {\n            throw new OPE('\"claims\" parameter must be a top level object');\n        }\n    }\n    return jwt({\n        alg: keyToJws(key),\n        typ: 'oauth-authz-req+jwt',\n        kid,\n    }, claims, key);\n}\nasync function dpopProofJwt(headers, options, url, htm, clockSkew, accessToken) {\n    const { privateKey, publicKey, nonce = dpopNonces.get(url.origin) } = options;\n    if (!isPrivateKey(privateKey)) {\n        throw new TypeError('\"DPoP.privateKey\" must be a private CryptoKey');\n    }\n    if (!isPublicKey(publicKey)) {\n        throw new TypeError('\"DPoP.publicKey\" must be a public CryptoKey');\n    }\n    if (nonce !== undefined && !validateString(nonce)) {\n        throw new TypeError('\"DPoP.nonce\" must be a non-empty string or undefined');\n    }\n    if (!publicKey.extractable) {\n        throw new TypeError('\"DPoP.publicKey.extractable\" must be true');\n    }\n    const now = epochTime() + clockSkew;\n    const proof = await jwt({\n        alg: keyToJws(privateKey),\n        typ: 'dpop+jwt',\n        jwk: await publicJwk(publicKey),\n    }, {\n        iat: now,\n        jti: randomBytes(),\n        htm,\n        nonce,\n        htu: `${url.origin}${url.pathname}`,\n        ath: accessToken ? b64u(await crypto.subtle.digest('SHA-256', buf(accessToken))) : undefined,\n    }, privateKey);\n    headers.set('dpop', proof);\n}\nlet jwkCache;\nasync function publicJwk(key) {\n    jwkCache || (jwkCache = new WeakMap());\n    if (jwkCache.has(key)) {\n        return jwkCache.get(key);\n    }\n    const { kty, e, n, x, y, crv } = await crypto.subtle.exportKey('jwk', key);\n    const jwk = { kty, e, n, x, y, crv };\n    jwkCache.set(key, jwk);\n    return jwk;\n}\nexport async function pushedAuthorizationRequest(as, client, parameters, options) {\n    assertAs(as);\n    assertClient(client);\n    if (typeof as.pushed_authorization_request_endpoint !== 'string') {\n        throw new TypeError('\"as.pushed_authorization_request_endpoint\" must be a string');\n    }\n    const url = new URL(as.pushed_authorization_request_endpoint);\n    const body = new URLSearchParams(parameters);\n    body.set('client_id', client.client_id);\n    const headers = prepareHeaders(options?.headers);\n    headers.set('accept', 'application/json');\n    if (options?.DPoP !== undefined) {\n        await dpopProofJwt(headers, options.DPoP, url, 'POST', getClockSkew(client));\n    }\n    return authenticatedRequest(as, client, 'POST', url, body, headers, options);\n}\nexport function isOAuth2Error(input) {\n    const value = input;\n    if (typeof value !== 'object' || Array.isArray(value) || value === null) {\n        return false;\n    }\n    return value.error !== undefined;\n}\nfunction unquote(value) {\n    if (value.length >= 2 && value[0] === '\"' && value[value.length - 1] === '\"') {\n        return value.slice(1, -1);\n    }\n    return value;\n}\nconst SPLIT_REGEXP = /((?:,|, )?[0-9a-zA-Z!#$%&'*+-.^_`|~]+=)/;\nconst SCHEMES_REGEXP = /(?:^|, ?)([0-9a-zA-Z!#$%&'*+\\-.^_`|~]+)(?=$|[ ,])/g;\nfunction wwwAuth(scheme, params) {\n    const arr = params.split(SPLIT_REGEXP).slice(1);\n    if (!arr.length) {\n        return { scheme: scheme.toLowerCase(), parameters: {} };\n    }\n    arr[arr.length - 1] = arr[arr.length - 1].replace(/,$/, '');\n    const parameters = {};\n    for (let i = 1; i < arr.length; i += 2) {\n        const idx = i;\n        if (arr[idx][0] === '\"') {\n            while (arr[idx].slice(-1) !== '\"' && ++i < arr.length) {\n                arr[idx] += arr[i];\n            }\n        }\n        const key = arr[idx - 1].replace(/^(?:, ?)|=$/g, '').toLowerCase();\n        parameters[key] = unquote(arr[idx]);\n    }\n    return {\n        scheme: scheme.toLowerCase(),\n        parameters,\n    };\n}\nexport function parseWwwAuthenticateChallenges(response) {\n    if (!(response instanceof Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (!response.headers.has('www-authenticate')) {\n        return undefined;\n    }\n    const header = response.headers.get('www-authenticate');\n    const result = [];\n    for (const { 1: scheme, index } of header.matchAll(SCHEMES_REGEXP)) {\n        result.push([scheme, index]);\n    }\n    if (!result.length) {\n        return undefined;\n    }\n    const challenges = result.map(([scheme, indexOf], i, others) => {\n        const next = others[i + 1];\n        let parameters;\n        if (next) {\n            parameters = header.slice(indexOf, next[1]);\n        }\n        else {\n            parameters = header.slice(indexOf);\n        }\n        return wwwAuth(scheme, parameters);\n    });\n    return challenges;\n}\nexport async function processPushedAuthorizationResponse(as, client, response) {\n    assertAs(as);\n    assertClient(client);\n    if (!(response instanceof Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 201) {\n        let err;\n        if ((err = await handleOAuthBodyError(response))) {\n            return err;\n        }\n        throw new OPE('\"response\" is not a conform Pushed Authorization Request Endpoint response');\n    }\n    assertReadableResponse(response);\n    let json;\n    try {\n        json = await response.json();\n    }\n    catch (cause) {\n        throw new OPE('failed to parse \"response\" body as JSON', { cause });\n    }\n    if (!isJsonObject(json)) {\n        throw new OPE('\"response\" body must be a top level object');\n    }\n    if (!validateString(json.request_uri)) {\n        throw new OPE('\"response\" body \"request_uri\" property must be a non-empty string');\n    }\n    if (typeof json.expires_in !== 'number' || json.expires_in <= 0) {\n        throw new OPE('\"response\" body \"expires_in\" property must be a positive number');\n    }\n    return json;\n}\nexport async function protectedResourceRequest(accessToken, method, url, headers, body, options) {\n    if (!validateString(accessToken)) {\n        throw new TypeError('\"accessToken\" must be a non-empty string');\n    }\n    if (!(url instanceof URL)) {\n        throw new TypeError('\"url\" must be an instance of URL');\n    }\n    headers = prepareHeaders(headers);\n    if (options?.DPoP === undefined) {\n        headers.set('authorization', `Bearer ${accessToken}`);\n    }\n    else {\n        await dpopProofJwt(headers, options.DPoP, url, 'GET', getClockSkew({ [clockSkew]: options?.clockSkew }), accessToken);\n        headers.set('authorization', `DPoP ${accessToken}`);\n    }\n    return fetch(url.href, {\n        body,\n        headers,\n        method,\n        redirect: 'manual',\n        signal: options?.signal ? signal(options.signal) : null,\n    }).then(processDpopNonce);\n}\nexport async function userInfoRequest(as, client, accessToken, options) {\n    assertAs(as);\n    assertClient(client);\n    if (typeof as.userinfo_endpoint !== 'string') {\n        throw new TypeError('\"as.userinfo_endpoint\" must be a string');\n    }\n    const url = new URL(as.userinfo_endpoint);\n    const headers = prepareHeaders(options?.headers);\n    if (client.userinfo_signed_response_alg) {\n        headers.set('accept', 'application/jwt');\n    }\n    else {\n        headers.set('accept', 'application/json');\n        headers.append('accept', 'application/jwt');\n    }\n    return protectedResourceRequest(accessToken, 'GET', url, headers, null, {\n        ...options,\n        clockSkew: getClockSkew(client),\n    });\n}\nlet jwksCache;\nasync function getPublicSigKeyFromIssuerJwksUri(as, options, header) {\n    const { alg, kid } = header;\n    checkSupportedJwsAlg(alg);\n    let jwks;\n    let age;\n    jwksCache || (jwksCache = new WeakMap());\n    if (jwksCache.has(as)) {\n        ;\n        ({ jwks, age } = jwksCache.get(as));\n        if (age >= 300) {\n            jwksCache.delete(as);\n            return getPublicSigKeyFromIssuerJwksUri(as, options, header);\n        }\n    }\n    else {\n        jwks = await jwksRequest(as, options).then(processJwksResponse);\n        age = 0;\n        jwksCache.set(as, {\n            jwks,\n            iat: epochTime(),\n            get age() {\n                return epochTime() - this.iat;\n            },\n        });\n    }\n    let kty;\n    switch (alg.slice(0, 2)) {\n        case 'RS':\n        case 'PS':\n            kty = 'RSA';\n            break;\n        case 'ES':\n            kty = 'EC';\n            break;\n        case 'Ed':\n            kty = 'OKP';\n            break;\n        default:\n            throw new UnsupportedOperationError();\n    }\n    const candidates = jwks.keys.filter((jwk) => {\n        if (jwk.kty !== kty) {\n            return false;\n        }\n        if (kid !== undefined && kid !== jwk.kid) {\n            return false;\n        }\n        if (jwk.alg !== undefined && alg !== jwk.alg) {\n            return false;\n        }\n        if (jwk.use !== undefined && jwk.use !== 'sig') {\n            return false;\n        }\n        if (jwk.key_ops?.includes('verify') === false) {\n            return false;\n        }\n        switch (true) {\n            case alg === 'ES256' && jwk.crv !== 'P-256':\n            case alg === 'ES384' && jwk.crv !== 'P-384':\n            case alg === 'ES512' && jwk.crv !== 'P-521':\n            case alg === 'EdDSA' && !(jwk.crv === 'Ed25519' || jwk.crv === 'Ed448'):\n                return false;\n        }\n        return true;\n    });\n    const { 0: jwk, length } = candidates;\n    if (!length) {\n        if (age >= 60) {\n            jwksCache.delete(as);\n            return getPublicSigKeyFromIssuerJwksUri(as, options, header);\n        }\n        throw new OPE('error when selecting a JWT verification key, no applicable keys found');\n    }\n    else if (length !== 1) {\n        throw new OPE('error when selecting a JWT verification key, multiple applicable keys found, a \"kid\" JWT Header Parameter is required');\n    }\n    const key = await importJwk(alg, jwk);\n    if (key.type !== 'public') {\n        throw new OPE('jwks_uri must only contain public keys');\n    }\n    return key;\n}\nexport const skipSubjectCheck = Symbol();\nfunction getContentType(response) {\n    return response.headers.get('content-type')?.split(';')[0];\n}\nexport async function processUserInfoResponse(as, client, expectedSubject, response) {\n    assertAs(as);\n    assertClient(client);\n    if (!(response instanceof Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 200) {\n        throw new OPE('\"response\" is not a conform UserInfo Endpoint response');\n    }\n    let json;\n    if (getContentType(response) === 'application/jwt') {\n        assertReadableResponse(response);\n        const { claims } = await validateJwt(await response.text(), checkSigningAlgorithm.bind(undefined, client.userinfo_signed_response_alg, as.userinfo_signing_alg_values_supported), noSignatureCheck, getClockSkew(client), getClockTolerance(client))\n            .then(validateOptionalAudience.bind(undefined, client.client_id))\n            .then(validateOptionalIssuer.bind(undefined, as.issuer));\n        json = claims;\n    }\n    else {\n        if (client.userinfo_signed_response_alg) {\n            throw new OPE('JWT UserInfo Response expected');\n        }\n        assertReadableResponse(response);\n        try {\n            json = await response.json();\n        }\n        catch (cause) {\n            throw new OPE('failed to parse \"response\" body as JSON', { cause });\n        }\n    }\n    if (!isJsonObject(json)) {\n        throw new OPE('\"response\" body must be a top level object');\n    }\n    if (!validateString(json.sub)) {\n        throw new OPE('\"response\" body \"sub\" property must be a non-empty string');\n    }\n    switch (expectedSubject) {\n        case skipSubjectCheck:\n            break;\n        default:\n            if (!validateString(expectedSubject)) {\n                throw new OPE('\"expectedSubject\" must be a non-empty string');\n            }\n            if (json.sub !== expectedSubject) {\n                throw new OPE('unexpected \"response\" body \"sub\" value');\n            }\n    }\n    return json;\n}\nasync function authenticatedRequest(as, client, method, url, body, headers, options) {\n    await clientAuthentication(as, client, body, headers, options?.clientPrivateKey);\n    headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n    return fetch(url.href, {\n        body,\n        headers,\n        method,\n        redirect: 'manual',\n        signal: options?.signal ? signal(options.signal) : null,\n    }).then(processDpopNonce);\n}\nasync function tokenEndpointRequest(as, client, grantType, parameters, options) {\n    if (typeof as.token_endpoint !== 'string') {\n        throw new TypeError('\"as.token_endpoint\" must be a string');\n    }\n    const url = new URL(as.token_endpoint);\n    parameters.set('grant_type', grantType);\n    const headers = prepareHeaders(options?.headers);\n    headers.set('accept', 'application/json');\n    if (options?.DPoP !== undefined) {\n        await dpopProofJwt(headers, options.DPoP, url, 'POST', getClockSkew(client));\n    }\n    return authenticatedRequest(as, client, 'POST', url, parameters, headers, options);\n}\nexport async function refreshTokenGrantRequest(as, client, refreshToken, options) {\n    assertAs(as);\n    assertClient(client);\n    if (!validateString(refreshToken)) {\n        throw new TypeError('\"refreshToken\" must be a non-empty string');\n    }\n    const parameters = new URLSearchParams(options?.additionalParameters);\n    parameters.set('refresh_token', refreshToken);\n    return tokenEndpointRequest(as, client, 'refresh_token', parameters, options);\n}\nconst idTokenClaims = new WeakMap();\nexport function getValidatedIdTokenClaims(ref) {\n    if (!ref.id_token) {\n        return undefined;\n    }\n    const claims = idTokenClaims.get(ref);\n    if (!claims) {\n        throw new TypeError('\"ref\" was already garbage collected or did not resolve from the proper sources');\n    }\n    return claims;\n}\nasync function processGenericAccessTokenResponse(as, client, response, ignoreIdToken = false, ignoreRefreshToken = false) {\n    assertAs(as);\n    assertClient(client);\n    if (!(response instanceof Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 200) {\n        let err;\n        if ((err = await handleOAuthBodyError(response))) {\n            return err;\n        }\n        throw new OPE('\"response\" is not a conform Token Endpoint response');\n    }\n    assertReadableResponse(response);\n    let json;\n    try {\n        json = await response.json();\n    }\n    catch (cause) {\n        throw new OPE('failed to parse \"response\" body as JSON', { cause });\n    }\n    if (!isJsonObject(json)) {\n        throw new OPE('\"response\" body must be a top level object');\n    }\n    if (!validateString(json.access_token)) {\n        throw new OPE('\"response\" body \"access_token\" property must be a non-empty string');\n    }\n    if (!validateString(json.token_type)) {\n        throw new OPE('\"response\" body \"token_type\" property must be a non-empty string');\n    }\n    json.token_type = json.token_type.toLowerCase();\n    if (json.token_type !== 'dpop' && json.token_type !== 'bearer') {\n        throw new UnsupportedOperationError('unsupported `token_type` value');\n    }\n    if (json.expires_in !== undefined &&\n        (typeof json.expires_in !== 'number' || json.expires_in <= 0)) {\n        throw new OPE('\"response\" body \"expires_in\" property must be a positive number');\n    }\n    if (!ignoreRefreshToken &&\n        json.refresh_token !== undefined &&\n        !validateString(json.refresh_token)) {\n        throw new OPE('\"response\" body \"refresh_token\" property must be a non-empty string');\n    }\n    if (json.scope !== undefined && typeof json.scope !== 'string') {\n        throw new OPE('\"response\" body \"scope\" property must be a string');\n    }\n    if (!ignoreIdToken) {\n        if (json.id_token !== undefined && !validateString(json.id_token)) {\n            throw new OPE('\"response\" body \"id_token\" property must be a non-empty string');\n        }\n        if (json.id_token) {\n            const { claims } = await validateJwt(json.id_token, checkSigningAlgorithm.bind(undefined, client.id_token_signed_response_alg, as.id_token_signing_alg_values_supported), noSignatureCheck, getClockSkew(client), getClockTolerance(client))\n                .then(validatePresence.bind(undefined, ['aud', 'exp', 'iat', 'iss', 'sub']))\n                .then(validateIssuer.bind(undefined, as.issuer))\n                .then(validateAudience.bind(undefined, client.client_id));\n            if (Array.isArray(claims.aud) && claims.aud.length !== 1 && claims.azp !== client.client_id) {\n                throw new OPE('unexpected ID Token \"azp\" (authorized party) claim value');\n            }\n            if (client.require_auth_time && typeof claims.auth_time !== 'number') {\n                throw new OPE('unexpected ID Token \"auth_time\" (authentication time) claim value');\n            }\n            idTokenClaims.set(json, claims);\n        }\n    }\n    return json;\n}\nexport async function processRefreshTokenResponse(as, client, response) {\n    return processGenericAccessTokenResponse(as, client, response);\n}\nfunction validateOptionalAudience(expected, result) {\n    if (result.claims.aud !== undefined) {\n        return validateAudience(expected, result);\n    }\n    return result;\n}\nfunction validateAudience(expected, result) {\n    if (Array.isArray(result.claims.aud)) {\n        if (!result.claims.aud.includes(expected)) {\n            throw new OPE('unexpected JWT \"aud\" (audience) claim value');\n        }\n    }\n    else if (result.claims.aud !== expected) {\n        throw new OPE('unexpected JWT \"aud\" (audience) claim value');\n    }\n    return result;\n}\nfunction validateOptionalIssuer(expected, result) {\n    if (result.claims.iss !== undefined) {\n        return validateIssuer(expected, result);\n    }\n    return result;\n}\nfunction validateIssuer(expected, result) {\n    if (result.claims.iss !== expected) {\n        throw new OPE('unexpected JWT \"iss\" (issuer) claim value');\n    }\n    return result;\n}\nconst branded = new WeakSet();\nfunction brand(searchParams) {\n    branded.add(searchParams);\n    return searchParams;\n}\nexport async function authorizationCodeGrantRequest(as, client, callbackParameters, redirectUri, codeVerifier, options) {\n    assertAs(as);\n    assertClient(client);\n    if (!branded.has(callbackParameters)) {\n        throw new TypeError('\"callbackParameters\" must be an instance of URLSearchParams obtained from \"validateAuthResponse()\", or \"validateJwtAuthResponse()');\n    }\n    if (!validateString(redirectUri)) {\n        throw new TypeError('\"redirectUri\" must be a non-empty string');\n    }\n    if (!validateString(codeVerifier)) {\n        throw new TypeError('\"codeVerifier\" must be a non-empty string');\n    }\n    const code = getURLSearchParameter(callbackParameters, 'code');\n    if (!code) {\n        throw new OPE('no authorization code in \"callbackParameters\"');\n    }\n    const parameters = new URLSearchParams(options?.additionalParameters);\n    parameters.set('redirect_uri', redirectUri);\n    parameters.set('code_verifier', codeVerifier);\n    parameters.set('code', code);\n    return tokenEndpointRequest(as, client, 'authorization_code', parameters, options);\n}\nconst claimNames = {\n    aud: 'audience',\n    exp: 'expiration time',\n    iat: 'issued at',\n    iss: 'issuer',\n    sub: 'subject',\n};\nfunction validatePresence(required, result) {\n    for (const claim of required) {\n        if (result.claims[claim] === undefined) {\n            throw new OPE(`JWT \"${claim}\" (${claimNames[claim]}) claim missing`);\n        }\n    }\n    return result;\n}\nexport const expectNoNonce = Symbol();\nexport const skipAuthTimeCheck = Symbol();\nexport async function processAuthorizationCodeOpenIDResponse(as, client, response, expectedNonce, maxAge) {\n    const result = await processGenericAccessTokenResponse(as, client, response);\n    if (isOAuth2Error(result)) {\n        return result;\n    }\n    if (!validateString(result.id_token)) {\n        throw new OPE('\"response\" body \"id_token\" property must be a non-empty string');\n    }\n    maxAge ?? (maxAge = client.default_max_age ?? skipAuthTimeCheck);\n    const claims = getValidatedIdTokenClaims(result);\n    if ((client.require_auth_time || maxAge !== skipAuthTimeCheck) &&\n        claims.auth_time === undefined) {\n        throw new OPE('ID Token \"auth_time\" (authentication time) claim missing');\n    }\n    if (maxAge !== skipAuthTimeCheck) {\n        if (typeof maxAge !== 'number' || maxAge < 0) {\n            throw new TypeError('\"options.max_age\" must be a non-negative number');\n        }\n        const now = epochTime() + getClockSkew(client);\n        const tolerance = getClockTolerance(client);\n        if (claims.auth_time + maxAge < now - tolerance) {\n            throw new OPE('too much time has elapsed since the last End-User authentication');\n        }\n    }\n    switch (expectedNonce) {\n        case undefined:\n        case expectNoNonce:\n            if (claims.nonce !== undefined) {\n                throw new OPE('unexpected ID Token \"nonce\" claim value');\n            }\n            break;\n        default:\n            if (!validateString(expectedNonce)) {\n                throw new TypeError('\"expectedNonce\" must be a non-empty string');\n            }\n            if (claims.nonce === undefined) {\n                throw new OPE('ID Token \"nonce\" claim missing');\n            }\n            if (claims.nonce !== expectedNonce) {\n                throw new OPE('unexpected ID Token \"nonce\" claim value');\n            }\n    }\n    return result;\n}\nexport async function processAuthorizationCodeOAuth2Response(as, client, response) {\n    const result = await processGenericAccessTokenResponse(as, client, response, true);\n    if (isOAuth2Error(result)) {\n        return result;\n    }\n    if (result.id_token !== undefined) {\n        if (typeof result.id_token === 'string' && result.id_token.length) {\n            throw new OPE('Unexpected ID Token returned, use processAuthorizationCodeOpenIDResponse() for OpenID Connect callback processing');\n        }\n        delete result.id_token;\n    }\n    return result;\n}\nfunction checkJwtType(expected, result) {\n    if (typeof result.header.typ !== 'string' || normalizeTyp(result.header.typ) !== expected) {\n        throw new OPE('unexpected JWT \"typ\" header parameter value');\n    }\n    return result;\n}\nexport async function clientCredentialsGrantRequest(as, client, parameters, options) {\n    assertAs(as);\n    assertClient(client);\n    return tokenEndpointRequest(as, client, 'client_credentials', new URLSearchParams(parameters), options);\n}\nexport async function processClientCredentialsResponse(as, client, response) {\n    const result = await processGenericAccessTokenResponse(as, client, response, true, true);\n    if (isOAuth2Error(result)) {\n        return result;\n    }\n    return result;\n}\nexport async function revocationRequest(as, client, token, options) {\n    assertAs(as);\n    assertClient(client);\n    if (!validateString(token)) {\n        throw new TypeError('\"token\" must be a non-empty string');\n    }\n    if (typeof as.revocation_endpoint !== 'string') {\n        throw new TypeError('\"as.revocation_endpoint\" must be a string');\n    }\n    const url = new URL(as.revocation_endpoint);\n    const body = new URLSearchParams(options?.additionalParameters);\n    body.set('token', token);\n    const headers = prepareHeaders(options?.headers);\n    headers.delete('accept');\n    return authenticatedRequest(as, client, 'POST', url, body, headers, options);\n}\nexport async function processRevocationResponse(response) {\n    if (!(response instanceof Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 200) {\n        let err;\n        if ((err = await handleOAuthBodyError(response))) {\n            return err;\n        }\n        throw new OPE('\"response\" is not a conform Revocation Endpoint response');\n    }\n    return undefined;\n}\nfunction assertReadableResponse(response) {\n    if (response.bodyUsed) {\n        throw new TypeError('\"response\" body has been used already');\n    }\n}\nexport async function introspectionRequest(as, client, token, options) {\n    assertAs(as);\n    assertClient(client);\n    if (!validateString(token)) {\n        throw new TypeError('\"token\" must be a non-empty string');\n    }\n    if (typeof as.introspection_endpoint !== 'string') {\n        throw new TypeError('\"as.introspection_endpoint\" must be a string');\n    }\n    const url = new URL(as.introspection_endpoint);\n    const body = new URLSearchParams(options?.additionalParameters);\n    body.set('token', token);\n    const headers = prepareHeaders(options?.headers);\n    if (options?.requestJwtResponse ?? client.introspection_signed_response_alg) {\n        headers.set('accept', 'application/token-introspection+jwt');\n    }\n    else {\n        headers.set('accept', 'application/json');\n    }\n    return authenticatedRequest(as, client, 'POST', url, body, headers, options);\n}\nexport async function processIntrospectionResponse(as, client, response) {\n    assertAs(as);\n    assertClient(client);\n    if (!(response instanceof Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 200) {\n        let err;\n        if ((err = await handleOAuthBodyError(response))) {\n            return err;\n        }\n        throw new OPE('\"response\" is not a conform Introspection Endpoint response');\n    }\n    let json;\n    if (getContentType(response) === 'application/token-introspection+jwt') {\n        assertReadableResponse(response);\n        const { claims } = await validateJwt(await response.text(), checkSigningAlgorithm.bind(undefined, client.introspection_signed_response_alg, as.introspection_signing_alg_values_supported), noSignatureCheck, getClockSkew(client), getClockTolerance(client))\n            .then(checkJwtType.bind(undefined, 'token-introspection+jwt'))\n            .then(validatePresence.bind(undefined, ['aud', 'iat', 'iss']))\n            .then(validateIssuer.bind(undefined, as.issuer))\n            .then(validateAudience.bind(undefined, client.client_id));\n        json = claims.token_introspection;\n        if (!isJsonObject(json)) {\n            throw new OPE('JWT \"token_introspection\" claim must be a JSON object');\n        }\n    }\n    else {\n        assertReadableResponse(response);\n        try {\n            json = await response.json();\n        }\n        catch (cause) {\n            throw new OPE('failed to parse \"response\" body as JSON', { cause });\n        }\n        if (!isJsonObject(json)) {\n            throw new OPE('\"response\" body must be a top level object');\n        }\n    }\n    if (typeof json.active !== 'boolean') {\n        throw new OPE('\"response\" body \"active\" property must be a boolean');\n    }\n    return json;\n}\nasync function jwksRequest(as, options) {\n    assertAs(as);\n    if (typeof as.jwks_uri !== 'string') {\n        throw new TypeError('\"as.jwks_uri\" must be a string');\n    }\n    const url = new URL(as.jwks_uri);\n    const headers = prepareHeaders(options?.headers);\n    headers.set('accept', 'application/json');\n    headers.append('accept', 'application/jwk-set+json');\n    return fetch(url.href, {\n        headers,\n        method: 'GET',\n        redirect: 'manual',\n        signal: options?.signal ? signal(options.signal) : null,\n    }).then(processDpopNonce);\n}\nasync function processJwksResponse(response) {\n    if (!(response instanceof Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 200) {\n        throw new OPE('\"response\" is not a conform JSON Web Key Set response');\n    }\n    assertReadableResponse(response);\n    let json;\n    try {\n        json = await response.json();\n    }\n    catch (cause) {\n        throw new OPE('failed to parse \"response\" body as JSON', { cause });\n    }\n    if (!isJsonObject(json)) {\n        throw new OPE('\"response\" body must be a top level object');\n    }\n    if (!Array.isArray(json.keys)) {\n        throw new OPE('\"response\" body \"keys\" property must be an array');\n    }\n    if (!Array.prototype.every.call(json.keys, isJsonObject)) {\n        throw new OPE('\"response\" body \"keys\" property members must be JWK formatted objects');\n    }\n    return json;\n}\nasync function handleOAuthBodyError(response) {\n    if (response.status > 399 && response.status < 500) {\n        assertReadableResponse(response);\n        try {\n            const json = await response.json();\n            if (isJsonObject(json) && typeof json.error === 'string' && json.error.length) {\n                if (json.error_description !== undefined && typeof json.error_description !== 'string') {\n                    delete json.error_description;\n                }\n                if (json.error_uri !== undefined && typeof json.error_uri !== 'string') {\n                    delete json.error_uri;\n                }\n                if (json.algs !== undefined && typeof json.algs !== 'string') {\n                    delete json.algs;\n                }\n                if (json.scope !== undefined && typeof json.scope !== 'string') {\n                    delete json.scope;\n                }\n                return json;\n            }\n        }\n        catch { }\n    }\n    return undefined;\n}\nfunction checkSupportedJwsAlg(alg) {\n    if (!SUPPORTED_JWS_ALGS.includes(alg)) {\n        throw new UnsupportedOperationError('unsupported JWS \"alg\" identifier');\n    }\n    return alg;\n}\nfunction checkRsaKeyAlgorithm(algorithm) {\n    if (typeof algorithm.modulusLength !== 'number' || algorithm.modulusLength < 2048) {\n        throw new OPE(`${algorithm.name} modulusLength must be at least 2048 bits`);\n    }\n}\nfunction ecdsaHashName(namedCurve) {\n    switch (namedCurve) {\n        case 'P-256':\n            return 'SHA-256';\n        case 'P-384':\n            return 'SHA-384';\n        case 'P-521':\n            return 'SHA-512';\n        default:\n            throw new UnsupportedOperationError();\n    }\n}\nfunction keyToSubtle(key) {\n    switch (key.algorithm.name) {\n        case 'ECDSA':\n            return {\n                name: key.algorithm.name,\n                hash: ecdsaHashName(key.algorithm.namedCurve),\n            };\n        case 'RSA-PSS': {\n            checkRsaKeyAlgorithm(key.algorithm);\n            switch (key.algorithm.hash.name) {\n                case 'SHA-256':\n                case 'SHA-384':\n                case 'SHA-512':\n                    return {\n                        name: key.algorithm.name,\n                        saltLength: parseInt(key.algorithm.hash.name.slice(-3), 10) >> 3,\n                    };\n                default:\n                    throw new UnsupportedOperationError();\n            }\n        }\n        case 'RSASSA-PKCS1-v1_5':\n            checkRsaKeyAlgorithm(key.algorithm);\n            return key.algorithm.name;\n        case 'Ed448':\n        case 'Ed25519':\n            return key.algorithm.name;\n    }\n    throw new UnsupportedOperationError();\n}\nconst noSignatureCheck = Symbol();\nasync function validateJwt(jws, checkAlg, getKey, clockSkew, clockTolerance) {\n    const { 0: protectedHeader, 1: payload, 2: encodedSignature, length } = jws.split('.');\n    if (length === 5) {\n        throw new UnsupportedOperationError('JWE structure JWTs are not supported');\n    }\n    if (length !== 3) {\n        throw new OPE('Invalid JWT');\n    }\n    let header;\n    try {\n        header = JSON.parse(buf(b64u(protectedHeader)));\n    }\n    catch (cause) {\n        throw new OPE('failed to parse JWT Header body as base64url encoded JSON', { cause });\n    }\n    if (!isJsonObject(header)) {\n        throw new OPE('JWT Header must be a top level object');\n    }\n    checkAlg(header);\n    if (header.crit !== undefined) {\n        throw new OPE('unexpected JWT \"crit\" header parameter');\n    }\n    const signature = b64u(encodedSignature);\n    if (getKey !== noSignatureCheck) {\n        const key = await getKey(header);\n        const input = `${protectedHeader}.${payload}`;\n        const verified = await crypto.subtle.verify(keyToSubtle(key), key, signature, buf(input));\n        if (!verified) {\n            throw new OPE('JWT signature verification failed');\n        }\n    }\n    let claims;\n    try {\n        claims = JSON.parse(buf(b64u(payload)));\n    }\n    catch (cause) {\n        throw new OPE('failed to parse JWT Payload body as base64url encoded JSON', { cause });\n    }\n    if (!isJsonObject(claims)) {\n        throw new OPE('JWT Payload must be a top level object');\n    }\n    const now = epochTime() + clockSkew;\n    if (claims.exp !== undefined) {\n        if (typeof claims.exp !== 'number') {\n            throw new OPE('unexpected JWT \"exp\" (expiration time) claim type');\n        }\n        if (claims.exp <= now - clockTolerance) {\n            throw new OPE('unexpected JWT \"exp\" (expiration time) claim value, timestamp is <= now()');\n        }\n    }\n    if (claims.iat !== undefined) {\n        if (typeof claims.iat !== 'number') {\n            throw new OPE('unexpected JWT \"iat\" (issued at) claim type');\n        }\n    }\n    if (claims.iss !== undefined) {\n        if (typeof claims.iss !== 'string') {\n            throw new OPE('unexpected JWT \"iss\" (issuer) claim type');\n        }\n    }\n    if (claims.nbf !== undefined) {\n        if (typeof claims.nbf !== 'number') {\n            throw new OPE('unexpected JWT \"nbf\" (not before) claim type');\n        }\n        if (claims.nbf > now + clockTolerance) {\n            throw new OPE('unexpected JWT \"nbf\" (not before) claim value, timestamp is > now()');\n        }\n    }\n    if (claims.aud !== undefined) {\n        if (typeof claims.aud !== 'string' && !Array.isArray(claims.aud)) {\n            throw new OPE('unexpected JWT \"aud\" (audience) claim type');\n        }\n    }\n    return { header, claims, signature };\n}\nexport async function validateJwtAuthResponse(as, client, parameters, expectedState, options) {\n    assertAs(as);\n    assertClient(client);\n    if (parameters instanceof URL) {\n        parameters = parameters.searchParams;\n    }\n    if (!(parameters instanceof URLSearchParams)) {\n        throw new TypeError('\"parameters\" must be an instance of URLSearchParams, or URL');\n    }\n    const response = getURLSearchParameter(parameters, 'response');\n    if (!response) {\n        throw new OPE('\"parameters\" does not contain a JARM response');\n    }\n    if (typeof as.jwks_uri !== 'string') {\n        throw new TypeError('\"as.jwks_uri\" must be a string');\n    }\n    const { claims } = await validateJwt(response, checkSigningAlgorithm.bind(undefined, client.authorization_signed_response_alg, as.authorization_signing_alg_values_supported), getPublicSigKeyFromIssuerJwksUri.bind(undefined, as, options), getClockSkew(client), getClockTolerance(client))\n        .then(validatePresence.bind(undefined, ['aud', 'exp', 'iss']))\n        .then(validateIssuer.bind(undefined, as.issuer))\n        .then(validateAudience.bind(undefined, client.client_id));\n    const result = new URLSearchParams();\n    for (const [key, value] of Object.entries(claims)) {\n        if (typeof value === 'string' && key !== 'aud') {\n            result.set(key, value);\n        }\n    }\n    return validateAuthResponse(as, client, result, expectedState);\n}\nfunction checkSigningAlgorithm(client, issuer, header) {\n    if (client !== undefined) {\n        if (header.alg !== client) {\n            throw new OPE('unexpected JWT \"alg\" header parameter');\n        }\n        return;\n    }\n    if (Array.isArray(issuer)) {\n        if (!issuer.includes(header.alg)) {\n            throw new OPE('unexpected JWT \"alg\" header parameter');\n        }\n        return;\n    }\n    if (header.alg !== 'RS256') {\n        throw new OPE('unexpected JWT \"alg\" header parameter');\n    }\n}\nfunction getURLSearchParameter(parameters, name) {\n    const { 0: value, length } = parameters.getAll(name);\n    if (length > 1) {\n        throw new OPE(`\"${name}\" parameter must be provided only once`);\n    }\n    return value;\n}\nexport const skipStateCheck = Symbol();\nexport const expectNoState = Symbol();\nexport function validateAuthResponse(as, client, parameters, expectedState) {\n    assertAs(as);\n    assertClient(client);\n    if (parameters instanceof URL) {\n        parameters = parameters.searchParams;\n    }\n    if (!(parameters instanceof URLSearchParams)) {\n        throw new TypeError('\"parameters\" must be an instance of URLSearchParams, or URL');\n    }\n    if (getURLSearchParameter(parameters, 'response')) {\n        throw new OPE('\"parameters\" contains a JARM response, use validateJwtAuthResponse() instead of validateAuthResponse()');\n    }\n    const iss = getURLSearchParameter(parameters, 'iss');\n    const state = getURLSearchParameter(parameters, 'state');\n    if (!iss && as.authorization_response_iss_parameter_supported) {\n        throw new OPE('response parameter \"iss\" (issuer) missing');\n    }\n    if (iss && iss !== as.issuer) {\n        throw new OPE('unexpected \"iss\" (issuer) response parameter value');\n    }\n    switch (expectedState) {\n        case undefined:\n        case expectNoState:\n            if (state !== undefined) {\n                throw new OPE('unexpected \"state\" response parameter encountered');\n            }\n            break;\n        case skipStateCheck:\n            break;\n        default:\n            if (!validateString(expectedState)) {\n                throw new OPE('\"expectedState\" must be a non-empty string');\n            }\n            if (state === undefined) {\n                throw new OPE('response parameter \"state\" missing');\n            }\n            if (state !== expectedState) {\n                throw new OPE('unexpected \"state\" response parameter value');\n            }\n    }\n    const error = getURLSearchParameter(parameters, 'error');\n    if (error) {\n        return {\n            error,\n            error_description: getURLSearchParameter(parameters, 'error_description'),\n            error_uri: getURLSearchParameter(parameters, 'error_uri'),\n        };\n    }\n    const id_token = getURLSearchParameter(parameters, 'id_token');\n    const token = getURLSearchParameter(parameters, 'token');\n    if (id_token !== undefined || token !== undefined) {\n        throw new UnsupportedOperationError('implicit and hybrid flows are not supported');\n    }\n    return brand(new URLSearchParams(parameters));\n}\nfunction algToSubtle(alg, crv) {\n    switch (alg) {\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            return { name: 'RSA-PSS', hash: `SHA-${alg.slice(-3)}` };\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            return { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${alg.slice(-3)}` };\n        case 'ES256':\n        case 'ES384':\n            return { name: 'ECDSA', namedCurve: `P-${alg.slice(-3)}` };\n        case 'ES512':\n            return { name: 'ECDSA', namedCurve: 'P-521' };\n        case 'EdDSA': {\n            switch (crv) {\n                case 'Ed25519':\n                case 'Ed448':\n                    return crv;\n                default:\n                    throw new UnsupportedOperationError();\n            }\n        }\n        default:\n            throw new UnsupportedOperationError();\n    }\n}\nasync function importJwk(alg, jwk) {\n    const { ext, key_ops, use, ...key } = jwk;\n    return crypto.subtle.importKey('jwk', key, algToSubtle(alg, jwk.crv), true, ['verify']);\n}\nexport async function deviceAuthorizationRequest(as, client, parameters, options) {\n    assertAs(as);\n    assertClient(client);\n    if (typeof as.device_authorization_endpoint !== 'string') {\n        throw new TypeError('\"as.device_authorization_endpoint\" must be a string');\n    }\n    const url = new URL(as.device_authorization_endpoint);\n    const body = new URLSearchParams(parameters);\n    body.set('client_id', client.client_id);\n    const headers = prepareHeaders(options?.headers);\n    headers.set('accept', 'application/json');\n    return authenticatedRequest(as, client, 'POST', url, body, headers, options);\n}\nexport async function processDeviceAuthorizationResponse(as, client, response) {\n    assertAs(as);\n    assertClient(client);\n    if (!(response instanceof Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 200) {\n        let err;\n        if ((err = await handleOAuthBodyError(response))) {\n            return err;\n        }\n        throw new OPE('\"response\" is not a conform Device Authorization Endpoint response');\n    }\n    assertReadableResponse(response);\n    let json;\n    try {\n        json = await response.json();\n    }\n    catch (cause) {\n        throw new OPE('failed to parse \"response\" body as JSON', { cause });\n    }\n    if (!isJsonObject(json)) {\n        throw new OPE('\"response\" body must be a top level object');\n    }\n    if (!validateString(json.device_code)) {\n        throw new OPE('\"response\" body \"device_code\" property must be a non-empty string');\n    }\n    if (!validateString(json.user_code)) {\n        throw new OPE('\"response\" body \"user_code\" property must be a non-empty string');\n    }\n    if (!validateString(json.verification_uri)) {\n        throw new OPE('\"response\" body \"verification_uri\" property must be a non-empty string');\n    }\n    if (typeof json.expires_in !== 'number' || json.expires_in <= 0) {\n        throw new OPE('\"response\" body \"expires_in\" property must be a positive number');\n    }\n    if (json.verification_uri_complete !== undefined &&\n        !validateString(json.verification_uri_complete)) {\n        throw new OPE('\"response\" body \"verification_uri_complete\" property must be a non-empty string');\n    }\n    if (json.interval !== undefined && (typeof json.interval !== 'number' || json.interval <= 0)) {\n        throw new OPE('\"response\" body \"interval\" property must be a positive number');\n    }\n    return json;\n}\nexport async function deviceCodeGrantRequest(as, client, deviceCode, options) {\n    assertAs(as);\n    assertClient(client);\n    if (!validateString(deviceCode)) {\n        throw new TypeError('\"deviceCode\" must be a non-empty string');\n    }\n    const parameters = new URLSearchParams(options?.additionalParameters);\n    parameters.set('device_code', deviceCode);\n    return tokenEndpointRequest(as, client, 'urn:ietf:params:oauth:grant-type:device_code', parameters, options);\n}\nexport async function processDeviceCodeResponse(as, client, response) {\n    return processGenericAccessTokenResponse(as, client, response);\n}\nexport async function generateKeyPair(alg, options) {\n    if (!validateString(alg)) {\n        throw new TypeError('\"alg\" must be a non-empty string');\n    }\n    const algorithm = algToSubtle(alg, alg === 'EdDSA' ? options?.crv ?? 'Ed25519' : undefined);\n    if (alg.startsWith('PS') || alg.startsWith('RS')) {\n        Object.assign(algorithm, {\n            modulusLength: options?.modulusLength ?? 2048,\n            publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n        });\n    }\n    return (crypto.subtle.generateKey(algorithm, options?.extractable ?? false, ['sign', 'verify']));\n}\n","import * as jose from \"jose\";\nimport * as o from \"oauth4webapi\";\nimport { InvalidCheck } from \"../../errors.js\";\nimport { decode, encode } from \"../../jwt.js\";\n/** Returns a signed cookie. */\nexport async function signCookie(type, value, maxAge, options, data) {\n    const { cookies, logger } = options;\n    logger.debug(`CREATE_${type.toUpperCase()}`, { value, maxAge });\n    const expires = new Date();\n    expires.setTime(expires.getTime() + maxAge * 1000);\n    const token = { value };\n    if (type === \"state\" && data)\n        token.data = data;\n    return {\n        name: cookies[type].name,\n        value: await encode({ ...options.jwt, maxAge, token }),\n        options: { ...cookies[type].options, expires },\n    };\n}\nconst PKCE_MAX_AGE = 60 * 15; // 15 minutes in seconds\nexport const pkce = {\n    async create(options) {\n        const code_verifier = o.generateRandomCodeVerifier();\n        const value = await o.calculatePKCECodeChallenge(code_verifier);\n        const maxAge = PKCE_MAX_AGE;\n        const cookie = await signCookie(\"pkceCodeVerifier\", code_verifier, maxAge, options);\n        return { cookie, value };\n    },\n    /**\n     * Returns code_verifier if the provider is configured to use PKCE,\n     * and clears the container cookie afterwards.\n     * An error is thrown if the code_verifier is missing or invalid.\n     * @see https://www.rfc-editor.org/rfc/rfc7636\n     * @see https://danielfett.de/2020/05/16/pkce-vs-nonce-equivalent-or-not/#pkce\n     */\n    async use(cookies, resCookies, options) {\n        const { provider } = options;\n        if (!provider?.checks?.includes(\"pkce\"))\n            return;\n        const codeVerifier = cookies?.[options.cookies.pkceCodeVerifier.name];\n        if (!codeVerifier)\n            throw new InvalidCheck(\"PKCE code_verifier cookie was missing.\");\n        const value = await decode({\n            ...options.jwt,\n            token: codeVerifier,\n        });\n        if (!value?.value)\n            throw new InvalidCheck(\"PKCE code_verifier value could not be parsed.\");\n        // Clear the pkce code verifier cookie after use\n        resCookies.push({\n            name: options.cookies.pkceCodeVerifier.name,\n            value: \"\",\n            options: { ...options.cookies.pkceCodeVerifier.options, maxAge: 0 },\n        });\n        return value.value;\n    },\n};\nconst STATE_MAX_AGE = 60 * 15; // 15 minutes in seconds\nexport function decodeState(value) {\n    try {\n        const decoder = new TextDecoder();\n        return JSON.parse(decoder.decode(jose.base64url.decode(value)));\n    }\n    catch { }\n}\nexport const state = {\n    async create(options, data) {\n        const { provider } = options;\n        if (!provider.checks.includes(\"state\")) {\n            if (data) {\n                throw new InvalidCheck(\"State data was provided but the provider is not configured to use state.\");\n            }\n            return;\n        }\n        const encodedState = jose.base64url.encode(JSON.stringify({ ...data, random: o.generateRandomState() }));\n        const maxAge = STATE_MAX_AGE;\n        const cookie = await signCookie(\"state\", encodedState, maxAge, options, data);\n        return { cookie, value: encodedState };\n    },\n    /**\n     * Returns state if the provider is configured to use state,\n     * and clears the container cookie afterwards.\n     * An error is thrown if the state is missing or invalid.\n     * @see https://www.rfc-editor.org/rfc/rfc6749#section-10.12\n     * @see https://www.rfc-editor.org/rfc/rfc6749#section-4.1.1\n     */\n    async use(cookies, resCookies, options, paramRandom) {\n        const { provider } = options;\n        if (!provider.checks.includes(\"state\"))\n            return;\n        const state = cookies?.[options.cookies.state.name];\n        if (!state)\n            throw new InvalidCheck(\"State cookie was missing.\");\n        // IDEA: Let the user do something with the returned state\n        const encodedState = await decode({\n            ...options.jwt,\n            token: state,\n        });\n        if (!encodedState?.value)\n            throw new InvalidCheck(\"State (cookie) value could not be parsed.\");\n        const decodedState = decodeState(encodedState.value);\n        if (!decodedState)\n            throw new InvalidCheck(\"State (encoded) value could not be parsed.\");\n        if (decodedState.random !== paramRandom)\n            throw new InvalidCheck(`Random state values did not match. Expected: ${decodedState.random}. Got: ${paramRandom}`);\n        // Clear the state cookie after use\n        resCookies.push({\n            name: options.cookies.state.name,\n            value: \"\",\n            options: { ...options.cookies.state.options, maxAge: 0 },\n        });\n        return encodedState.value;\n    },\n};\nconst NONCE_MAX_AGE = 60 * 15; // 15 minutes in seconds\nexport const nonce = {\n    async create(options) {\n        if (!options.provider.checks.includes(\"nonce\"))\n            return;\n        const value = o.generateRandomNonce();\n        const maxAge = NONCE_MAX_AGE;\n        const cookie = await signCookie(\"nonce\", value, maxAge, options);\n        return { cookie, value };\n    },\n    /**\n     * Returns nonce if the provider is configured to use nonce,\n     * and clears the container cookie afterwards.\n     * An error is thrown if the nonce is missing or invalid.\n     * @see https://openid.net/specs/openid-connect-core-1_0.html#NonceNotes\n     * @see https://danielfett.de/2020/05/16/pkce-vs-nonce-equivalent-or-not/#nonce\n     */\n    async use(cookies, resCookies, options) {\n        const { provider } = options;\n        if (!provider?.checks?.includes(\"nonce\"))\n            return;\n        const nonce = cookies?.[options.cookies.nonce.name];\n        if (!nonce)\n            throw new InvalidCheck(\"Nonce cookie was missing.\");\n        const value = await decode({ ...options.jwt, token: nonce });\n        if (!value?.value)\n            throw new InvalidCheck(\"Nonce value could not be parsed.\");\n        // Clear the nonce cookie after use\n        resCookies.push({\n            name: options.cookies.nonce.name,\n            value: \"\",\n            options: { ...options.cookies.nonce.options, maxAge: 0 },\n        });\n        return value.value;\n    },\n};\n","import * as checks from \"./checks.js\";\nimport * as o from \"oauth4webapi\";\nimport { OAuthCallbackError, OAuthProfileParseError } from \"../../errors.js\";\n/**\n * Handles the following OAuth steps.\n * https://www.rfc-editor.org/rfc/rfc6749#section-4.1.1\n * https://www.rfc-editor.org/rfc/rfc6749#section-4.1.3\n * https://openid.net/specs/openid-connect-core-1_0.html#UserInfoRequest\n *\n * @note Although requesting userinfo is not required by the OAuth2.0 spec,\n * we fetch it anyway. This is because we always want a user profile.\n */\nexport async function handleOAuth(query, cookies, options, randomState) {\n    const { logger, provider } = options;\n    let as;\n    const { token, userinfo } = provider;\n    // Falls back to authjs.dev if the user only passed params\n    if ((!token?.url || token.url.host === \"authjs.dev\") &&\n        (!userinfo?.url || userinfo.url.host === \"authjs.dev\")) {\n        // We assume that issuer is always defined as this has been asserted earlier\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const issuer = new URL(provider.issuer);\n        const discoveryResponse = await o.discoveryRequest(issuer);\n        const discoveredAs = await o.processDiscoveryResponse(issuer, discoveryResponse);\n        if (!discoveredAs.token_endpoint)\n            throw new TypeError(\"TODO: Authorization server did not provide a token endpoint.\");\n        if (!discoveredAs.userinfo_endpoint)\n            throw new TypeError(\"TODO: Authorization server did not provide a userinfo endpoint.\");\n        as = discoveredAs;\n    }\n    else {\n        as = {\n            issuer: provider.issuer ?? \"https://authjs.dev\",\n            token_endpoint: token?.url.toString(),\n            userinfo_endpoint: userinfo?.url.toString(),\n        };\n    }\n    const client = {\n        client_id: provider.clientId,\n        client_secret: provider.clientSecret,\n        ...provider.client,\n    };\n    const resCookies = [];\n    const state = await checks.state.use(cookies, resCookies, options, randomState);\n    const codeGrantParams = o.validateAuthResponse(as, client, new URLSearchParams(query), provider.checks.includes(\"state\") ? state : o.skipStateCheck);\n    /** https://www.rfc-editor.org/rfc/rfc6749#section-4.1.2.1 */\n    if (o.isOAuth2Error(codeGrantParams)) {\n        const cause = { providerId: provider.id, ...codeGrantParams };\n        logger.debug(\"OAuthCallbackError\", cause);\n        throw new OAuthCallbackError(\"OAuth Provider returned an error\", cause);\n    }\n    const codeVerifier = await checks.pkce.use(cookies, resCookies, options);\n    let redirect_uri = provider.callbackUrl;\n    if (!options.isOnRedirectProxy && provider.redirectProxyUrl) {\n        redirect_uri = provider.redirectProxyUrl;\n    }\n    let codeGrantResponse = await o.authorizationCodeGrantRequest(as, client, codeGrantParams, redirect_uri, codeVerifier ?? \"auth\" // TODO: review fallback code verifier\n    );\n    if (provider.token?.conform) {\n        codeGrantResponse =\n            (await provider.token.conform(codeGrantResponse.clone())) ??\n                codeGrantResponse;\n    }\n    let challenges;\n    if ((challenges = o.parseWwwAuthenticateChallenges(codeGrantResponse))) {\n        for (const challenge of challenges) {\n            console.log(\"challenge\", challenge);\n        }\n        throw new Error(\"TODO: Handle www-authenticate challenges as needed\");\n    }\n    let profile = {};\n    let tokens;\n    if (provider.type === \"oidc\") {\n        const nonce = await checks.nonce.use(cookies, resCookies, options);\n        const result = await o.processAuthorizationCodeOpenIDResponse(as, client, codeGrantResponse, nonce ?? o.expectNoNonce);\n        if (o.isOAuth2Error(result)) {\n            console.log(\"error\", result);\n            throw new Error(\"TODO: Handle OIDC response body error\");\n        }\n        profile = o.getValidatedIdTokenClaims(result);\n        tokens = result;\n    }\n    else {\n        tokens = await o.processAuthorizationCodeOAuth2Response(as, client, codeGrantResponse);\n        if (o.isOAuth2Error(tokens)) {\n            console.log(\"error\", tokens);\n            throw new Error(\"TODO: Handle OAuth 2.0 response body error\");\n        }\n        if (userinfo?.request) {\n            const _profile = await userinfo.request({ tokens, provider });\n            if (_profile instanceof Object)\n                profile = _profile;\n        }\n        else if (userinfo?.url) {\n            const userinfoResponse = await o.userInfoRequest(as, client, tokens.access_token);\n            profile = await userinfoResponse.json();\n        }\n        else {\n            throw new TypeError(\"No userinfo endpoint configured\");\n        }\n    }\n    if (tokens.expires_in) {\n        tokens.expires_at =\n            Math.floor(Date.now() / 1000) + Number(tokens.expires_in);\n    }\n    const profileResult = await getUserAndAccount(profile, provider, tokens, logger);\n    return { ...profileResult, profile, cookies: resCookies };\n}\n/** Returns the user and account that is going to be created in the database. */\nasync function getUserAndAccount(OAuthProfile, provider, tokens, logger) {\n    try {\n        const user = await provider.profile(OAuthProfile, tokens);\n        user.email = user.email?.toLowerCase();\n        if (!user.id) {\n            throw new TypeError(`User id is missing in ${provider.name} OAuth profile response`);\n        }\n        return {\n            user,\n            account: {\n                provider: provider.id,\n                type: provider.type,\n                providerAccountId: user.id.toString(),\n                ...tokens,\n            },\n        };\n    }\n    catch (e) {\n        // If we didn't get a response either there was a problem with the provider\n        // response *or* the user cancelled the action with the provider.\n        //\n        // Unfortunately, we can't tell which - at least not in a way that works for\n        // all providers, so we return an empty object; the user should then be\n        // redirected back to the sign up page. We log the error to help developers\n        // who might be trying to debug this when configuring a new provider.\n        logger.debug(\"getProfile error details\", OAuthProfile);\n        logger.error(new OAuthProfileParseError(e, { provider: provider.id }));\n    }\n}\n","import { InvalidCheck } from \"../../errors.js\";\nimport { decodeState } from \"./checks.js\";\n/**\n * When the authorization flow contains a state, we check if it's a redirect proxy\n * and if so, we return the random state and the original redirect URL.\n */\nexport function handleState(query, provider, isOnRedirectProxy) {\n    let randomState;\n    let proxyRedirect;\n    if (provider.redirectProxyUrl && !query?.state) {\n        throw new InvalidCheck(\"Missing state in query, but required for redirect proxy\");\n    }\n    const state = decodeState(query?.state);\n    randomState = state?.random;\n    if (isOnRedirectProxy) {\n        if (!state?.origin)\n            return { randomState };\n        proxyRedirect = `${state.origin}?${new URLSearchParams(query)}`;\n    }\n    return { randomState, proxyRedirect };\n}\n","import { AuthorizedCallbackError } from \"../../errors.js\";\nexport async function handleAuthorized(params, { url, logger, callbacks: { signIn } }) {\n    try {\n        const authorized = await signIn(params);\n        if (!authorized) {\n            url.pathname += \"/error\";\n            logger.debug(\"User not authorized\", params);\n            url.searchParams.set(\"error\", \"AccessDenied\");\n            return { status: 403, redirect: url.toString() };\n        }\n    }\n    catch (e) {\n        url.pathname += \"/error\";\n        const error = new AuthorizedCallbackError(e);\n        logger.error(error);\n        url.searchParams.set(\"error\", \"Configuration\");\n        return { status: 500, redirect: url.toString() };\n    }\n}\n","import { CallbackRouteError, OAuthCallbackError, Verification, } from \"../../errors.js\";\nimport { handleLogin } from \"../callback-handler.js\";\nimport { handleOAuth } from \"../oauth/callback.js\";\nimport { handleState } from \"../oauth/handle-state.js\";\nimport { createHash } from \"../web.js\";\nimport { handleAuthorized } from \"./shared.js\";\n/** Handle callbacks from login services */\nexport async function callback(params) {\n    const { options, query, body, method, headers, sessionStore } = params;\n    const { provider, adapter, url, callbackUrl, pages, jwt, events, callbacks, session: { strategy: sessionStrategy, maxAge: sessionMaxAge }, logger, } = options;\n    const cookies = [];\n    const useJwtSession = sessionStrategy === \"jwt\";\n    try {\n        if (provider.type === \"oauth\" || provider.type === \"oidc\") {\n            const { proxyRedirect, randomState } = handleState(query, provider, options.isOnRedirectProxy);\n            if (proxyRedirect) {\n                logger.debug(\"proxy redirect\", { proxyRedirect, randomState });\n                return { redirect: proxyRedirect };\n            }\n            const authorizationResult = await handleOAuth(query, params.cookies, options, randomState);\n            if (authorizationResult.cookies.length) {\n                cookies.push(...authorizationResult.cookies);\n            }\n            logger.debug(\"authorization result\", authorizationResult);\n            const { user: userFromProvider, account, profile: OAuthProfile, } = authorizationResult;\n            // If we don't have a profile object then either something went wrong\n            // or the user cancelled signing in. We don't know which, so we just\n            // direct the user to the signin page for now. We could do something\n            // else in future.\n            // TODO: Handle user cancelling signin\n            if (!userFromProvider || !account || !OAuthProfile) {\n                return { redirect: `${url}/signin`, cookies };\n            }\n            // Check if user is allowed to sign in\n            // Attempt to get Profile from OAuth provider details before invoking\n            // signIn callback - but if no user object is returned, that is fine\n            // (that just means it's a new user signing in for the first time).\n            let userByAccountOrFromProvider;\n            if (adapter) {\n                const { getUserByAccount } = adapter;\n                const userByAccount = await getUserByAccount({\n                    providerAccountId: account.providerAccountId,\n                    provider: provider.id,\n                });\n                if (userByAccount)\n                    userByAccountOrFromProvider = userByAccount;\n            }\n            const unauthorizedOrError = await handleAuthorized({\n                user: userByAccountOrFromProvider,\n                account,\n                profile: OAuthProfile,\n            }, options);\n            if (unauthorizedOrError)\n                return { ...unauthorizedOrError, cookies };\n            // Sign user in\n            const { user, session, isNewUser } = await handleLogin(sessionStore.value, userFromProvider, account, options);\n            if (useJwtSession) {\n                const defaultToken = {\n                    name: user.name,\n                    email: user.email,\n                    picture: user.image,\n                    sub: user.id?.toString(),\n                };\n                const token = await callbacks.jwt({\n                    token: defaultToken,\n                    user,\n                    account,\n                    profile: OAuthProfile,\n                    isNewUser,\n                    trigger: isNewUser ? \"signUp\" : \"signIn\",\n                });\n                // Clear cookies if token is null\n                if (token === null) {\n                    cookies.push(...sessionStore.clean());\n                }\n                else {\n                    // Encode token\n                    const newToken = await jwt.encode({ ...jwt, token });\n                    // Set cookie expiry date\n                    const cookieExpires = new Date();\n                    cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1000);\n                    const sessionCookies = sessionStore.chunk(newToken, {\n                        expires: cookieExpires,\n                    });\n                    cookies.push(...sessionCookies);\n                }\n            }\n            else {\n                // Save Session Token in cookie\n                cookies.push({\n                    name: options.cookies.sessionToken.name,\n                    value: session.sessionToken,\n                    options: {\n                        ...options.cookies.sessionToken.options,\n                        expires: session.expires,\n                    },\n                });\n            }\n            await events.signIn?.({ user, account, profile: OAuthProfile, isNewUser });\n            // Handle first logins on new accounts\n            // e.g. option to send users to a new account landing page on initial login\n            // Note that the callback URL is preserved, so the journey can still be resumed\n            if (isNewUser && pages.newUser) {\n                return {\n                    redirect: `${pages.newUser}${pages.newUser.includes(\"?\") ? \"&\" : \"?\"}${new URLSearchParams({ callbackUrl })}`,\n                    cookies,\n                };\n            }\n            return { redirect: callbackUrl, cookies };\n        }\n        else if (provider.type === \"email\") {\n            const token = query?.token;\n            const identifier = query?.email;\n            if (!token || !identifier) {\n                const e = new TypeError(\"Missing token or email. The sign-in URL was manually opened without token/identifier or the link was not sent correctly in the email.\", { cause: { hasToken: !!token, hasEmail: !!identifier } });\n                e.name = \"Configuration\";\n                throw e;\n            }\n            const secret = provider.secret ?? options.secret;\n            // @ts-expect-error -- Verified in `assertConfig`.\n            const invite = await adapter.useVerificationToken({\n                identifier,\n                token: await createHash(`${token}${secret}`),\n            });\n            const hasInvite = !!invite;\n            const expired = invite ? invite.expires.valueOf() < Date.now() : undefined;\n            const invalidInvite = !hasInvite || expired;\n            if (invalidInvite)\n                throw new Verification({ hasInvite, expired });\n            const user = (await adapter.getUserByEmail(identifier)) ?? {\n                id: identifier,\n                email: identifier,\n                emailVerified: null,\n            };\n            const account = {\n                providerAccountId: user.email,\n                userId: user.id,\n                type: \"email\",\n                provider: provider.id,\n            };\n            // Check if user is allowed to sign in\n            const unauthorizedOrError = await handleAuthorized({ user, account }, options);\n            if (unauthorizedOrError)\n                return { ...unauthorizedOrError, cookies };\n            // Sign user in\n            const { user: loggedInUser, session, isNewUser, } = await handleLogin(sessionStore.value, user, account, options);\n            if (useJwtSession) {\n                const defaultToken = {\n                    name: loggedInUser.name,\n                    email: loggedInUser.email,\n                    picture: loggedInUser.image,\n                    sub: loggedInUser.id?.toString(),\n                };\n                const token = await callbacks.jwt({\n                    token: defaultToken,\n                    user: loggedInUser,\n                    account,\n                    isNewUser,\n                    trigger: isNewUser ? \"signUp\" : \"signIn\",\n                });\n                // Clear cookies if token is null\n                if (token === null) {\n                    cookies.push(...sessionStore.clean());\n                }\n                else {\n                    // Encode token\n                    const newToken = await jwt.encode({ ...jwt, token });\n                    // Set cookie expiry date\n                    const cookieExpires = new Date();\n                    cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1000);\n                    const sessionCookies = sessionStore.chunk(newToken, {\n                        expires: cookieExpires,\n                    });\n                    cookies.push(...sessionCookies);\n                }\n            }\n            else {\n                // Save Session Token in cookie\n                cookies.push({\n                    name: options.cookies.sessionToken.name,\n                    value: session.sessionToken,\n                    options: {\n                        ...options.cookies.sessionToken.options,\n                        expires: session.expires,\n                    },\n                });\n            }\n            await events.signIn?.({ user: loggedInUser, account, isNewUser });\n            // Handle first logins on new accounts\n            // e.g. option to send users to a new account landing page on initial login\n            // Note that the callback URL is preserved, so the journey can still be resumed\n            if (isNewUser && pages.newUser) {\n                return {\n                    redirect: `${pages.newUser}${pages.newUser.includes(\"?\") ? \"&\" : \"?\"}${new URLSearchParams({ callbackUrl })}`,\n                    cookies,\n                };\n            }\n            // Callback URL is already verified at this point, so safe to use if specified\n            return { redirect: callbackUrl, cookies };\n        }\n        else if (provider.type === \"credentials\" && method === \"POST\") {\n            const credentials = body ?? {};\n            // TODO: Forward the original request as is, instead of reconstructing it\n            Object.entries(query ?? {}).forEach(([k, v]) => url.searchParams.set(k, v));\n            const user = await provider.authorize(credentials, \n            // prettier-ignore\n            new Request(url, { headers, method, body: JSON.stringify(body) }));\n            if (!user) {\n                return {\n                    status: 401,\n                    redirect: `${url}/error?${new URLSearchParams({\n                        error: \"CredentialsSignin\",\n                        provider: provider.id,\n                    })}`,\n                    cookies,\n                };\n            }\n            /** @type {import(\"src\").Account} */\n            const account = {\n                providerAccountId: user.id,\n                type: \"credentials\",\n                provider: provider.id,\n            };\n            const unauthorizedOrError = await handleAuthorized({ user, account, credentials }, options);\n            if (unauthorizedOrError)\n                return { ...unauthorizedOrError, cookies };\n            const defaultToken = {\n                name: user.name,\n                email: user.email,\n                picture: user.image,\n                sub: user.id?.toString(),\n            };\n            const token = await callbacks.jwt({\n                token: defaultToken,\n                user,\n                // @ts-expect-error\n                account,\n                isNewUser: false,\n                trigger: \"signIn\",\n            });\n            // Clear cookies if token is null\n            if (token === null) {\n                cookies.push(...sessionStore.clean());\n            }\n            else {\n                // Encode token\n                const newToken = await jwt.encode({ ...jwt, token });\n                // Set cookie expiry date\n                const cookieExpires = new Date();\n                cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1000);\n                const sessionCookies = sessionStore.chunk(newToken, {\n                    expires: cookieExpires,\n                });\n                cookies.push(...sessionCookies);\n            }\n            // @ts-expect-error\n            await events.signIn?.({ user, account });\n            return { redirect: callbackUrl, cookies };\n        }\n        return {\n            status: 500,\n            body: `Error: Callback for provider type ${provider.type} not supported`,\n            cookies,\n        };\n    }\n    catch (e) {\n        if (e instanceof OAuthCallbackError) {\n            logger.error(e);\n            // REVIEW: Should we expose original error= and error_description=\n            // Should we use a different name for error= then, since we already use it for all kind of errors?\n            url.searchParams.set(\"error\", OAuthCallbackError.name);\n            url.pathname += \"/signin\";\n            return { redirect: url.toString(), cookies };\n        }\n        const error = new CallbackRouteError(e, { provider: provider.id });\n        logger.debug(\"callback route error details\", { method, query, body });\n        logger.error(error);\n        url.searchParams.set(\"error\", CallbackRouteError.name);\n        url.pathname += \"/error\";\n        return { redirect: url.toString(), cookies };\n    }\n}\n","/**\n * Return a JSON object with a list of all OAuth providers currently configured\n * and their signin and callback URLs. This makes it possible to automatically\n * generate buttons for all providers when rendering client side.\n */\nexport function providers(providers) {\n    return {\n        headers: { \"Content-Type\": \"application/json\" },\n        body: providers.reduce((acc, { id, name, type, signinUrl, callbackUrl }) => {\n            acc[id] = { id, name, type, signinUrl, callbackUrl };\n            return acc;\n        }, {}),\n    };\n}\n","import { JWTSessionError, SessionTokenError } from \"../../errors.js\";\nimport { fromDate } from \"../utils/date.js\";\n/** Return a session object filtered via `callbacks.session` */\nexport async function session(params) {\n    const { options, sessionStore, newSession, isUpdate } = params;\n    const { adapter, jwt, events, callbacks, logger, session: { strategy: sessionStrategy, maxAge: sessionMaxAge }, } = options;\n    const response = {\n        body: null,\n        headers: { \"Content-Type\": \"application/json\" },\n        cookies: [],\n    };\n    const sessionToken = sessionStore.value;\n    if (!sessionToken)\n        return response;\n    if (sessionStrategy === \"jwt\") {\n        try {\n            const decodedToken = await jwt.decode({ ...jwt, token: sessionToken });\n            if (!decodedToken)\n                throw new Error(\"Invalid JWT\");\n            // @ts-expect-error\n            const token = await callbacks.jwt({\n                token: decodedToken,\n                ...(isUpdate && { trigger: \"update\" }),\n                session: newSession,\n            });\n            const newExpires = fromDate(sessionMaxAge);\n            if (token !== null) {\n                // By default, only exposes a limited subset of information to the client\n                // as needed for presentation purposes (e.g. \"you are logged in as...\").\n                const session = {\n                    user: { name: token.name, email: token.email, image: token.picture },\n                    expires: newExpires.toISOString(),\n                };\n                // @ts-expect-error\n                const newSession = await callbacks.session({ session, token });\n                // Return session payload as response\n                response.body = newSession;\n                // Refresh JWT expiry by re-signing it, with an updated expiry date\n                const newToken = await jwt.encode({\n                    ...jwt,\n                    token,\n                });\n                // Set cookie, to also update expiry date on cookie\n                const sessionCookies = sessionStore.chunk(newToken, {\n                    expires: newExpires,\n                });\n                response.cookies?.push(...sessionCookies);\n                await events.session?.({ session: newSession, token });\n            }\n            else {\n                response.cookies?.push(...sessionStore.clean());\n            }\n        }\n        catch (e) {\n            logger.error(new JWTSessionError(e));\n            // If the JWT is not verifiable remove the broken session cookie(s).\n            response.cookies?.push(...sessionStore.clean());\n        }\n        return response;\n    }\n    // Retrieve session from database\n    try {\n        const { getSessionAndUser, deleteSession, updateSession } = adapter;\n        let userAndSession = await getSessionAndUser(sessionToken);\n        // If session has expired, clean up the database\n        if (userAndSession &&\n            userAndSession.session.expires.valueOf() < Date.now()) {\n            await deleteSession(sessionToken);\n            userAndSession = null;\n        }\n        if (userAndSession) {\n            const { user, session } = userAndSession;\n            const sessionUpdateAge = options.session.updateAge;\n            // Calculate last updated date to throttle write updates to database\n            // Formula: ({expiry date} - sessionMaxAge) + sessionUpdateAge\n            //     e.g. ({expiry date} - 30 days) + 1 hour\n            const sessionIsDueToBeUpdatedDate = session.expires.valueOf() -\n                sessionMaxAge * 1000 +\n                sessionUpdateAge * 1000;\n            const newExpires = fromDate(sessionMaxAge);\n            // Trigger update of session expiry date and write to database, only\n            // if the session was last updated more than {sessionUpdateAge} ago\n            if (sessionIsDueToBeUpdatedDate <= Date.now()) {\n                await updateSession({\n                    sessionToken: sessionToken,\n                    expires: newExpires,\n                });\n            }\n            // Pass Session through to the session callback\n            // @ts-expect-error\n            const sessionPayload = await callbacks.session({\n                // By default, only exposes a limited subset of information to the client\n                // as needed for presentation purposes (e.g. \"you are logged in as...\").\n                session: {\n                    user: { name: user.name, email: user.email, image: user.image },\n                    expires: session.expires.toISOString(),\n                },\n                user,\n                newSession,\n                ...(isUpdate ? { trigger: \"update\" } : {}),\n            });\n            // Return session payload as response\n            response.body = sessionPayload;\n            // Set cookie again to update expiry\n            response.cookies?.push({\n                name: options.cookies.sessionToken.name,\n                value: sessionToken,\n                options: {\n                    ...options.cookies.sessionToken.options,\n                    expires: newExpires,\n                },\n            });\n            // @ts-expect-error\n            await events.session?.({ session: sessionPayload });\n        }\n        else if (sessionToken) {\n            // If `sessionToken` was found set but it's not valid for a session then\n            // remove the sessionToken cookie from browser.\n            response.cookies?.push(...sessionStore.clean());\n        }\n    }\n    catch (e) {\n        logger.error(new SessionTokenError(e));\n    }\n    return response;\n}\n","import { createHash, randomString, toRequest } from \"../web.js\";\n/**\n * Starts an e-mail login flow, by generating a token,\n * and sending it to the user's e-mail (with the help of a DB adapter)\n */\nexport default async function email(identifier, options, request) {\n    const { url, adapter, provider, callbackUrl, theme } = options;\n    const token = (await provider.generateVerificationToken?.()) ?? randomString(32);\n    const ONE_DAY_IN_SECONDS = 86400;\n    const expires = new Date(Date.now() + (provider.maxAge ?? ONE_DAY_IN_SECONDS) * 1000);\n    // Generate a link with email, unhashed token and callback url\n    const params = new URLSearchParams({ callbackUrl, token, email: identifier });\n    const _url = `${url}/callback/${provider.id}?${params}`;\n    const secret = provider.secret ?? options.secret;\n    await Promise.all([\n        provider.sendVerificationRequest({\n            identifier,\n            token,\n            expires,\n            url: _url,\n            provider,\n            theme,\n            request: toRequest(request),\n        }),\n        // @ts-expect-error -- Verified in `assertConfig`.\n        adapter.createVerificationToken?.({\n            identifier,\n            token: await createHash(`${token}${secret}`),\n            expires,\n        }),\n    ]);\n    return `${url}/verify-request?${new URLSearchParams({\n        provider: provider.id,\n        type: provider.type,\n    })}`;\n}\n","import * as checks from \"./checks.js\";\nimport * as o from \"oauth4webapi\";\n/**\n * Generates an authorization/request token URL.\n *\n * [OAuth 2](https://www.oauth.com/oauth2-servers/authorization/the-authorization-request/)\n */\nexport async function getAuthorizationUrl(query, options) {\n    const { logger, provider } = options;\n    let url = provider.authorization?.url;\n    let as;\n    // Falls back to authjs.dev if the user only passed params\n    if (!url || url.host === \"authjs.dev\") {\n        // If url is undefined, we assume that issuer is always defined\n        // We check this in assert.ts\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const issuer = new URL(provider.issuer);\n        const discoveryResponse = await o.discoveryRequest(issuer);\n        const as = await o.processDiscoveryResponse(issuer, discoveryResponse);\n        if (!as.authorization_endpoint) {\n            throw new TypeError(\"Authorization server did not provide an authorization endpoint.\");\n        }\n        url = new URL(as.authorization_endpoint);\n    }\n    const authParams = url.searchParams;\n    let redirect_uri = provider.callbackUrl;\n    let data;\n    if (!options.isOnRedirectProxy && provider.redirectProxyUrl) {\n        redirect_uri = provider.redirectProxyUrl;\n        data = { origin: provider.callbackUrl };\n        logger.debug(\"using redirect proxy\", { redirect_uri, data });\n    }\n    const params = Object.assign({\n        response_type: \"code\",\n        // clientId can technically be undefined, should we check this in assert.ts or rely on the Authorization Server to do it?\n        client_id: provider.clientId,\n        redirect_uri,\n        // @ts-expect-error TODO:\n        ...provider.authorization?.params,\n    }, Object.fromEntries(provider.authorization?.url.searchParams ?? []), query);\n    for (const k in params)\n        authParams.set(k, params[k]);\n    const cookies = [];\n    const state = await checks.state.create(options, data);\n    if (state) {\n        authParams.set(\"state\", state.value);\n        cookies.push(state.cookie);\n    }\n    if (provider.checks?.includes(\"pkce\")) {\n        if (as && !as.code_challenge_methods_supported?.includes(\"S256\")) {\n            // We assume S256 PKCE support, if the server does not advertise that,\n            // a random `nonce` must be used for CSRF protection.\n            if (provider.type === \"oidc\")\n                provider.checks = [\"nonce\"];\n        }\n        else {\n            const { value, cookie } = await checks.pkce.create(options);\n            authParams.set(\"code_challenge\", value);\n            authParams.set(\"code_challenge_method\", \"S256\");\n            cookies.push(cookie);\n        }\n    }\n    const nonce = await checks.nonce.create(options);\n    if (nonce) {\n        authParams.set(\"nonce\", nonce.value);\n        cookies.push(nonce.cookie);\n    }\n    // TODO: This does not work in normalizeOAuth because authorization endpoint can come from discovery\n    // Need to make normalizeOAuth async\n    if (provider.type === \"oidc\" && !url.searchParams.has(\"scope\")) {\n        url.searchParams.set(\"scope\", \"openid profile email\");\n    }\n    logger.debug(\"authorization url is ready\", { url, cookies, provider });\n    return { redirect: url.toString(), cookies };\n}\n","import emailSignin from \"../email/signin.js\";\nimport { SignInError } from \"../../errors.js\";\nimport { getAuthorizationUrl } from \"../oauth/authorization-url.js\";\nimport { handleAuthorized } from \"./shared.js\";\n/**\n * Initiates the sign in process for OAuth and Email flows .\n * For OAuth, redirects to the provider's authorization URL.\n * For Email, sends an email with a sign in link.\n */\nexport async function signin(request, options) {\n    const { query, body } = request;\n    const { url, logger, provider } = options;\n    try {\n        if (provider.type === \"oauth\" || provider.type === \"oidc\") {\n            return await getAuthorizationUrl(query, options);\n        }\n        else if (provider.type === \"email\") {\n            const normalizer = provider.normalizeIdentifier ?? defaultNormalizer;\n            const email = normalizer(body?.email);\n            const user = (await options.adapter.getUserByEmail(email)) ?? {\n                id: email,\n                email,\n                emailVerified: null,\n            };\n            const account = {\n                providerAccountId: email,\n                userId: user.id,\n                type: \"email\",\n                provider: provider.id,\n            };\n            const unauthorizedOrError = await handleAuthorized({ user, account, email: { verificationRequest: true } }, options);\n            if (unauthorizedOrError)\n                return unauthorizedOrError;\n            const redirect = await emailSignin(email, options, request);\n            return { redirect };\n        }\n        return { redirect: `${url}/signin` };\n    }\n    catch (e) {\n        const error = new SignInError(e, { provider: provider.id });\n        logger.error(error);\n        const code = provider.type === \"email\" ? \"EmailSignin\" : \"OAuthSignin\";\n        url.searchParams.set(\"error\", code);\n        url.pathname += \"/signin\";\n        return { redirect: url.toString() };\n    }\n}\nfunction defaultNormalizer(email) {\n    if (!email)\n        throw new Error(\"Missing email from request body.\");\n    // Get the first two elements only,\n    // separated by `@` from user input.\n    let [local, domain] = email.toLowerCase().trim().split(\"@\");\n    // The part before \"@\" can contain a \",\"\n    // but we remove it on the domain part\n    domain = domain.split(\",\")[0];\n    return `${local}@${domain}`;\n}\n","import { SignOutError } from \"../../errors.js\";\n/**\n * Destroys the session.\n * If the session strategy is database,\n * The session is also deleted from the database.\n * In any case, the session cookie is cleared and\n * {@link EventCallbacks.signOut} is emitted.\n */\nexport async function signout(sessionStore, options) {\n    const { jwt, events, callbackUrl: redirect, logger, session } = options;\n    const sessionToken = sessionStore.value;\n    if (!sessionToken)\n        return { redirect };\n    try {\n        if (session.strategy === \"jwt\") {\n            const token = await jwt.decode({ ...jwt, token: sessionToken });\n            await events.signOut?.({ token });\n        }\n        else {\n            const session = await options.adapter?.deleteSession(sessionToken);\n            await events.signOut?.({ session });\n        }\n    }\n    catch (e) {\n        logger.error(new SignOutError(e));\n    }\n    return { redirect, cookies: sessionStore.clean() };\n}\n","export { callback } from \"./callback.js\";\nexport { providers } from \"./providers.js\";\nexport { session } from \"./session.js\";\nexport { signin } from \"./signin.js\";\nexport { signout } from \"./signout.js\";\n","import { UnknownAction } from \"../errors.js\";\nimport { SessionStore } from \"./cookie.js\";\nimport { init } from \"./init.js\";\nimport renderPage from \"./pages/index.js\";\nimport * as routes from \"./routes/index.js\";\n/** @internal */\nexport async function AuthInternal(request, authOptions) {\n    const { action, providerId, error, method } = request;\n    const csrfDisabled = authOptions.skipCSRFCheck === skipCSRFCheck;\n    const { options, cookies } = await init({\n        authOptions,\n        action,\n        providerId,\n        url: request.url,\n        callbackUrl: request.body?.callbackUrl ?? request.query?.callbackUrl,\n        csrfToken: request.body?.csrfToken,\n        cookies: request.cookies,\n        isPost: method === \"POST\",\n        csrfDisabled,\n    });\n    const sessionStore = new SessionStore(options.cookies.sessionToken, request, options.logger);\n    if (method === \"GET\") {\n        const render = renderPage({ ...options, query: request.query, cookies });\n        const { pages } = options;\n        switch (action) {\n            case \"providers\":\n                return (await routes.providers(options.providers));\n            case \"session\": {\n                const session = await routes.session({ sessionStore, options });\n                if (session.cookies)\n                    cookies.push(...session.cookies);\n                // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n                return { ...session, cookies };\n            }\n            case \"csrf\": {\n                if (csrfDisabled) {\n                    options.logger.warn(\"csrf-disabled\");\n                    cookies.push({\n                        name: options.cookies.csrfToken.name,\n                        value: \"\",\n                        options: { ...options.cookies.csrfToken.options, maxAge: 0 },\n                    });\n                    return { status: 404, cookies };\n                }\n                return {\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: { csrfToken: options.csrfToken },\n                    cookies,\n                };\n            }\n            case \"signin\":\n                if (pages.signIn) {\n                    let signinUrl = `${pages.signIn}${pages.signIn.includes(\"?\") ? \"&\" : \"?\"}${new URLSearchParams({ callbackUrl: options.callbackUrl })}`;\n                    if (error)\n                        signinUrl = `${signinUrl}&${new URLSearchParams({ error })}`;\n                    return { redirect: signinUrl, cookies };\n                }\n                return render.signin();\n            case \"signout\":\n                if (pages.signOut)\n                    return { redirect: pages.signOut, cookies };\n                return render.signout();\n            case \"callback\":\n                if (options.provider) {\n                    const callback = await routes.callback({\n                        body: request.body,\n                        query: request.query,\n                        headers: request.headers,\n                        cookies: request.cookies,\n                        method,\n                        options,\n                        sessionStore,\n                    });\n                    if (callback.cookies)\n                        cookies.push(...callback.cookies);\n                    return { ...callback, cookies };\n                }\n                break;\n            case \"verify-request\":\n                if (pages.verifyRequest) {\n                    return { redirect: pages.verifyRequest, cookies };\n                }\n                return render.verifyRequest();\n            case \"error\":\n                // These error messages are displayed in line on the sign in page\n                // TODO: verify these. We should redirect these to signin directly, instead of\n                // first to error and then to signin.\n                if ([\n                    \"Signin\",\n                    \"OAuthCreateAccount\",\n                    \"EmailCreateAccount\",\n                    \"Callback\",\n                    \"OAuthAccountNotLinked\",\n                    \"SessionRequired\",\n                ].includes(error)) {\n                    return { redirect: `${options.url}/signin?error=${error}`, cookies };\n                }\n                if (pages.error) {\n                    return {\n                        redirect: `${pages.error}${pages.error.includes(\"?\") ? \"&\" : \"?\"}error=${error}`,\n                        cookies,\n                    };\n                }\n                return render.error({ error: error });\n            default:\n        }\n    }\n    else {\n        switch (action) {\n            case \"signin\":\n                if ((csrfDisabled || options.csrfTokenVerified) && options.provider) {\n                    const signin = await routes.signin(request, options);\n                    if (signin.cookies)\n                        cookies.push(...signin.cookies);\n                    return { ...signin, cookies };\n                }\n                return { redirect: `${options.url}/signin?csrf=true`, cookies };\n            case \"signout\":\n                if (csrfDisabled || options.csrfTokenVerified) {\n                    const signout = await routes.signout(sessionStore, options);\n                    if (signout.cookies)\n                        cookies.push(...signout.cookies);\n                    return { ...signout, cookies };\n                }\n                return { redirect: `${options.url}/signout?csrf=true`, cookies };\n            case \"callback\":\n                if (options.provider) {\n                    // Verified CSRF Token required for credentials providers only\n                    if (options.provider.type === \"credentials\" &&\n                        !csrfDisabled &&\n                        !options.csrfTokenVerified) {\n                        return { redirect: `${options.url}/signin?csrf=true`, cookies };\n                    }\n                    const callback = await routes.callback({\n                        body: request.body,\n                        query: request.query,\n                        headers: request.headers,\n                        cookies: request.cookies,\n                        method,\n                        options,\n                        sessionStore,\n                    });\n                    if (callback.cookies)\n                        cookies.push(...callback.cookies);\n                    return { ...callback, cookies };\n                }\n                break;\n            case \"session\": {\n                if (options.csrfTokenVerified) {\n                    const session = await routes.session({\n                        options,\n                        sessionStore,\n                        newSession: request.body?.data,\n                        isUpdate: true,\n                    });\n                    if (session.cookies)\n                        cookies.push(...session.cookies);\n                    return { ...session, cookies };\n                }\n                // If CSRF token is invalid, return a 400 status code\n                // we should not redirect to a page as this is an API route\n                return { status: 400, cookies };\n            }\n            default:\n        }\n    }\n    throw new UnknownAction(`Cannot handle action: ${action}`);\n}\n/**\n * :::danger\n * This option is intended for framework authors.\n * :::\n *\n * Auth.js comes with built-in {@link https://authjs.dev/concepts/security#csrf CSRF} protection, but\n * if you are implementing a framework that is already protected against CSRF attacks, you can skip this check by\n * passing this value to {@link AuthConfig.skipCSRFCheck}.\n */\nexport const skipCSRFCheck = Symbol(\"skip-csrf-check\");\n/**\n * :::danger\n * This option is intended for framework authors.\n * :::\n *\n * Auth.js returns a web standard {@link Response} by default, but\n * if you are implementing a framework you might want to get access to the raw internal response\n * by passing this value to {@link AuthConfig.raw}.\n */\nexport const raw = Symbol(\"return-type-raw\");\n","/**\n *\n * :::warning Experimental\n * `@auth/core` is under active development.\n * :::\n *\n * This is the main entry point to the Auth.js library.\n *\n * Based on the {@link https://developer.mozilla.org/en-US/docs/Web/API/Request Request}\n * and {@link https://developer.mozilla.org/en-US/docs/Web/API/Response Response} Web standard APIs.\n * Primarily used to implement [framework](https://authjs.dev/concepts/frameworks)-specific packages,\n * but it can also be used directly.\n *\n * ## Installation\n *\n * ```bash npm2yarn2pnpm\n * npm install @auth/core\n * ```\n *\n * ## Usage\n *\n * ```ts\n * import { Auth } from \"@auth/core\"\n *\n * const request = new Request(\"https://example.com\")\n * const response = await Auth(request, {...})\n *\n * console.log(response instanceof Response) // true\n * ```\n *\n * ## Resources\n *\n * - [Getting started](https://authjs.dev/getting-started/introduction)\n * - [Most common use case guides](https://authjs.dev/guides)\n *\n * @module index\n */\nimport { assertConfig } from \"./lib/assert.js\";\nimport { ErrorPageLoop } from \"./errors.js\";\nimport { AuthInternal, raw, skipCSRFCheck } from \"./lib/index.js\";\nimport renderPage from \"./lib/pages/index.js\";\nimport { logger, setLogger } from \"./lib/utils/logger.js\";\nimport { toInternalRequest, toResponse } from \"./lib/web.js\";\nexport { skipCSRFCheck, raw };\n/**\n * Core functionality provided by Auth.js.\n *\n * Receives a standard {@link Request} and returns a {@link Response}.\n *\n * @example\n * ```ts\n * import Auth from \"@auth/core\"\n *\n * const request = new Request(\"https://example.com\")\n * const response = await AuthHandler(request, {\n *   providers: [...],\n *   secret: \"...\",\n *   trustHost: true,\n * })\n *```\n * @see [Documentation](https://authjs.dev)\n */\nexport async function Auth(request, config) {\n    setLogger(config.logger, config.debug);\n    const internalRequest = await toInternalRequest(request);\n    if (internalRequest instanceof Error) {\n        logger.error(internalRequest);\n        return new Response(`Error: This action with HTTP ${request.method} is not supported.`, { status: 400 });\n    }\n    const assertionResult = assertConfig(internalRequest, config);\n    if (Array.isArray(assertionResult)) {\n        assertionResult.forEach(logger.warn);\n    }\n    else if (assertionResult instanceof Error) {\n        // Bail out early if there's an error in the user config\n        logger.error(assertionResult);\n        const htmlPages = [\"signin\", \"signout\", \"error\", \"verify-request\"];\n        if (!htmlPages.includes(internalRequest.action) ||\n            internalRequest.method !== \"GET\") {\n            return new Response(JSON.stringify({\n                message: \"There was a problem with the server configuration. Check the server logs for more information.\",\n                code: assertionResult.name,\n            }), { status: 500, headers: { \"Content-Type\": \"application/json\" } });\n        }\n        const { pages, theme } = config;\n        const authOnErrorPage = pages?.error &&\n            internalRequest.url.searchParams\n                .get(\"callbackUrl\")\n                ?.startsWith(pages.error);\n        if (!pages?.error || authOnErrorPage) {\n            if (authOnErrorPage) {\n                logger.error(new ErrorPageLoop(`The error page ${pages?.error} should not require authentication`));\n            }\n            const render = renderPage({ theme });\n            const page = render.error({ error: \"Configuration\" });\n            return toResponse(page);\n        }\n        return Response.redirect(`${pages.error}?error=Configuration`);\n    }\n    const internalResponse = await AuthInternal(internalRequest, config);\n    // @ts-expect-error TODO: Fix return type\n    if (config.raw === raw)\n        return internalResponse;\n    const response = await toResponse(internalResponse);\n    // If the request expects a return URL, send it as JSON\n    // instead of doing an actual redirect.\n    const redirect = response.headers.get(\"Location\");\n    if (request.headers.has(\"X-Auth-Return-Redirect\") && redirect) {\n        response.headers.delete(\"Location\");\n        response.headers.set(\"Content-Type\", \"application/json\");\n        return new Response(JSON.stringify({ url: redirect }), {\n            headers: response.headers,\n        });\n    }\n    return response;\n}\n","export function setEnvDefaults(config) {\n    config.secret ?? (config.secret = process.env.NEXTAUTH_SECRET ?? process.env.AUTH_SECRET);\n    config.trustHost ?? (config.trustHost = !!(process.env.AUTH_URL ??\n        process.env.NEXTAUTH_URL ??\n        process.env.AUTH_TRUST_HOST ??\n        process.env.VERCEL ??\n        process.env.NODE_ENV !== \"production\"));\n    config.redirectProxyUrl ?? (config.redirectProxyUrl = process.env.AUTH_REDIRECT_PROXY_URL);\n    config.providers = config.providers.map((p) => {\n        const finalProvider = typeof p === \"function\" ? p() : p;\n        if (finalProvider.type === \"oauth\" || finalProvider.type === \"oidc\") {\n            const ID = finalProvider.id.toUpperCase();\n            finalProvider.clientId ?? (finalProvider.clientId = process.env[`AUTH_${ID}_ID`]);\n            finalProvider.clientSecret ?? (finalProvider.clientSecret = process.env[`AUTH_${ID}_SECRET`]);\n            if (finalProvider.type === \"oidc\") {\n                finalProvider.issuer ?? (finalProvider.issuer = process.env[`AUTH_${ID}_ISSUER`]);\n            }\n        }\n        return finalProvider;\n    });\n}\n/**\n * Extract the origin from `NEXTAUTH_URL` or `AUTH_URL`\n * environment variables, or the request's headers.\n */\nexport function detectOrigin(h) {\n    const url = process.env.AUTH_URL ?? process.env.NEXTAUTH_URL;\n    if (url)\n        return new URL(url);\n    const host = h.get(\"x-forwarded-host\") ?? h.get(\"host\");\n    const protocol = h.get(\"x-forwarded-proto\") === \"http\" ? \"http\" : \"https\";\n    return new URL(`${protocol}://${host}`);\n}\n/** If `NEXTAUTH_URL` or `AUTH_URL` is defined, override the request's URL. */\nexport function reqWithEnvUrl(req) {\n    const url = process.env.AUTH_URL ?? process.env.NEXTAUTH_URL;\n    if (!url)\n        return req;\n    const nonBase = req.nextUrl.href.replace(req.nextUrl.origin, \"\");\n    const base = new URL(url).origin;\n    // REVIEW: Bug in Next.js?: TypeError: next_dist_server_web_exports_next_request__WEBPACK_IMPORTED_MODULE_0__ is not a constructor\n    // return new NextRequest(new URL(nonBase, base), req)\n    const _url = new URL(nonBase, base);\n    const _req = new Request(_url, req);\n    _req.nextUrl = _url;\n    return _req;\n}\n","import { staticGenerationAsyncStorage } from \"./static-generation-async-storage.external\";\nimport { trackDynamicDataAccessed } from \"../../server/app-render/dynamic-rendering\";\nexport class DraftMode {\n    get isEnabled() {\n        return this._provider.isEnabled;\n    }\n    enable() {\n        const store = staticGenerationAsyncStorage.getStore();\n        if (store) {\n            // We we have a store we want to track dynamic data access to ensure we\n            // don't statically generate routes that manipulate draft mode.\n            trackDynamicDataAccessed(store, \"draftMode().enable()\");\n        }\n        return this._provider.enable();\n    }\n    disable() {\n        const store = staticGenerationAsyncStorage.getStore();\n        if (store) {\n            // We we have a store we want to track dynamic data access to ensure we\n            // don't statically generate routes that manipulate draft mode.\n            trackDynamicDataAccessed(store, \"draftMode().disable()\");\n        }\n        return this._provider.disable();\n    }\n    constructor(provider){\n        this._provider = provider;\n    }\n}\n\n//# sourceMappingURL=draft-mode.js.map","import { RequestCookiesAdapter } from \"../../server/web/spec-extension/adapters/request-cookies\";\nimport { HeadersAdapter } from \"../../server/web/spec-extension/adapters/headers\";\nimport { RequestCookies } from \"../../server/web/spec-extension/cookies\";\nimport { actionAsyncStorage } from \"./action-async-storage.external\";\nimport { DraftMode } from \"./draft-mode\";\nimport { trackDynamicDataAccessed } from \"../../server/app-render/dynamic-rendering\";\nimport { staticGenerationAsyncStorage } from \"./static-generation-async-storage.external\";\nimport { getExpectedRequestStore } from \"./request-async-storage.external\";\n/**\n * This function allows you to read the HTTP incoming request headers in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers) and\n * [Middleware](https://nextjs.org/docs/app/building-your-application/routing/middleware).\n *\n * Read more: [Next.js Docs: `headers`](https://nextjs.org/docs/app/api-reference/functions/headers)\n */ export function headers() {\n    const callingExpression = \"headers\";\n    const staticGenerationStore = staticGenerationAsyncStorage.getStore();\n    if (staticGenerationStore) {\n        if (staticGenerationStore.forceStatic) {\n            // When we are forcing static we don't mark this as a Dynamic read and we return an empty headers object\n            return HeadersAdapter.seal(new Headers({}));\n        } else {\n            // We will return a real headers object below so we mark this call as reading from a dynamic data source\n            trackDynamicDataAccessed(staticGenerationStore, callingExpression);\n        }\n    }\n    return getExpectedRequestStore(callingExpression).headers;\n}\nexport function cookies() {\n    const callingExpression = \"cookies\";\n    const staticGenerationStore = staticGenerationAsyncStorage.getStore();\n    if (staticGenerationStore) {\n        if (staticGenerationStore.forceStatic) {\n            // When we are forcing static we don't mark this as a Dynamic read and we return an empty cookies object\n            return RequestCookiesAdapter.seal(new RequestCookies(new Headers({})));\n        } else {\n            // We will return a real headers object below so we mark this call as reading from a dynamic data source\n            trackDynamicDataAccessed(staticGenerationStore, callingExpression);\n        }\n    }\n    const requestStore = getExpectedRequestStore(callingExpression);\n    const asyncActionStore = actionAsyncStorage.getStore();\n    if ((asyncActionStore == null ? void 0 : asyncActionStore.isAction) || (asyncActionStore == null ? void 0 : asyncActionStore.isAppRoute)) {\n        // We can't conditionally return different types here based on the context.\n        // To avoid confusion, we always return the readonly type here.\n        return requestStore.mutableCookies;\n    }\n    return requestStore.cookies;\n}\nexport function draftMode() {\n    const callingExpression = \"draftMode\";\n    const requestStore = getExpectedRequestStore(callingExpression);\n    return new DraftMode(requestStore.draftMode);\n}\n\n//# sourceMappingURL=headers.js.map","export * from \"../client/components/headers\";\n\n//# sourceMappingURL=headers.js.map","import parseua from \"next/dist/compiled/ua-parser-js\";\nexport function isBot(input) {\n    return /Googlebot|Mediapartners-Google|AdsBot-Google|googleweblight|Storebot-Google|Google-PageRenderer|Google-InspectionTool|Bingbot|BingPreview|Slurp|DuckDuckBot|baiduspider|yandex|sogou|LinkedInBot|bitlybot|tumblr|vkShare|quora link preview|facebookexternalhit|facebookcatalog|Twitterbot|applebot|redditbot|Slackbot|Discordbot|WhatsApp|SkypeUriPreview|ia_archiver/i.test(input);\n}\nexport function userAgentFromString(input) {\n    return {\n        ...parseua(input),\n        isBot: input === undefined ? false : isBot(input)\n    };\n}\nexport function userAgent({ headers }) {\n    return userAgentFromString(headers.get(\"user-agent\") || undefined);\n}\n\n//# sourceMappingURL=user-agent.js.map","const GlobalURLPattern = // @ts-expect-error: URLPattern is not available in Node.js\ntypeof URLPattern === \"undefined\" ? undefined : URLPattern;\nexport { GlobalURLPattern as URLPattern };\n\n//# sourceMappingURL=url-pattern.js.map","// Alias index file of next/server for edge runtime for tree-shaking purpose\nexport { ImageResponse } from \"../spec-extension/image-response\";\nexport { NextRequest } from \"../spec-extension/request\";\nexport { NextResponse } from \"../spec-extension/response\";\nexport { userAgent, userAgentFromString } from \"../spec-extension/user-agent\";\nexport { URLPattern } from \"../spec-extension/url-pattern\";\n\n//# sourceMappingURL=index.js.map","export * from \"../server/web/exports/index\";\n\n//# sourceMappingURL=server.js.map","import { Auth } from \"@auth/core\";\nimport { headers } from \"next/headers\";\nimport { NextResponse } from \"next/server\";\nimport { detectOrigin, reqWithEnvUrl } from \"./env.js\";\n/** Server-side method to read the session. */\nasync function getSession(headers, config) {\n    const origin = detectOrigin(headers);\n    const request = new Request(`${origin}/session`, {\n        headers: { cookie: headers.get(\"cookie\") ?? \"\" },\n    });\n    return Auth(request, {\n        ...config,\n        callbacks: {\n            ...config.callbacks,\n            // Since we are server-side, we don't need to filter out the session data\n            // See https://authjs.dev/guides/upgrade-to-v5/v5#authenticating-server-side\n            // TODO: Taint the session data to prevent accidental leakage to the client\n            // https://react.dev/reference/react/experimental_taintObjectReference\n            async session(...args) {\n                const session = \n                // If the user defined a custom session callback, use that instead\n                (await config.callbacks?.session?.(...args)) ?? args[0].session;\n                const user = args[0].user ?? args[0].token;\n                return { user, ...session };\n            },\n        },\n    });\n}\nfunction isReqWrapper(arg) {\n    return typeof arg === \"function\";\n}\nexport function initAuth(config) {\n    return (...args) => {\n        if (!args.length) {\n            // React Server Components\n            return getSession(headers(), config).then((r) => r.json());\n        }\n        if (args[0] instanceof Request) {\n            // middleare.ts\n            // export { auth as default } from \"auth\"\n            const req = args[0];\n            const ev = args[1];\n            return handleAuth([req, ev], config);\n        }\n        if (isReqWrapper(args[0])) {\n            // middleware.ts/router.ts\n            // import { auth } from \"auth\"\n            // export default auth((req) => { console.log(req.auth) }})\n            const userMiddlewareOrRoute = args[0];\n            return async (...args) => {\n                return handleAuth(args, config, userMiddlewareOrRoute);\n            };\n        }\n        // API Routes, getServerSideProps\n        const request = \"req\" in args[0] ? args[0].req : args[0];\n        const response = \"res\" in args[0] ? args[0].res : args[1];\n        return getSession(\n        // @ts-expect-error\n        new Headers(request.headers), config).then(async (authResponse) => {\n            const auth = await authResponse.json();\n            // Preserve cookies set by Auth.js Core\n            cloneSetCookie(authResponse, response);\n            return auth;\n        });\n    };\n}\nasync function handleAuth(args, config, userMiddlewareOrRoute) {\n    const request = reqWithEnvUrl(args[0]);\n    const sessionResponse = await getSession(request.headers, config);\n    const auth = await sessionResponse.json();\n    let authorized = true;\n    if (config.callbacks?.authorized) {\n        authorized = await config.callbacks.authorized({ request, auth });\n    }\n    let response = NextResponse.next?.();\n    if (authorized instanceof Response) {\n        // User returned a custom response, like redirecting to a page or 401, respect it\n        response = authorized;\n        const redirect = authorized.headers.get(\"Location\");\n        const { pathname } = request.nextUrl;\n        // If the user is redirecting to the same NextAuth.js action path as the current request,\n        // don't allow the redirect to prevent an infinite loop\n        if (redirect &&\n            isSameAuthAction(pathname, new URL(redirect).pathname, config)) {\n            authorized = true;\n        }\n    }\n    else if (userMiddlewareOrRoute) {\n        // Execute user's middleware/handler with the augmented request\n        const augmentedReq = request;\n        augmentedReq.auth = auth;\n        response =\n            // @ts-expect-error\n            (await userMiddlewareOrRoute(augmentedReq, args[1])) ??\n                NextResponse.next();\n    }\n    else if (!authorized) {\n        const signInPage = config.pages?.signIn ?? `${request.nextUrl.basePath}}/signin`;\n        if (request.nextUrl.pathname !== signInPage) {\n            // Redirect to signin page by default if not authorized\n            request.nextUrl.pathname = signInPage;\n            request.nextUrl.searchParams.set(\"callbackUrl\", request.nextUrl.href);\n            response = NextResponse.redirect(request.nextUrl);\n        }\n    }\n    const finalResponse = new Response(response?.body, response);\n    // Preserve cookies set by Auth.js Core\n    cloneSetCookie(sessionResponse, finalResponse);\n    return finalResponse;\n}\n/** Clone cookies from one response to another. */\nfunction cloneSetCookie(from, to) {\n    const authCookies = from.headers.getSetCookie?.() ?? from.headers.get(\"set-cookie\");\n    if (!authCookies?.length)\n        return;\n    if (Array.isArray(authCookies)) {\n        authCookies.forEach((cookie) => to.headers.append(\"set-cookie\", cookie));\n    }\n    else {\n        to.headers.set(\"set-cookie\", authCookies);\n    }\n}\nfunction isSameAuthAction(requestPath, redirectPath, config) {\n    const action = redirectPath.replace(`${requestPath}/`, \"\");\n    const pages = Object.values(config.pages ?? {});\n    return ((actions.has(action) || pages.includes(redirectPath)) &&\n        redirectPath === requestPath);\n}\nconst actions = new Set([\n    \"providers\",\n    \"session\",\n    \"csrf\",\n    \"signin\",\n    \"signout\",\n    \"callback\",\n    \"verify-request\",\n    \"error\",\n]);\n","/** @internal */ class ReadonlyURLSearchParamsError extends Error {\n    constructor(){\n        super(\"Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams\");\n    }\n}\nclass ReadonlyURLSearchParams extends URLSearchParams {\n    /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */ append() {\n        throw new ReadonlyURLSearchParamsError();\n    }\n    /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */ delete() {\n        throw new ReadonlyURLSearchParamsError();\n    }\n    /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */ set() {\n        throw new ReadonlyURLSearchParamsError();\n    }\n    /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */ sort() {\n        throw new ReadonlyURLSearchParamsError();\n    }\n}\nexport { redirect, permanentRedirect, RedirectType } from \"./redirect\";\nexport { notFound } from \"./not-found\";\nexport { ReadonlyURLSearchParams };\n\n//# sourceMappingURL=navigation.react-server.js.map","export * from \"../client/components/navigation.react-server\";\n\n//# sourceMappingURL=navigation.react-server.js.map","import { Auth, raw, skipCSRFCheck } from \"@auth/core\";\nimport { headers as nextHeaders, cookies } from \"next/headers\";\nimport { redirect } from \"next/navigation\";\nimport { detectOrigin } from \"./env.js\";\nexport async function signIn(provider, options, authorizationParams, config) {\n    const headers = new Headers(nextHeaders());\n    const { redirect: shouldRedirect = true, redirectTo: callbackUrl = headers.get(\"Referer\") ?? \"/\", ...rest } = options ?? {};\n    const base = `${detectOrigin(headers)}/signin`;\n    if (!provider) {\n        const url = `${base}?${new URLSearchParams({ callbackUrl })}`;\n        if (shouldRedirect)\n            redirect(url);\n        return url;\n    }\n    let url = `${base}/${provider}?${new URLSearchParams(authorizationParams)}`;\n    let foundProvider = undefined;\n    for (const _provider of config.providers) {\n        const { id } = typeof _provider === \"function\" ? _provider?.() : _provider;\n        if (id === provider) {\n            foundProvider = id;\n            break;\n        }\n    }\n    if (!foundProvider) {\n        const url = `${base}?${new URLSearchParams({ callbackUrl })}`;\n        if (shouldRedirect)\n            redirect(url);\n        return url;\n    }\n    if (foundProvider === \"credentials\") {\n        url = url.replace(\"signin\", \"callback\");\n    }\n    headers.set(\"Content-Type\", \"application/x-www-form-urlencoded\");\n    const body = new URLSearchParams({ ...rest, callbackUrl });\n    const req = new Request(url, { method: \"POST\", headers, body });\n    const res = await Auth(req, { ...config, raw, skipCSRFCheck });\n    for (const c of res?.cookies ?? [])\n        cookies().set(c.name, c.value, c.options);\n    const error = new URL(res.redirect).searchParams.get(\"error\");\n    if (error)\n        throw new Error(error);\n    if (shouldRedirect)\n        return redirect(res.redirect);\n    return res.redirect;\n}\nexport async function signOut(options, config) {\n    const headers = new Headers(nextHeaders());\n    headers.set(\"Content-Type\", \"application/x-www-form-urlencoded\");\n    const url = `${detectOrigin(headers)}/signout`;\n    const callbackUrl = options?.redirectTo ?? headers.get(\"Referer\") ?? \"/\";\n    const body = new URLSearchParams({ callbackUrl });\n    const req = new Request(url, { method: \"POST\", headers, body });\n    const res = await Auth(req, { ...config, raw, skipCSRFCheck });\n    for (const c of res?.cookies ?? [])\n        cookies().set(c.name, c.value, c.options);\n    if (options?.redirect ?? true)\n        return redirect(res.redirect);\n    return res;\n}\nexport async function update(data, config) {\n    const headers = new Headers(nextHeaders());\n    headers.set(\"Content-Type\", \"application/json\");\n    const url = `${detectOrigin(headers)}session`;\n    const body = JSON.stringify({ data });\n    const req = new Request(url, { method: \"POST\", headers, body });\n    const res = await Auth(req, { ...config, raw, skipCSRFCheck });\n    for (const c of res?.cookies ?? [])\n        cookies().set(c.name, c.value, c.options);\n    return res.body;\n}\n","/**\n * _If you are looking to migrate from v4, visit the [Upgrade Guide (v5)](https://authjs.dev/guides/upgrade-to-v5)._\n *\n * ## Installation\n *\n * ```bash npm2yarn2pnpm\n * npm install next-auth@5 @auth/core\n * ```\n *\n * ## Environment variable inferrence\n *\n * `NEXTAUTH_URL` and `NEXTAUTH_SECRET` have been inferred since v4.\n *\n * Since NextAuth.js v5 can also automatically infer environment variables that are prefiexed with `AUTH_`.\n *\n * For example `AUTH_GITHUB_ID` and `AUTH_GITHUB_SECRET` will be used as the `clientId` and `clientSecret` options for the GitHub provider.\n *\n * :::tip\n * The environment variable name inferring has the following format for OAuth providers: `AUTH_{PROVIDER}_{ID|SECRET}`.\n *\n * `PROVIDER` is the uppercase snake case version of the provider's id, followed by either `ID` or `SECRET` respectively.\n * :::\n *\n * `AUTH_SECRET` and `AUTH_URL` are also aliased for `NEXTAUTH_SECRET` and `NEXTAUTH_URL` for consistency.\n *\n * To add social login to your app, the configuration becomes:\n *\n * ```ts title=\"auth.ts\"\n * import NextAuth from \"next-auth\"\n * import GitHub from \"next-auth/providers/GitHub\"\n * export const { handlers, auth } = NextAuth({ providers: [ GitHub ] })\n * ```\n *\n * And the `.env.local` file:\n *\n * ```sh title=\".env.local\"\n * AUTH_GITHUB_ID=...\n * AUTH_GITHUB_SECRET=...\n * AUTH_SECRET=...\n * ```\n *\n * :::tip\n * In production, `AUTH_SECRET` is a required environment variable - if not set, NextAuth.js will throw an error. See [MissingSecretError](https://authjs.dev/reference/core/errors#missingsecret) for more details.\n * :::\n *\n * If you need to override the default values for a provider, you can still call it as a function `GitHub({...})` as before.\n *\n * @module index\n */\nimport { Auth } from \"@auth/core\";\nimport { reqWithEnvUrl, setEnvDefaults } from \"./lib/env.js\";\nimport { initAuth } from \"./lib/index.js\";\nimport { signIn, signOut, update } from \"./lib/actions.js\";\n/**\n *  Initialize NextAuth.js.\n *\n *  @example\n * ```ts title=\"auth.ts\"\n * import NextAuth from \"next-auth\"\n * import GitHub from \"@auth/core/providers/github\"\n *\n * export const { handlers, auth } = NextAuth({ providers: [GitHub] })\n * ```\n */\nexport default function NextAuth(config) {\n    setEnvDefaults(config);\n    const httpHandler = (req) => Auth(reqWithEnvUrl(req), config);\n    return {\n        handlers: { GET: httpHandler, POST: httpHandler },\n        // @ts-expect-error\n        auth: initAuth(config),\n        signIn(provider, options, authorizationParams) {\n            return signIn(provider, options, authorizationParams, config);\n        },\n        signOut(options) {\n            return signOut(options, config);\n        },\n        update(data) {\n            return update(data, config);\n        },\n    };\n}\n","/**\n * <div style={{backgroundColor: \"#24292f\", display: \"flex\", justifyContent: \"space-between\", color: \"#fff\", padding: 16}}>\n * <span>Built-in <b>GitHub</b> integration.</span>\n * <a href=\"https://github.com\">\n *   <img style={{display: \"block\"}} src=\"https://authjs.dev/img/providers/github-dark.svg\" height=\"48\" width=\"48\"/>\n * </a>\n * </div>\n *\n * @module providers/github\n */\n/**\n * Add GitHub login to your page and make requests to [GitHub APIs](https://docs.github.com/en/rest).\n *\n * ### Setup\n *\n * #### Callback URL\n * ```\n * https://example.com/api/auth/callback/github\n * ```\n *\n * #### Configuration\n * ```ts\n * import { Auth } from \"@auth/core\"\n * import GitHub from \"@auth/core/providers/github\"\n *\n * const request = new Request(origin)\n * const response = await Auth(request, {\n *   providers: [GitHub({ clientId: GITHUB_CLIENT_ID, clientSecret: GITHUB_CLIENT_SECRET })],\n * })\n * ```\n *\n * ### Resources\n *\n * - [GitHub - Creating an OAuth App](https://docs.github.com/en/developers/apps/building-oauth-apps/creating-an-oauth-app)\n * - [GitHub - Authorizing OAuth Apps](https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps)\n * - [GitHub - Configure your GitHub OAuth Apps](https://github.com/settings/developers)\n * - [Learn more about OAuth](https://authjs.dev/concepts/oauth)\n * - [Source code](https://github.com/nextauthjs/next-auth/blob/main/packages/core/src/providers/github.ts)\n *\n * ### Notes\n *\n * By default, Auth.js assumes that the GitHub provider is\n * based on the [OAuth 2](https://www.rfc-editor.org/rfc/rfc6749.html) specification.\n *\n * :::tip\n *\n * The GitHub provider comes with a [default configuration](https://github.com/nextauthjs/next-auth/blob/main/packages/core/src/providers/github.ts).\n * To override the defaults for your use case, check out [customizing a built-in OAuth provider](https://authjs.dev/guides/providers/custom-provider#override-default-options).\n *\n * :::\n *\n * :::info **Disclaimer**\n *\n * If you think you found a bug in the default configuration, you can [open an issue](https://authjs.dev/new/provider-issue).\n *\n * Auth.js strictly adheres to the specification and it cannot take responsibility for any deviation from\n * the spec by the provider. You can open an issue, but if the problem is non-compliance with the spec,\n * we might not pursue a resolution. You can ask for more help in [Discussions](https://authjs.dev/new/github-discussions).\n *\n * :::\n */\nexport default function GitHub(config) {\n    return {\n        id: \"github\",\n        name: \"GitHub\",\n        type: \"oauth\",\n        authorization: {\n            url: \"https://github.com/login/oauth/authorize\",\n            params: { scope: \"read:user user:email\" },\n        },\n        token: \"https://github.com/login/oauth/access_token\",\n        userinfo: {\n            url: \"https://api.github.com/user\",\n            async request({ tokens, provider }) {\n                const profile = await fetch(provider.userinfo?.url, {\n                    headers: {\n                        Authorization: `Bearer ${tokens.access_token}`,\n                        \"User-Agent\": \"authjs\",\n                    },\n                }).then(async (res) => await res.json());\n                if (!profile.email) {\n                    // If the user does not have a public email, get another via the GitHub API\n                    // See https://docs.github.com/en/rest/users/emails#list-public-email-addresses-for-the-authenticated-user\n                    const res = await fetch(\"https://api.github.com/user/emails\", {\n                        headers: {\n                            Authorization: `Bearer ${tokens.access_token}`,\n                            \"User-Agent\": \"authjs\",\n                        },\n                    });\n                    if (res.ok) {\n                        const emails = await res.json();\n                        profile.email = (emails.find((e) => e.primary) ?? emails[0]).email;\n                    }\n                }\n                return profile;\n            },\n        },\n        profile(profile) {\n            return {\n                id: profile.id.toString(),\n                name: profile.name ?? profile.login,\n                email: profile.email,\n                image: profile.avatar_url,\n            };\n        },\n        style: {\n            logo: \"/github.svg\",\n            logoDark: \"/github-dark.svg\",\n            bg: \"#fff\",\n            bgDark: \"#24292f\",\n            text: \"#000\",\n            textDark: \"#fff\",\n        },\n        options: config,\n    };\n}\n","import NextAuth from 'next-auth';\nimport GitHub from 'next-auth/providers/github';\n\nexport const {\n  handlers: { GET, POST },\n  auth,\n} = NextAuth({\n  providers: [\n    GitHub({\n      clientId: process.env.OAUTH_CLIENT_KEY as string,\n      clientSecret: process.env.OAUTH_CLIENT_SECRET as string,\n    }),\n  ],\n  pages: {\n    signIn: '/sign-in',\n  },\n});\n","export { GET, POST } from 'app/auth';\nexport const runtime = 'edge';\n","import { AppRouteRouteModule } from \"next/dist/server/future/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/future/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"/Users/walker/Desktop/donjuanpedro.github.io/app/api/auth/[...nextauth]/route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"export\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/auth/[...nextauth]/route\",\n        pathname: \"/api/auth/[...nextauth]\",\n        filename: \"route\",\n        bundlePath: \"app/api/auth/[...nextauth]/route\"\n    },\n    resolvedPagePath: \"/Users/walker/Desktop/donjuanpedro.github.io/app/api/auth/[...nextauth]/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/auth/[...nextauth]/route\";\nfunction patchFetch() {\n    return _patchFetch({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\nexport { routeModule, requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, originalPathname, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","import { EdgeRouteModuleWrapper } from \"next/dist/server/web/edge-route-module-wrapper\";\n// Import the userland code.\nimport * as module from \"next-app-loader?name=app%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&page=%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&pagePath=private-next-app-dir%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute.ts&appDir=%2FUsers%2Fwalker%2FDesktop%2Fdonjuanpedro.github.io%2Fapp&appPaths=%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=export&preferredRegion=&middlewareConfig=e30%3D!private-next-app-dir/api/auth/[...nextauth]/route.ts?__next_edge_ssr_entry__\";\nexport const ComponentMod = module;\nexport default EdgeRouteModuleWrapper.wrap(module.routeModule);\n\n//# sourceMappingURL=edge-app-route.js.map","/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var dec = opt.decode || decode;\n\n  var index = 0\n  while (index < str.length) {\n    var eqIdx = str.indexOf('=', index)\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break\n    }\n\n    var endIdx = str.indexOf(';', index)\n\n    if (endIdx === -1) {\n      endIdx = str.length\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1\n      continue\n    }\n\n    var key = str.slice(index, eqIdx).trim()\n\n    // only assign once\n    if (undefined === obj[key]) {\n      var val = str.slice(eqIdx + 1, endIdx).trim()\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1)\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n\n    index = endIdx + 1\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    var expires = opt.expires\n\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + expires.toUTCString()\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string'\n      ? opt.priority.toLowerCase()\n      : opt.priority\n\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low'\n        break\n      case 'medium':\n        str += '; Priority=Medium'\n        break\n      case 'high':\n        str += '; Priority=High'\n        break\n      default:\n        throw new TypeError('option priority is invalid')\n    }\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode (str) {\n  return str.indexOf('%') !== -1\n    ? decodeURIComponent(str)\n    : str\n}\n\n/**\n * URL-encode value.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate (val) {\n  return __toString.call(val) === '[object Date]' ||\n    val instanceof Date\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n","(()=>{var i={226:function(i,e){(function(o,a){\"use strict\";var r=\"1.0.35\",t=\"\",n=\"?\",s=\"function\",b=\"undefined\",w=\"object\",l=\"string\",d=\"major\",c=\"model\",u=\"name\",p=\"type\",m=\"vendor\",f=\"version\",h=\"architecture\",v=\"console\",g=\"mobile\",k=\"tablet\",x=\"smarttv\",_=\"wearable\",y=\"embedded\",q=350;var T=\"Amazon\",S=\"Apple\",z=\"ASUS\",N=\"BlackBerry\",A=\"Browser\",C=\"Chrome\",E=\"Edge\",O=\"Firefox\",U=\"Google\",j=\"Huawei\",P=\"LG\",R=\"Microsoft\",M=\"Motorola\",B=\"Opera\",V=\"Samsung\",D=\"Sharp\",I=\"Sony\",W=\"Viera\",F=\"Xiaomi\",G=\"Zebra\",H=\"Facebook\",L=\"Chromium OS\",Z=\"Mac OS\";var extend=function(i,e){var o={};for(var a in i){if(e[a]&&e[a].length%2===0){o[a]=e[a].concat(i[a])}else{o[a]=i[a]}}return o},enumerize=function(i){var e={};for(var o=0;o<i.length;o++){e[i[o].toUpperCase()]=i[o]}return e},has=function(i,e){return typeof i===l?lowerize(e).indexOf(lowerize(i))!==-1:false},lowerize=function(i){return i.toLowerCase()},majorize=function(i){return typeof i===l?i.replace(/[^\\d\\.]/g,t).split(\".\")[0]:a},trim=function(i,e){if(typeof i===l){i=i.replace(/^\\s\\s*/,t);return typeof e===b?i:i.substring(0,q)}};var rgxMapper=function(i,e){var o=0,r,t,n,b,l,d;while(o<e.length&&!l){var c=e[o],u=e[o+1];r=t=0;while(r<c.length&&!l){if(!c[r]){break}l=c[r++].exec(i);if(!!l){for(n=0;n<u.length;n++){d=l[++t];b=u[n];if(typeof b===w&&b.length>0){if(b.length===2){if(typeof b[1]==s){this[b[0]]=b[1].call(this,d)}else{this[b[0]]=b[1]}}else if(b.length===3){if(typeof b[1]===s&&!(b[1].exec&&b[1].test)){this[b[0]]=d?b[1].call(this,d,b[2]):a}else{this[b[0]]=d?d.replace(b[1],b[2]):a}}else if(b.length===4){this[b[0]]=d?b[3].call(this,d.replace(b[1],b[2])):a}}else{this[b]=d?d:a}}}}o+=2}},strMapper=function(i,e){for(var o in e){if(typeof e[o]===w&&e[o].length>0){for(var r=0;r<e[o].length;r++){if(has(e[o][r],i)){return o===n?a:o}}}else if(has(e[o],i)){return o===n?a:o}}return i};var $={\"1.0\":\"/8\",1.2:\"/1\",1.3:\"/3\",\"2.0\":\"/412\",\"2.0.2\":\"/416\",\"2.0.3\":\"/417\",\"2.0.4\":\"/419\",\"?\":\"/\"},X={ME:\"4.90\",\"NT 3.11\":\"NT3.51\",\"NT 4.0\":\"NT4.0\",2e3:\"NT 5.0\",XP:[\"NT 5.1\",\"NT 5.2\"],Vista:\"NT 6.0\",7:\"NT 6.1\",8:\"NT 6.2\",8.1:\"NT 6.3\",10:[\"NT 6.4\",\"NT 10.0\"],RT:\"ARM\"};var K={browser:[[/\\b(?:crmo|crios)\\/([\\w\\.]+)/i],[f,[u,\"Chrome\"]],[/edg(?:e|ios|a)?\\/([\\w\\.]+)/i],[f,[u,\"Edge\"]],[/(opera mini)\\/([-\\w\\.]+)/i,/(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,/(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i],[u,f],[/opios[\\/ ]+([\\w\\.]+)/i],[f,[u,B+\" Mini\"]],[/\\bopr\\/([\\w\\.]+)/i],[f,[u,B]],[/(kindle)\\/([\\w\\.]+)/i,/(lunascape|maxthon|netfront|jasmine|blazer)[\\/ ]?([\\w\\.]*)/i,/(avant |iemobile|slim)(?:browser)?[\\/ ]?([\\w\\.]*)/i,/(ba?idubrowser)[\\/ ]?([\\w\\.]+)/i,/(?:ms|\\()(ie) ([\\w\\.]+)/i,/(flock|rockmelt|midori|epiphany|silk|skyfire|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|qq|duckduckgo)\\/([-\\w\\.]+)/i,/(heytap|ovi)browser\\/([\\d\\.]+)/i,/(weibo)__([\\d\\.]+)/i],[u,f],[/(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i],[f,[u,\"UC\"+A]],[/microm.+\\bqbcore\\/([\\w\\.]+)/i,/\\bqbcore\\/([\\w\\.]+).+microm/i],[f,[u,\"WeChat(Win) Desktop\"]],[/micromessenger\\/([\\w\\.]+)/i],[f,[u,\"WeChat\"]],[/konqueror\\/([\\w\\.]+)/i],[f,[u,\"Konqueror\"]],[/trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i],[f,[u,\"IE\"]],[/ya(?:search)?browser\\/([\\w\\.]+)/i],[f,[u,\"Yandex\"]],[/(avast|avg)\\/([\\w\\.]+)/i],[[u,/(.+)/,\"$1 Secure \"+A],f],[/\\bfocus\\/([\\w\\.]+)/i],[f,[u,O+\" Focus\"]],[/\\bopt\\/([\\w\\.]+)/i],[f,[u,B+\" Touch\"]],[/coc_coc\\w+\\/([\\w\\.]+)/i],[f,[u,\"Coc Coc\"]],[/dolfin\\/([\\w\\.]+)/i],[f,[u,\"Dolphin\"]],[/coast\\/([\\w\\.]+)/i],[f,[u,B+\" Coast\"]],[/miuibrowser\\/([\\w\\.]+)/i],[f,[u,\"MIUI \"+A]],[/fxios\\/([-\\w\\.]+)/i],[f,[u,O]],[/\\bqihu|(qi?ho?o?|360)browser/i],[[u,\"360 \"+A]],[/(oculus|samsung|sailfish|huawei)browser\\/([\\w\\.]+)/i],[[u,/(.+)/,\"$1 \"+A],f],[/(comodo_dragon)\\/([\\w\\.]+)/i],[[u,/_/g,\" \"],f],[/(electron)\\/([\\w\\.]+) safari/i,/(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,/m?(qqbrowser|baiduboxapp|2345Explorer)[\\/ ]?([\\w\\.]+)/i],[u,f],[/(metasr)[\\/ ]?([\\w\\.]+)/i,/(lbbrowser)/i,/\\[(linkedin)app\\]/i],[u],[/((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i],[[u,H],f],[/(kakao(?:talk|story))[\\/ ]([\\w\\.]+)/i,/(naver)\\(.*?(\\d+\\.[\\w\\.]+).*\\)/i,/safari (line)\\/([\\w\\.]+)/i,/\\b(line)\\/([\\w\\.]+)\\/iab/i,/(chromium|instagram)[\\/ ]([-\\w\\.]+)/i],[u,f],[/\\bgsa\\/([\\w\\.]+) .*safari\\//i],[f,[u,\"GSA\"]],[/musical_ly(?:.+app_?version\\/|_)([\\w\\.]+)/i],[f,[u,\"TikTok\"]],[/headlesschrome(?:\\/([\\w\\.]+)| )/i],[f,[u,C+\" Headless\"]],[/ wv\\).+(chrome)\\/([\\w\\.]+)/i],[[u,C+\" WebView\"],f],[/droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i],[f,[u,\"Android \"+A]],[/(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i],[u,f],[/version\\/([\\w\\.\\,]+) .*mobile\\/\\w+ (safari)/i],[f,[u,\"Mobile Safari\"]],[/version\\/([\\w(\\.|\\,)]+) .*(mobile ?safari|safari)/i],[f,u],[/webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i],[u,[f,strMapper,$]],[/(webkit|khtml)\\/([\\w\\.]+)/i],[u,f],[/(navigator|netscape\\d?)\\/([-\\w\\.]+)/i],[[u,\"Netscape\"],f],[/mobile vr; rv:([\\w\\.]+)\\).+firefox/i],[f,[u,O+\" Reality\"]],[/ekiohf.+(flow)\\/([\\w\\.]+)/i,/(swiftfox)/i,/(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\\/ ]?([\\w\\.\\+]+)/i,/(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,/(firefox)\\/([\\w\\.]+)/i,/(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,/(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,/(links) \\(([\\w\\.]+)/i,/panasonic;(viera)/i],[u,f],[/(cobalt)\\/([\\w\\.]+)/i],[u,[f,/master.|lts./,\"\"]]],cpu:[[/(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i],[[h,\"amd64\"]],[/(ia32(?=;))/i],[[h,lowerize]],[/((?:i[346]|x)86)[;\\)]/i],[[h,\"ia32\"]],[/\\b(aarch64|arm(v?8e?l?|_?64))\\b/i],[[h,\"arm64\"]],[/\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i],[[h,\"armhf\"]],[/windows (ce|mobile); ppc;/i],[[h,\"arm\"]],[/((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i],[[h,/ower/,t,lowerize]],[/(sun4\\w)[;\\)]/i],[[h,\"sparc\"]],[/((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i],[[h,lowerize]]],device:[[/\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i],[c,[m,V],[p,k]],[/\\b((?:s[cgp]h|gt|sm)-\\w+|sc[g-]?[\\d]+a?|galaxy nexus)/i,/samsung[- ]([-\\w]+)/i,/sec-(sgh\\w+)/i],[c,[m,V],[p,g]],[/(?:\\/|\\()(ip(?:hone|od)[\\w, ]*)(?:\\/|;)/i],[c,[m,S],[p,g]],[/\\((ipad);[-\\w\\),; ]+apple/i,/applecoremedia\\/[\\w\\.]+ \\((ipad)/i,/\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i],[c,[m,S],[p,k]],[/(macintosh);/i],[c,[m,S]],[/\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i],[c,[m,D],[p,g]],[/\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i],[c,[m,j],[p,k]],[/(?:huawei|honor)([-\\w ]+)[;\\)]/i,/\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i],[c,[m,j],[p,g]],[/\\b(poco[\\w ]+)(?: bui|\\))/i,/\\b; (\\w+) build\\/hm\\1/i,/\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,/\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,/\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\\))/i],[[c,/_/g,\" \"],[m,F],[p,g]],[/\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i],[[c,/_/g,\" \"],[m,F],[p,k]],[/; (\\w+) bui.+ oppo/i,/\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i],[c,[m,\"OPPO\"],[p,g]],[/vivo (\\w+)(?: bui|\\))/i,/\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i],[c,[m,\"Vivo\"],[p,g]],[/\\b(rmx[12]\\d{3})(?: bui|;|\\))/i],[c,[m,\"Realme\"],[p,g]],[/\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,/\\bmot(?:orola)?[- ](\\w*)/i,/((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i],[c,[m,M],[p,g]],[/\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i],[c,[m,M],[p,k]],[/((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i],[c,[m,P],[p,k]],[/(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,/\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i,/\\blg-?([\\d\\w]+) bui/i],[c,[m,P],[p,g]],[/(ideatab[-\\w ]+)/i,/lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i],[c,[m,\"Lenovo\"],[p,k]],[/(?:maemo|nokia).*(n900|lumia \\d+)/i,/nokia[-_ ]?([-\\w\\.]*)/i],[[c,/_/g,\" \"],[m,\"Nokia\"],[p,g]],[/(pixel c)\\b/i],[c,[m,U],[p,k]],[/droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i],[c,[m,U],[p,g]],[/droid.+ (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i],[c,[m,I],[p,g]],[/sony tablet [ps]/i,/\\b(?:sony)?sgp\\w+(?: bui|\\))/i],[[c,\"Xperia Tablet\"],[m,I],[p,k]],[/ (kb2005|in20[12]5|be20[12][59])\\b/i,/(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i],[c,[m,\"OnePlus\"],[p,g]],[/(alexa)webm/i,/(kf[a-z]{2}wi|aeo[c-r]{2})( bui|\\))/i,/(kf[a-z]+)( bui|\\)).+silk\\//i],[c,[m,T],[p,k]],[/((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i],[[c,/(.+)/g,\"Fire Phone $1\"],[m,T],[p,g]],[/(playbook);[-\\w\\),; ]+(rim)/i],[c,m,[p,k]],[/\\b((?:bb[a-f]|st[hv])100-\\d)/i,/\\(bb10; (\\w+)/i],[c,[m,N],[p,g]],[/(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i],[c,[m,z],[p,k]],[/ (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i],[c,[m,z],[p,g]],[/(nexus 9)/i],[c,[m,\"HTC\"],[p,k]],[/(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,/(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,/(alcatel|geeksphone|nexian|panasonic(?!(?:;|\\.))|sony(?!-bra))[-_ ]?([-\\w]*)/i],[m,[c,/_/g,\" \"],[p,g]],[/droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i],[c,[m,\"Acer\"],[p,k]],[/droid.+; (m[1-5] note) bui/i,/\\bmz-([-\\w]{2,})/i],[c,[m,\"Meizu\"],[p,g]],[/(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[-_ ]?([-\\w]*)/i,/(hp) ([\\w ]+\\w)/i,/(asus)-?(\\w+)/i,/(microsoft); (lumia[\\w ]+)/i,/(lenovo)[-_ ]?([-\\w]+)/i,/(jolla)/i,/(oppo) ?([\\w ]+) bui/i],[m,c,[p,g]],[/(kobo)\\s(ereader|touch)/i,/(archos) (gamepad2?)/i,/(hp).+(touchpad(?!.+tablet)|tablet)/i,/(kindle)\\/([\\w\\.]+)/i,/(nook)[\\w ]+build\\/(\\w+)/i,/(dell) (strea[kpr\\d ]*[\\dko])/i,/(le[- ]+pan)[- ]+(\\w{1,9}) bui/i,/(trinity)[- ]*(t\\d{3}) bui/i,/(gigaset)[- ]+(q\\w{1,9}) bui/i,/(vodafone) ([\\w ]+)(?:\\)| bui)/i],[m,c,[p,k]],[/(surface duo)/i],[c,[m,R],[p,k]],[/droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i],[c,[m,\"Fairphone\"],[p,g]],[/(u304aa)/i],[c,[m,\"AT&T\"],[p,g]],[/\\bsie-(\\w*)/i],[c,[m,\"Siemens\"],[p,g]],[/\\b(rct\\w+) b/i],[c,[m,\"RCA\"],[p,k]],[/\\b(venue[\\d ]{2,7}) b/i],[c,[m,\"Dell\"],[p,k]],[/\\b(q(?:mv|ta)\\w+) b/i],[c,[m,\"Verizon\"],[p,k]],[/\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i],[c,[m,\"Barnes & Noble\"],[p,k]],[/\\b(tm\\d{3}\\w+) b/i],[c,[m,\"NuVision\"],[p,k]],[/\\b(k88) b/i],[c,[m,\"ZTE\"],[p,k]],[/\\b(nx\\d{3}j) b/i],[c,[m,\"ZTE\"],[p,g]],[/\\b(gen\\d{3}) b.+49h/i],[c,[m,\"Swiss\"],[p,g]],[/\\b(zur\\d{3}) b/i],[c,[m,\"Swiss\"],[p,k]],[/\\b((zeki)?tb.*\\b) b/i],[c,[m,\"Zeki\"],[p,k]],[/\\b([yr]\\d{2}) b/i,/\\b(dragon[- ]+touch |dt)(\\w{5}) b/i],[[m,\"Dragon Touch\"],c,[p,k]],[/\\b(ns-?\\w{0,9}) b/i],[c,[m,\"Insignia\"],[p,k]],[/\\b((nxa|next)-?\\w{0,9}) b/i],[c,[m,\"NextBook\"],[p,k]],[/\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i],[[m,\"Voice\"],c,[p,g]],[/\\b(lvtel\\-)?(v1[12]) b/i],[[m,\"LvTel\"],c,[p,g]],[/\\b(ph-1) /i],[c,[m,\"Essential\"],[p,g]],[/\\b(v(100md|700na|7011|917g).*\\b) b/i],[c,[m,\"Envizen\"],[p,k]],[/\\b(trio[-\\w\\. ]+) b/i],[c,[m,\"MachSpeed\"],[p,k]],[/\\btu_(1491) b/i],[c,[m,\"Rotor\"],[p,k]],[/(shield[\\w ]+) b/i],[c,[m,\"Nvidia\"],[p,k]],[/(sprint) (\\w+)/i],[m,c,[p,g]],[/(kin\\.[onetw]{3})/i],[[c,/\\./g,\" \"],[m,R],[p,g]],[/droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i],[c,[m,G],[p,k]],[/droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i],[c,[m,G],[p,g]],[/smart-tv.+(samsung)/i],[m,[p,x]],[/hbbtv.+maple;(\\d+)/i],[[c,/^/,\"SmartTV\"],[m,V],[p,x]],[/(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i],[[m,P],[p,x]],[/(apple) ?tv/i],[m,[c,S+\" TV\"],[p,x]],[/crkey/i],[[c,C+\"cast\"],[m,U],[p,x]],[/droid.+aft(\\w)( bui|\\))/i],[c,[m,T],[p,x]],[/\\(dtv[\\);].+(aquos)/i,/(aquos-tv[\\w ]+)\\)/i],[c,[m,D],[p,x]],[/(bravia[\\w ]+)( bui|\\))/i],[c,[m,I],[p,x]],[/(mitv-\\w{5}) bui/i],[c,[m,F],[p,x]],[/Hbbtv.*(technisat) (.*);/i],[m,c,[p,x]],[/\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,/hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w\\+ ]*; *([\\w\\d][^;]*);([^;]*)/i],[[m,trim],[c,trim],[p,x]],[/\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i],[[p,x]],[/(ouya)/i,/(nintendo) ([wids3utch]+)/i],[m,c,[p,v]],[/droid.+; (shield) bui/i],[c,[m,\"Nvidia\"],[p,v]],[/(playstation [345portablevi]+)/i],[c,[m,I],[p,v]],[/\\b(xbox(?: one)?(?!; xbox))[\\); ]/i],[c,[m,R],[p,v]],[/((pebble))app/i],[m,c,[p,_]],[/(watch)(?: ?os[,\\/]|\\d,\\d\\/)[\\d\\.]+/i],[c,[m,S],[p,_]],[/droid.+; (glass) \\d/i],[c,[m,U],[p,_]],[/droid.+; (wt63?0{2,3})\\)/i],[c,[m,G],[p,_]],[/(quest( 2| pro)?)/i],[c,[m,H],[p,_]],[/(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i],[m,[p,y]],[/(aeobc)\\b/i],[c,[m,T],[p,y]],[/droid .+?; ([^;]+?)(?: bui|\\) applew).+? mobile safari/i],[c,[p,g]],[/droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i],[c,[p,k]],[/\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i],[[p,k]],[/(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i],[[p,g]],[/(android[-\\w\\. ]{0,9});.+buil/i],[c,[m,\"Generic\"]]],engine:[[/windows.+ edge\\/([\\w\\.]+)/i],[f,[u,E+\"HTML\"]],[/webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i],[f,[u,\"Blink\"]],[/(presto)\\/([\\w\\.]+)/i,/(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i,/ekioh(flow)\\/([\\w\\.]+)/i,/(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,/(icab)[\\/ ]([23]\\.[\\d\\.]+)/i,/\\b(libweb)/i],[u,f],[/rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i],[f,u]],os:[[/microsoft (windows) (vista|xp)/i],[u,f],[/(windows) nt 6\\.2; (arm)/i,/(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i,/(windows)[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i],[u,[f,strMapper,X]],[/(win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i],[[u,\"Windows\"],[f,strMapper,X]],[/ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,/ios;fbsv\\/([\\d\\.]+)/i,/cfnetwork\\/.+darwin/i],[[f,/_/g,\".\"],[u,\"iOS\"]],[/(mac os x) ?([\\w\\. ]*)/i,/(macintosh|mac_powerpc\\b)(?!.+haiku)/i],[[u,Z],[f,/_/g,\".\"]],[/droid ([\\w\\.]+)\\b.+(android[- ]x86|harmonyos)/i],[f,u],[/(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\\/ ]?([\\w\\.]*)/i,/(blackberry)\\w*\\/([\\w\\.]*)/i,/(tizen|kaios)[\\/ ]([\\w\\.]+)/i,/\\((series40);/i],[u,f],[/\\(bb(10);/i],[f,[u,N]],[/(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i],[f,[u,\"Symbian\"]],[/mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i],[f,[u,O+\" OS\"]],[/web0s;.+rt(tv)/i,/\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i],[f,[u,\"webOS\"]],[/watch(?: ?os[,\\/]|\\d,\\d\\/)([\\d\\.]+)/i],[f,[u,\"watchOS\"]],[/crkey\\/([\\d\\.]+)/i],[f,[u,C+\"cast\"]],[/(cros) [\\w]+(?:\\)| ([\\w\\.]+)\\b)/i],[[u,L],f],[/panasonic;(viera)/i,/(netrange)mmh/i,/(nettv)\\/(\\d+\\.[\\w\\.]+)/i,/(nintendo|playstation) ([wids345portablevuch]+)/i,/(xbox); +xbox ([^\\);]+)/i,/\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,/(mint)[\\/\\(\\) ]?(\\w*)/i,/(mageia|vectorlinux)[; ]/i,/([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,/(hurd|linux) ?([\\w\\.]*)/i,/(gnu) ?([\\w\\.]*)/i,/\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i,/(haiku) (\\w+)/i],[u,f],[/(sunos) ?([\\w\\.\\d]*)/i],[[u,\"Solaris\"],f],[/((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,/(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,/\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i,/(unix) ?([\\w\\.]*)/i],[u,f]]};var UAParser=function(i,e){if(typeof i===w){e=i;i=a}if(!(this instanceof UAParser)){return new UAParser(i,e).getResult()}var r=typeof o!==b&&o.navigator?o.navigator:a;var n=i||(r&&r.userAgent?r.userAgent:t);var v=r&&r.userAgentData?r.userAgentData:a;var x=e?extend(K,e):K;var _=r&&r.userAgent==n;this.getBrowser=function(){var i={};i[u]=a;i[f]=a;rgxMapper.call(i,n,x.browser);i[d]=majorize(i[f]);if(_&&r&&r.brave&&typeof r.brave.isBrave==s){i[u]=\"Brave\"}return i};this.getCPU=function(){var i={};i[h]=a;rgxMapper.call(i,n,x.cpu);return i};this.getDevice=function(){var i={};i[m]=a;i[c]=a;i[p]=a;rgxMapper.call(i,n,x.device);if(_&&!i[p]&&v&&v.mobile){i[p]=g}if(_&&i[c]==\"Macintosh\"&&r&&typeof r.standalone!==b&&r.maxTouchPoints&&r.maxTouchPoints>2){i[c]=\"iPad\";i[p]=k}return i};this.getEngine=function(){var i={};i[u]=a;i[f]=a;rgxMapper.call(i,n,x.engine);return i};this.getOS=function(){var i={};i[u]=a;i[f]=a;rgxMapper.call(i,n,x.os);if(_&&!i[u]&&v&&v.platform!=\"Unknown\"){i[u]=v.platform.replace(/chrome os/i,L).replace(/macos/i,Z)}return i};this.getResult=function(){return{ua:this.getUA(),browser:this.getBrowser(),engine:this.getEngine(),os:this.getOS(),device:this.getDevice(),cpu:this.getCPU()}};this.getUA=function(){return n};this.setUA=function(i){n=typeof i===l&&i.length>q?trim(i,q):i;return this};this.setUA(n);return this};UAParser.VERSION=r;UAParser.BROWSER=enumerize([u,f,d]);UAParser.CPU=enumerize([h]);UAParser.DEVICE=enumerize([c,m,p,v,g,x,k,_,y]);UAParser.ENGINE=UAParser.OS=enumerize([u,f]);if(typeof e!==b){if(\"object\"!==b&&i.exports){e=i.exports=UAParser}e.UAParser=UAParser}else{if(typeof define===s&&define.amd){define((function(){return UAParser}))}else if(typeof o!==b){o.UAParser=UAParser}}var Q=typeof o!==b&&(o.jQuery||o.Zepto);if(Q&&!Q.ua){var Y=new UAParser;Q.ua=Y.getResult();Q.ua.get=function(){return Y.getUA()};Q.ua.set=function(i){Y.setUA(i);var e=Y.getResult();for(var o in e){Q.ua[o]=e[o]}}}})(typeof window===\"object\"?window:this)}};var e={};function __nccwpck_require__(o){var a=e[o];if(a!==undefined){return a.exports}var r=e[o]={exports:{}};var t=true;try{i[o].call(r.exports,r,r.exports,__nccwpck_require__);t=false}finally{if(t)delete e[o]}return r.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var o=__nccwpck_require__(226);module.exports=o})();"],"names":["module","exports","require","USER_AGENT","jwkCache","config","__classPrivateFieldSet","receiver","state","value","kind","f","has","call","set","__classPrivateFieldGet","get","defaultCookies","useSecureCookies","cookiePrefix","sessionToken","name","options","httpOnly","sameSite","path","secure","callbackUrl","csrfToken","pkceCodeVerifier","maxAge","nonce","cookie_SessionStore","constructor","option","req","logger","_SessionStore_instances","add","_SessionStore_chunks","_SessionStore_option","_SessionStore_logger","cookies","cookieName","getAll","startsWith","Map","keys","sortedKeys","sort","a","b","aSuffix","split","pop","parseInt","map","key","join","chunk","_SessionStore_clean","_SessionStore_chunk","Object","values","clean","WeakMap","WeakSet","cookie","chunkCount","Math","ceil","length","ALLOWED_COOKIE_SIZE","i","substr","push","debug","message","emptyCookieSize","valueSize","chunks","c","cleanedChunks","AuthError","Error","cause","undefined","err","captureStackTrace","AdapterError","AuthorizedCallbackError","CallbackRouteError","ErrorPageLoop","EventError","InvalidCallbackUrl","InvalidEndpoints","InvalidCheck","JWTSessionError","MissingAdapter","MissingAdapterMethods","MissingAuthorize","errors_MissingSecret","OAuthAccountNotLinked","OAuthCallbackError","OAuthProfileParseError","SessionTokenError","SignInError","SignOutError","UnknownAction","UnsupportedStrategy","UntrustedHost","Verification","warned","isValidHttpUrl","url","baseUrl","test","URL","protocol","hasCredentials","hasEmail","emailMethods","sessionMethods","getGlobal","globalThis","self","window","hkdf","digest","ikm","salt","info","keylen","crypto","subtle","Uint8Array","deriveBits","hash","importKey","normalizeUint8Array","input","label","TextEncoder","encode","web_hkdf","normalizeDigest","normalizeIkm","byteLength","normalizeInfo","TypeError","normalizeKeylen","Number","isInteger","webcrypto","webcrypto_isCryptoKey","CryptoKey","digest_digest","algorithm","data","subtleDigest","slice","buffer_utils_encoder","buffer_utils_decoder","TextDecoder","buffer_utils_concat","buffers","buf","reduce","acc","forEach","buffer","writeUInt32BE","offset","MAX_INT32","uint64be","floor","uint32be","lengthAndInput","concatKdf","secret","bits","iterations","res","iter","runtime_digest","base64url_encodeBase64","unencoded","arr","String","fromCharCode","apply","subarray","btoa","replace","base64url_decodeBase64","binary","atob","encoded","bytes","charCodeAt","decode","_a","JOSEError","code","JWTClaimValidationFailed","claim","reason","JWTExpired","errors_JOSEAlgNotAllowed","arguments","errors_JOSENotSupported","errors_JWEDecryptionFailed","errors_JWEInvalid","errors_JWTInvalid","JWKSInvalid","JWKSNoMatchingKey","JWKSMultipleMatchingKeys","Symbol","asyncIterator","JWKSTimeout","runtime_random","getRandomValues","bind","bitLength","alg","lib_iv","check_iv_length","enc","iv","check_cek_length","cek","expected","actual","timing_safe_equal","len","out","unusable","prop","isAlgorithm","checkEncCryptoKey","usages","checkUsage","some","includes","msg","last","types","invalid_key_input","withAlg","is_key_like","is_key_like_types","cbcDecrypt","ciphertext","tag","aad","macCheckPassed","plaintext","keySize","encKey","macKey","macData","expectedTag","sign","decrypt","_b","gcmDecrypt","additionalData","tagLength","inflate","deflate","is_disjoint","headers","sources","filter","Boolean","header","parameters","size","Set","parameter","is_object_isObject","prototype","toString","getPrototypeOf","proto","bogus","checkKeySize","getCryptoKey","usage","wrap","cryptoKey","cryptoKeyCek","wrapKey","unwrap","encryptedKey","unwrapKey","exportKey","deriveKey","publicKey","privateKey","keyLength","apu","apv","namedCurve","public","generateEpk","generateKey","ecdhAllowed","pbes2kw_deriveKey","p2s","p2c","checkP2s","subtleAlg","pbes2kw_getCryptoKey","encrypt","derived","pbes2kw_decrypt","subtleRsaEs","check_key_length","modulusLength","rsaes_encrypt","rsaes_decrypt","cek_bitLength","lib_cek","parse","jwk","keyUsages","subtleMapping","kty","d","crv","rest","ext","key_ops","k","keyData","use","import_importJWK","octAsKeyObject","jwk_to_key","oth","symmetricTypeCheck","type","asymmetricTypeCheck","check_key_type","cbcEncrypt","gcmEncrypt","encrypted","encrypt_encrypt","aesgcmkw_wrap","jweAlgorithm","runtime_encrypt","aesgcmkw_unwrap","runtime_decrypt","decryptKeyManagement","joseHeader","partyUInfo","partyVInfo","epk","sharedSecret","p2cLimit","maxPBES2Count","_c","_d","_e","validate_crit","Err","recognizedDefault","recognizedOption","protectedHeader","recognized","crit","Array","isArray","entries","validate_algorithms","algorithms","s","decrypt_flattenedDecrypt","jwe","parsedProt","protected","unprotected","encrypted_key","JSON","zip","keyManagementAlgorithms","contentEncryptionAlgorithms","resolvedKey","decrypt_key_management","_f","inflateRaw","result","additionalAuthenticatedData","_g","sharedUnprotectedHeader","unprotectedHeader","compactDecrypt","decrypted","keyToJWK","extractable","exportJWK","key_to_jwk","encrypt_key_management_encryptKeyManagement","providedCek","providedParameters","ephemeralKey","x","y","kwAlg","encrypt_unprotected","encrypt_FlattenedEncrypt","_plaintext","setKeyManagementParameters","_keyManagementParameters","setProtectedHeader","_protectedHeader","setSharedUnprotectedHeader","_sharedUnprotectedHeader","setUnprotectedHeader","_unprotectedHeader","setAdditionalAuthenticatedData","_aad","setContentEncryptionKey","_cek","setInitializationVector","_iv","aadMember","encrypt_key_management","stringify","deflated","deflateRaw","epoch","date","getTime","REGEX","secs","matched","exec","str","parseFloat","toLowerCase","round","normalizeTyp","checkAudiencePresence","audPayload","audOption","jwt_claims_set","encodedPayload","payload","tolerance","typ","requiredClaims","issuer","subject","audience","maxTokenAge","reverse","iss","sub","aud","clockTolerance","currentDate","now","Date","iat","nbf","exp","age","jwtDecrypt","jwt","CompactEncrypt","_flattened","produce_ProduceJWT","_payload","setIssuer","setSubject","setAudience","setJti","jwtId","jti","setNotBefore","setExpirationTime","setIssuedAt","EncryptJWT","replicateIssuerAsHeader","_replicateIssuerAsHeader","replicateSubjectAsHeader","_replicateSubjectAsHeader","replicateAudienceAsHeader","_replicateAudienceAsHeader","isJWKLike","importWithAlgCache","cache","cached","jwt_encode","params","token","encryptionSecret","getDerivedEncryptionKey","randomUUID","jwt_decode","createCallbackUrl","paramValue","cookieValue","callbacks","origin","redirect","callbackUrlCookie","getBody","body","method","contentType","json","fromEntries","URLSearchParams","text","actions","toInternalRequest","providerId","searchParams","delete","pathname","action","find","providerIdOrAction","node_modules_cookie","Q","error","query","e","toResponse","Headers","cookieHeader","q","append","response","Response","status","createHash","from","padStart","randomString","i2hex","createCSRFToken","isPost","bodyValue","csrfTokenHash","csrfTokenVerified","defaultCallbacks","signIn","session","merge_isObject","item","defaultProfile","id","profile","stripUndefined","nickname","preferred_username","email","image","picture","defaultAccount","access_token","account","id_token","refresh_token","expires_at","scope","token_type","session_state","o","v","normalizeEndpoint","request","conform","red","logger_reset","console","stack","substring","warn","metadata","log","init","authOptions","reqUrl","reqCookies","reqCallbackUrl","reqCsrfToken","csrfDisabled","methods","parsed","parseUrl","defaultUrl","_url","base","host","providers","provider","parseProviders","p","userOptions","defaults","merged","merge","target","source","shift","assign","signinUrl","redirectProxyUrl","normalizeOAuth","wellKnown","authorization","userinfo","checks","isOnRedirectProxy","pages","theme","colorScheme","logo","brandColor","buttonText","strategy","adapter","updateAge","generateSessionToken","events","args","adapterErrorHandler","csrfCookie","n","preact_module_l","u","t","l","parentNode","removeChild","r","props","ref","__k","__","__b","__e","__d","__c","__h","__v","vnode","preact_module_p","children","context","_","indexOf","g","__r","debounceRendering","setTimeout","__P","j","__n","ownerSVGElement","z","w","h","C","m","A","N","unmount","current","M","componentWillUnmount","appendChild","nextSibling","insertBefore","$","setProperty","H","style","cssText","addEventListener","T","I","removeEventListener","removeAttribute","setAttribute","event","contextType","__E","render","O","_sb","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","L","localName","nodeType","document","createTextNode","createElementNS","createElement","is","childNodes","dangerouslySetInnerHTML","attributes","__html","innerHTML","checked","diffed","S","defaultProps","firstChild","getDerivedStateFromError","setState","componentDidCatch","forceUpdate","dist_r","dist_n","dist_o","dist_i","dist_a","dist_s","dist_f","dist_c","dist_u","dist_","dist_d","dist_v","dist_h","dist_g","dist_m","shallow","dist_k","dist_x","pretty","voidElements","sortAttributes","allAttributes","xml","attributeHook","dist_y","renderRootComponent","shallowHighOrder","F","_dirty","_nextState","E","displayName","Function","match","D","P","W","R","class","for","U","selected","V","Z","B","G","J","K","X","Y","dist_j","dist_C","dist_O","shallowRender","jsxRuntime_module_","jsxRuntime_module_o","__source","__self","signinErrors","default","signin","oauthsignin","oauthcallbackerror","oauthcreateaccount","emailcreateaccount","callback","oauthaccountnotlinked","emailsignin","credentialssignin","sessionrequired","styles","send","html","title","renderPage","SigninPage","errorType","documentElement","logos","className","bg","bgDark","textDark","gap","loading","height","width","src","logoDark","htmlFor","autoFocus","placeholder","required","credentials","credential","signout","SignoutPage","alt","verifyRequest","VerifyRequestPage","href","ErrorPage","signinPageUrl","errors","heading","configuration","accessdenied","verification","fromDate","time","handleLogin","_profile","_account","providerAccountId","sessionStrategy","user","createUser","updateUser","getUser","getUserByAccount","getUserByEmail","linkAccount","createSession","getSessionAndUser","deleteSession","isNewUser","useJwtSession","userAndSession","userByEmail","emailVerified","newUser","userId","expires","userByAccount","tokenSet","allowDangerousEmailAccountLinking","navigator","userAgent","clockSkew","build_encoder","build_decoder","b64u","decodeBase64Url","OPE","encodeBase64Url","ArrayBuffer","LRU","maxSize","_cache","update","UnsupportedOperationError","OperationProcessingError","dpopNonces","build_isCryptoKey","isPrivateKey","processDpopNonce","isJsonObject","prepareHeaders","signal","AbortSignal","discoveryRequest","issuerIdentifier","fetch","then","validateString","processDiscoveryResponse","expectedIssuerIdentifier","assertReadableResponse","randomBytes","calculatePKCECodeChallenge","codeVerifier","formUrlEncode","encodeURIComponent","keyToJws","psAlg","rsAlg","esAlg","getClockSkew","client","isFinite","getClockTolerance","epochTime","privateKeyJwt","as","kid","clientAssertion","token_endpoint","client_id","assertAs","assertClient","assertClientSecret","clientSecret","assertNoClientPrivateKey","clientAuthMethod","clientPrivateKey","assertNoClientSecret","clientAuthentication","token_endpoint_auth_method","clientSecretBasic","clientId","username","password","client_secret","getKeyAndKid","claimsSet","signature","keyToSubtle","dpopProofJwt","htm","accessToken","proof","publicJwk","htu","ath","isOAuth2Error","SPLIT_REGEXP","SCHEMES_REGEXP","protectedResourceRequest","DPoP","userInfoRequest","userinfo_endpoint","userinfo_signed_response_alg","authenticatedRequest","tokenEndpointRequest","grantType","idTokenClaims","getValidatedIdTokenClaims","claims","processGenericAccessTokenResponse","ignoreIdToken","ignoreRefreshToken","handleOAuthBodyError","expires_in","validateJwt","checkSigningAlgorithm","id_token_signed_response_alg","id_token_signing_alg_values_supported","noSignatureCheck","validatePresence","validateIssuer","validateAudience","azp","require_auth_time","auth_time","branded","authorizationCodeGrantRequest","callbackParameters","redirectUri","getURLSearchParameter","additionalParameters","claimNames","expectNoNonce","skipAuthTimeCheck","processAuthorizationCodeOpenIDResponse","expectedNonce","default_max_age","processAuthorizationCodeOAuth2Response","bodyUsed","error_description","error_uri","algs","checkRsaKeyAlgorithm","ecdsaHashName","saltLength","jws","checkAlg","getKey","encodedSignature","verify","skipStateCheck","expectNoState","signCookie","toUpperCase","setTime","pkce","create","code_verifier","resCookies","decodeState","decoder","base64url_decode","checks_state","encodedState","base64url_encode","random","paramRandom","decodedState","checks_nonce","handleOAuth","randomState","challenges","tokens","discoveryResponse","discoveredAs","codeGrantParams","validateAuthResponse","expectedState","authorization_response_iss_parameter_supported","redirect_uri","codeGrantResponse","clone","parseWwwAuthenticateChallenges","scheme","index","matchAll","others","next","wwwAuth","idx","challenge","userinfoResponse","getUserAndAccount","OAuthProfile","handleAuthorized","callback_callback","sessionStore","sessionMaxAge","userByAccountOrFromProvider","proxyRedirect","handleState","authorizationResult","userFromProvider","unauthorizedOrError","defaultToken","trigger","newToken","cookieExpires","sessionCookies","identifier","hasToken","invite","useVerificationToken","hasInvite","expired","valueOf","loggedInUser","authorize","Request","session_session","newSession","isUpdate","decodedToken","newExpires","toISOString","updateSession","sessionUpdateAge","sessionIsDueToBeUpdatedDate","sessionPayload","signin_email","generateVerificationToken","Promise","all","sendVerificationRequest","createVerificationToken","getAuthorizationUrl","authorization_endpoint","authParams","response_type","code_challenge_methods_supported","signin_signin","normalizer","normalizeIdentifier","local","domain","trim","verificationRequest","signout_signout","signOut","AuthInternal","skipCSRFCheck","raw","Auth","setLogger","newLogger","internalRequest","assertionResult","assertConfig","warnings","trustHost","callbackUrlParam","defaultCallbackUrl","dbStrategy","onlyCredentials","missing","htmlPages","authOnErrorPage","internalResponse","detectOrigin","process","env","AUTH_URL","NEXTAUTH_URL","reqWithEnvUrl","nonBase","nextUrl","_req","callingExpression","staticGenerationStore","staticGenerationAsyncStorage","getStore","forceStatic","HeadersAdapter","seal","trackDynamicDataAccessed","getExpectedRequestStore","RequestCookiesAdapter","RequestCookies","requestStore","asyncActionStore","actionAsyncStorage","isAction","isAppRoute","mutableCookies","getSession","handleAuth","userMiddlewareOrRoute","sessionResponse","auth","authorized","spec_extension_response","isSameAuthAction","requestPath","redirectPath","lib_actions","augmentedReq","signInPage","basePath","finalResponse","cloneSetCookie","to","authCookies","getSetCookie","URLPattern","authorizationParams","foundProvider","headers_headers","shouldRedirect","redirectTo","uX","_provider","headers_cookies","handlers","GET","POST","NextAuth","NEXTAUTH_SECRET","AUTH_SECRET","AUTH_TRUST_HOST","VERCEL","AUTH_REDIRECT_PROXY_URL","finalProvider","ID","httpHandler","authResponse","OAUTH_CLIENT_KEY","OAUTH_CLIENT_SECRET","Authorization","ok","emails","primary","login","avatar_url","runtime","routeModule","module_compiled","AppRouteRouteModule","definition","route_kind","APP_ROUTE","page","filename","bundlePath","resolvedPagePath","nextConfigOutput","userland","route_namespaceObject","requestAsyncStorage","route_next_edge_ssr_entry_staticGenerationAsyncStorage","serverHooks","originalPathname","patchFetch","patch_fetch","XH","ComponentMod","route_next_edge_ssr_entry_namespaceObject","next_edge_app_route_loaderabsolutePagePath_private_next_app_dir_2Fapi_2Fauth_2F_5B_nextauth_5D_2Froute_ts_page_2Fapi_2Fauth_2F_5B_nextauth_5D_2Froute_appDirLoader_bmV4dC1hcHAtbG9hZGVyP25hbWU9YXBwJTJGYXBpJTJGYXV0aCUyRiU1Qi4uLm5leHRhdXRoJTVEJTJGcm91dGUmcGFnZT0lMkZhcGklMkZhdXRoJTJGJTVCLi4ubmV4dGF1dGglNUQlMkZyb3V0ZSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmF1dGglMkYlNUIuLi5uZXh0YXV0aCU1RCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRndhbGtlciUyRkRlc2t0b3AlMkZkb25qdWFucGVkcm8uZ2l0aHViLmlvJTJGYXBwJmFwcFBhdGhzPSUyRmFwaSUyRmF1dGglMkYlNUIuLi5uZXh0YXV0aCU1RCUyRnJvdXRlJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PWV4cG9ydCZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEIQ_3D_3D_nextConfigOutput_export_preferredRegion_middlewareConfig_e30_3D_","edge_route_module_wrapper","obj","dec","opt","eqIdx","endIdx","lastIndexOf","val","tryDecode","fieldContentRegExp","isNaN","__toString","toUTCString","priority","decodeURIComponent","__WEBPACK_AMD_DEFINE_RESULT__","extend","concat","enumerize","lowerize","rgxMapper","strMapper","ME","XP","Vista","RT","browser","cpu","device","engine","os","UAParser","getResult","userAgentData","getBrowser","brave","isBrave","getCPU","getDevice","mobile","standalone","maxTouchPoints","getEngine","getOS","platform","ua","getUA","setUA","VERSION","BROWSER","CPU","DEVICE","ENGINE","OS","__webpack_require__","amdO","jQuery","Zepto","__nccwpck_require__","ab","__dirname"],"sourceRoot":""}